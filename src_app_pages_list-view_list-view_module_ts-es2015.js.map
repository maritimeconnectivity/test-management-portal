{"version":3,"sources":["./node_modules/rxjs-compat/Observable.js","./node_modules/rxjs/Observable.js","./node_modules/rxjs/internal/Observable.js","./node_modules/rxjs/internal/Observer.js","./node_modules/rxjs/internal/Subscriber.js","./node_modules/rxjs/internal/Subscription.js","./node_modules/rxjs/internal/config.js","./node_modules/rxjs/internal/symbol/observable.js","./node_modules/rxjs/internal/symbol/rxSubscriber.js","./node_modules/rxjs/internal/util/UnsubscriptionError.js","./node_modules/rxjs/internal/util/canReportError.js","./node_modules/rxjs/internal/util/hostReportError.js","./node_modules/rxjs/internal/util/identity.js","./node_modules/rxjs/internal/util/isArray.js","./node_modules/rxjs/internal/util/isFunction.js","./node_modules/rxjs/internal/util/isObject.js","./node_modules/rxjs/internal/util/pipe.js","./node_modules/rxjs/internal/util/toSubscriber.js","./src/app/backend-api/identity-registry/api/api.ts","./src/app/backend-api/identity-registry/index.ts","./src/app/backend-api/identity-registry/model/allowedAgentRole.ts","./src/app/backend-api/identity-registry/model/certificate.ts","./src/app/backend-api/identity-registry/model/identityProviderAttribute.ts","./src/app/backend-api/identity-registry/model/models.ts","./src/app/backend-api/identity-registry/model/orgMrnLogoBody.ts","./src/app/backend-api/identity-registry/model/orgMrnLogoBody1.ts","./src/app/backend-api/identity-registry/model/orgMrnLogoBody2.ts","./src/app/backend-api/identity-registry/model/orgMrnLogoBody3.ts","./src/app/backend-api/identity-registry/model/organization.ts","./src/app/backend-api/identity-registry/model/pageable.ts","./src/app/backend-api/identity-registry/model/pemCertificate.ts","./src/app/backend-api/identity-registry/model/service.ts","./src/app/backend-api/identity-registry/model/sort.ts","./src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody.ts","./src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody1.ts","./src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody2.ts","./src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody3.ts","./src/app/pages/list-view/detail/detail.component.ts","./src/app/pages/list-view/detail/detail.component.html","./src/app/pages/list-view/list-view-routing.module.ts","./src/app/pages/list-view/list-view.module.ts","./src/app/pages/list-view/list/list.component.ts","./src/app/pages/list-view/list/list.component.html"],"names":[],"mappings":";;;;;;;;;AAAa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB,mBAAO,CAAC,qCAA0B;AACrD,kBAAkB;AAClB,sC;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,SAAS,mBAAO,CAAC,mCAAwB;AACzC,sC;;;;;;;;;;;ACNa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uBAAuB,mBAAO,CAAC,kCAAuB;AACtD,qBAAqB,mBAAO,CAAC,gCAAqB;AAClD,mBAAmB,mBAAO,CAAC,gCAAqB;AAChD,aAAa,mBAAO,CAAC,wBAAa;AAClC,eAAe,mBAAO,CAAC,qBAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE,kBAAkB,oBAAoB,EAAE,eAAe,uBAAuB,EAAE;AAC9I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;ACpHa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe,mBAAO,CAAC,qBAAU;AACjC,wBAAwB,mBAAO,CAAC,mCAAwB;AACxD,aAAa;AACb;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA,oC;;;;;;;;;;;ACjBa;AACb;AACA;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB,mBAAO,CAAC,8BAAmB;AAC9C,iBAAiB,mBAAO,CAAC,uBAAY;AACrC,qBAAqB,mBAAO,CAAC,2BAAgB;AAC7C,qBAAqB,mBAAO,CAAC,4CAAiC;AAC9D,eAAe,mBAAO,CAAC,qBAAU;AACjC,wBAAwB,mBAAO,CAAC,mCAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,aAAa;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sBAAsB;AACtB,sC;;;;;;;;;;;ACrPa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gBAAgB,mBAAO,CAAC,2BAAgB;AACxC,iBAAiB,mBAAO,CAAC,4BAAiB;AAC1C,mBAAmB,mBAAO,CAAC,8BAAmB;AAC9C,4BAA4B,mBAAO,CAAC,uCAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChoBAAoB;AACpB;AACA,+CAA+C,mGAAmG,EAAE;AACpJ;AACA,wC;;;;;;;;;;;AC5Ia;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,kC;;;;;;;;;;;ACnBa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB,iBAAiB,4EAA4E,EAAE;AACjH,sC;;;;;;;;;;;ACHa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;AACD,sBAAsB;AACtB,wC;;;;;;;;;;;ACRa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA,wGAAwG,sCAAsC,EAAE;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA,CA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","file":"src_app_pages_list-view_list-view_module_ts-es2015.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observable_1 = require(\"rxjs/internal/Observable\");\nexports.Observable = Observable_1.Observable;\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"rxjs-compat/Observable\"));\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar canReportError_1 = require(\"./util/canReportError\");\nvar toSubscriber_1 = require(\"./util/toSubscriber\");\nvar observable_1 = require(\"./symbol/observable\");\nvar pipe_1 = require(\"./util/pipe\");\nvar config_1 = require(\"./config\");\nvar Observable = (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError_1.canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config_1.config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError_1.hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"../internal/symbol/rxSubscriber\");\nvar config_1 = require(\"./config\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError_1.hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config_1.config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config_1.config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexports.SafeSubscriber = SafeSubscriber;\n//# sourceMappingURL=Subscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar isArray_1 = require(\"./util/isArray\");\nvar isObject_1 = require(\"./util/isObject\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar UnsubscriptionError_1 = require(\"./util/UnsubscriptionError\");\nvar Subscription = (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexports.config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.observable = (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rxSubscriber = (function () {\n    return typeof Symbol === 'function'\n        ? Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + Math.random();\n})();\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UnsubscriptionErrorImpl = (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexports.UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nfunction canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber_1.Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\nexports.canReportError = canReportError;\n//# sourceMappingURL=canReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\nexports.hostReportError = hostReportError;\n//# sourceMappingURL=hostReportError.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction identity(x) {\n    return x;\n}\nexports.identity = identity;\n//# sourceMappingURL=identity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isObject(x) {\n    return x !== null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar identity_1 = require(\"./identity\");\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\nfunction pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity_1.identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Subscriber_1 = require(\"../Subscriber\");\nvar rxSubscriber_1 = require(\"../symbol/rxSubscriber\");\nvar Observer_1 = require(\"../Observer\");\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map","export * from './agentController.service';\nimport { AgentControllerService } from './agentController.service';\nexport * from './certificateController.service';\nimport { CertificateControllerService } from './certificateController.service';\nexport * from './deviceController.service';\nimport { DeviceControllerService } from './deviceController.service';\nexport * from './logoController.service';\nimport { LogoControllerService } from './logoController.service';\nexport * from './mmsController.service';\nimport { MmsControllerService } from './mmsController.service';\nexport * from './organizationController.service';\nimport { OrganizationControllerService } from './organizationController.service';\nexport * from './roleController.service';\nimport { RoleControllerService } from './roleController.service';\nexport * from './serviceController.service';\nimport { ServiceControllerService } from './serviceController.service';\nexport * from './userController.service';\nimport { UserControllerService } from './userController.service';\nexport * from './vesselController.service';\nimport { VesselControllerService } from './vesselController.service';\nexport * from './vesselImageController.service';\nimport { VesselImageControllerService } from './vesselImageController.service';\nexport const APIS = [AgentControllerService, CertificateControllerService, DeviceControllerService, LogoControllerService, MmsControllerService, OrganizationControllerService, RoleControllerService, ServiceControllerService, UserControllerService, VesselControllerService, VesselImageControllerService];\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object for representing a role that an agent is allowed to have\n */\nexport interface AllowedAgentRole { \n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * The role that you want the agent to be allowed to have\n     */\n    roleName: AllowedAgentRole.RoleNameEnum;\n}\nexport namespace AllowedAgentRole {\n    export type RoleNameEnum = 'ROLE_ORG_ADMIN' | 'ROLE_ENTITY_ADMIN' | 'ROLE_USER_ADMIN' | 'ROLE_VESSEL_ADMIN' | 'ROLE_SERVICE_ADMIN' | 'ROLE_DEVICE_ADMIN' | 'ROLE_MMS_ADMIN' | 'ROLE_USER';\n    export const RoleNameEnum = {\n        ORGADMIN: 'ROLE_ORG_ADMIN' as RoleNameEnum,\n        ENTITYADMIN: 'ROLE_ENTITY_ADMIN' as RoleNameEnum,\n        USERADMIN: 'ROLE_USER_ADMIN' as RoleNameEnum,\n        VESSELADMIN: 'ROLE_VESSEL_ADMIN' as RoleNameEnum,\n        SERVICEADMIN: 'ROLE_SERVICE_ADMIN' as RoleNameEnum,\n        DEVICEADMIN: 'ROLE_DEVICE_ADMIN' as RoleNameEnum,\n        MMSADMIN: 'ROLE_MMS_ADMIN' as RoleNameEnum,\n        USER: 'ROLE_USER' as RoleNameEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing a certificate\n */\nexport interface Certificate { \n    /**\n     * The ID of the entity in the form of a sequential integer\n     */\n    readonly id?: number;\n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * The certificate in PEM format\n     */\n    readonly certificate?: string;\n    /**\n     * When the certificate is valid from\n     */\n    readonly start?: Date;\n    /**\n     * When the certificate is valid until\n     */\n    readonly end?: Date;\n    /**\n     * The serial number of the certificate\n     */\n    readonly serialNumber?: number;\n    /**\n     * Whether the certificate has been revoked\n     */\n    readonly revoked?: boolean;\n    /**\n     * The time of revocation of the certificate\n     */\n    readonly revokedAt?: Date;\n    /**\n     * The revocation reason\n     */\n    readonly revokeReason?: string;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing an identity provider attribute\n */\nexport interface IdentityProviderAttribute { \n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * OpenId Connect or SAML2 attribute name\n     */\n    attributeName: IdentityProviderAttribute.AttributeNameEnum;\n    /**\n     * OpenId Connect or SAML2 attribute value\n     */\n    attributeValue: string;\n}\nexport namespace IdentityProviderAttribute {\n    export type AttributeNameEnum = 'importUrl, validateSignature, signingCertificate, singleLogoutServiceUrl, postBindingResponse, postBindingAuthnRequest, singleSignOnServiceUrl, wantAuthnRequestsSigned, userInfoUrl, tokenUrl, authorizationUrl, logoutUrl, issuer, publicKeySignatureVerifier, clientId, clientSecret,providerType, firstNameAttr, lastNameAttr, emailAttr, usernameAttr, permissionsAttr';\n    export const AttributeNameEnum = {\n        ImportUrlValidateSignatureSigningCertificateSingleLogoutServiceUrlPostBindingResponsePostBindingAuthnRequestSingleSignOnServiceUrlWantAuthnRequestsSignedUserInfoUrlTokenUrlAuthorizationUrlLogoutUrlIssuerPublicKeySignatureVerifierClientIdClientSecretproviderTypeFirstNameAttrLastNameAttrEmailAttrUsernameAttrPermissionsAttr: 'importUrl, validateSignature, signingCertificate, singleLogoutServiceUrl, postBindingResponse, postBindingAuthnRequest, singleSignOnServiceUrl, wantAuthnRequestsSigned, userInfoUrl, tokenUrl, authorizationUrl, logoutUrl, issuer, publicKeySignatureVerifier, clientId, clientSecret,providerType, firstNameAttr, lastNameAttr, emailAttr, usernameAttr, permissionsAttr' as AttributeNameEnum\n    };\n}","export * from './agent';\nexport * from './allowedAgentRole';\nexport * from './certificate';\nexport * from './certificateBundle';\nexport * from './certificateRevocation';\nexport * from './device';\nexport * from './identityProviderAttribute';\nexport * from './mMS';\nexport * from './orgMrnLogoBody';\nexport * from './orgMrnLogoBody1';\nexport * from './orgMrnLogoBody2';\nexport * from './orgMrnLogoBody3';\nexport * from './organization';\nexport * from './pageAgent';\nexport * from './pageDevice';\nexport * from './pageMMS';\nexport * from './pageOrganization';\nexport * from './pageService';\nexport * from './pageUser';\nexport * from './pageVessel';\nexport * from './pageable';\nexport * from './pemCertificate';\nexport * from './role';\nexport * from './service';\nexport * from './sort';\nexport * from './user';\nexport * from './vessel';\nexport * from './vesselAttribute';\nexport * from './vesselMrnVesselImageBody';\nexport * from './vesselMrnVesselImageBody1';\nexport * from './vesselMrnVesselImageBody2';\nexport * from './vesselMrnVesselImageBody3';\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody1 { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody2 { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody3 { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Certificate } from './certificate';\nimport { Entity } from './entity';\nimport { IdentityProviderAttribute } from './identityProviderAttribute';\n\n/**\n * Model object representing an organization\n */\nexport interface Organization extends Entity{\n    /**\n     * The name of the organization\n     */\n    name: string;\n    /**\n     * Maritime Connectivity Platform Maritime Resource Name\n     */\n    mrn: string;\n    /**\n     * Subsidiary Maritime Resource Name\n     */\n    mrnSubsidiary?: string;\n    /**\n     * URL of the MMS that the organization is registered with\n     */\n    homeMMSUrl?: string;\n    /**\n     * The email of the organization\n     */\n    email: string;\n    /**\n     * The URL of the organization's website\n     */\n    url: string;\n    /**\n     * The address of the organization\n     */\n    address: string;\n    /**\n     * The country that the organization is located in\n     */\n    country: string;\n    /**\n     * Type of identity federation used by organization\n     */\n    federationType?: Organization.FederationTypeEnum;\n    /**\n     * The identity provider attributes of the organization\n     */\n    identityProviderAttributes?: Array<IdentityProviderAttribute>;\n}\nexport namespace Organization {\n    export type FederationTypeEnum = 'test-idp' | 'own-idp' | 'external-idp';\n    export const FederationTypeEnum = {\n        TestIdp: 'test-idp' as FederationTypeEnum,\n        OwnIdp: 'own-idp' as FederationTypeEnum,\n        ExternalIdp: 'external-idp' as FederationTypeEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Pageable { \n    page?: number;\n    size?: number;\n    sort?: Array<string>;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing an PEM encoded certificate\n */\nexport interface PemCertificate { \n    /**\n     * The private key of the certificate\n     */\n    privateKey?: string;\n    /**\n     * The public key of the certificate\n     */\n    publicKey?: string;\n    /**\n     * The certificate\n     */\n    certificate?: string;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Certificate } from './certificate';\nimport { Entity } from './entity';\nimport { Vessel } from './vessel';\n\n/**\n * Model object representing a service\n */\nexport interface Service extends Entity{\n    /**\n     * The ID of the organization that the entity belongs to\n     */\n    idOrganization?: number;\n    /**\n     * Maritime Connectivity Platform Maritime Resource Name\n     */\n    mrn: string;\n    /**\n     * Subsidiary Maritime Resource Name\n     */\n    mrnSubsidiary?: string;\n    /**\n     * URL of MMS that the identity is registered\n     */\n    homeMMSUrl?: string;\n    /**\n     * Permissions as assigned from the organization\n     */\n    permissions?: string;\n    /**\n     * The name of the entity\n     */\n    name: string;\n    /**\n     * Access type of the OpenId Connect client\n     */\n    oidcAccessType?: Service.OidcAccessTypeEnum;\n    /**\n     * The client id of the service in MCP. Will be generated.\n     */\n    readonly oidcClientId?: string;\n    /**\n     * The client secret of the service in MCP. Will be generated.\n     */\n    readonly oidcClientSecret?: string;\n    /**\n     * The OpenId Connect redirect uri of service.\n     */\n    oidcRedirectUri?: string;\n    /**\n     * The domain name the service will be available on. Used in the issued certificates for the service.\n     */\n    certDomainName?: string;\n    /**\n     * The version of this service instance.\n     */\n    instanceVersion: string;\n    vessel?: Vessel;\n}\nexport namespace Service {\n    export type OidcAccessTypeEnum = 'public, bearer-only, confidential';\n    export const OidcAccessTypeEnum = {\n        PublicBearerOnlyConfidential: 'public, bearer-only, confidential' as OidcAccessTypeEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Sort { \n    sorted?: boolean;\n    unsorted?: boolean;\n    empty?: boolean;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody { \n    image: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody1 { \n    image: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody2 { \n    image: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody3 { \n    image: Blob;\n}","import { InstanceDtDto } from './../../../backend-api/service-registry/model/instanceDtDto';\nimport { FormGroup } from '@angular/forms';\nimport { InstanceControllerService } from './../../../backend-api/service-registry/api/instanceController.service';\nimport { formatVesselToUpload } from '../../../util/dataFormatter';\nimport { Device } from './../../../backend-api/identity-registry/model/device';\nimport { Location } from '@angular/common';\nimport { Organization } from './../../../backend-api/identity-registry/model/organization';\nimport { Entity } from './../../../backend-api/identity-registry/model/entity';\nimport { EntityTypes, MenuType, MenuTypeIconNames, MenuTypeNames } from '../../../shared/models/menuType';\nimport { ColumnForMenu } from '../../../shared/models/columnForMenu';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DeviceControllerService, MMS, MmsControllerService, OrganizationControllerService, Role, RoleControllerService, Service, ServiceControllerService, User, UserControllerService, Vessel, VesselControllerService } from '../../../backend-api/identity-registry';\nimport { Observable } from 'rxjs/Observable';\nimport { NotifierService } from 'angular-notifier';\nimport { AuthService } from '../../../auth/auth.service';\nimport { AuthPermission, AuthPermissionForMSR, PermissionResolver, rolesToPermission } from '../../../auth/auth.permission';\nimport { ORG_ADMIN_AT_MIR } from '../../../shared/app.constants';\n\nimport RoleNameEnum = Role.RoleNameEnum;\n\n@Component({\n  selector: 'ngx-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n  title = '';\n  isLoading = false;\n  menuType = 'device';\n  iconName = 'circle';\n  instanceVersion = '';\n  noBacklink = false;\n  isForNew = false;\n  columnForMenu = ColumnForMenu[this.menuType];\n  contextForAttributes = 'detail';\n  menuTypeName = '';\n  entityMrn = '';\n  orgMrn = '';\n  canApproveOrg = false;\n  values = {};\n  activeCertificates = [];\n  revokedCertificates = [];\n  isEditing = false;\n  shortId = '';\n  numberId = -1;\n  isLoaded = true;\n  mrnMask = '';\n  isForOrgService = false;\n  orgShortId = undefined;\n  defaultPermissions = undefined;\n\n  @ViewChild('editableForm') editableForm;\n  @ViewChild('supplementForm') supplementForm;\n\n  ngOnInit(): void {\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router,\n    private userControllerService: UserControllerService,\n    private deviceControllerService: DeviceControllerService,\n    private roleControllerService: RoleControllerService,\n    private vesselControllerService: VesselControllerService,\n    private serviceControllerService: ServiceControllerService,\n    private mmsControllerService: MmsControllerService,\n    private organizationControllerService: OrganizationControllerService,\n    private instanceControllerService: InstanceControllerService,\n    private notifierService: NotifierService,\n    private authService: AuthService,\n    private location: Location,\n    ) {\n      const arrays = this.router.url.split(\"/\");\n      const menuType = arrays[arrays.length - 2];\n      if (menuType === MenuType.InstanceOfOrg) {\n        this.isForOrgService = true;\n        this.menuType = MenuType.Instance;\n      } else {\n        this.menuType = menuType.replace('-', '').substr(0, menuType.length - 1);\n      }\n      this.entityMrn = decodeURIComponent(this.route.snapshot.paramMap.get(\"id\"));\n      this.orgMrn = this.authService.authState.orgMrn;\n      this.isForNew = this.entityMrn === 'new';\n      this.numberId = this.menuType === MenuType.Instance ?\n        parseInt(this.entityMrn) : -1;\n      \n      // preventing refresh\n      this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n      //this is my organization page when it comes with no name\n      this.route.queryParams.subscribe(e =>\n        {\n          this.noBacklink = e.name === undefined;\n          this.title = e.name;\n          this.instanceVersion = e.version;\n        });\n\n      this.roleControllerService.getMyRole(this.authService.authState.orgMrn).subscribe(\n        roles => {\n          this.authService.authState.permission = rolesToPermission(roles);\n          if (this.menuType === MenuType.OrgCandidate &&\n            PermissionResolver.canApproveOrg(this.authService.authState.permission)) {\n            this.canApproveOrg = true;\n          }\n      });\n\n      this.iconName = MenuTypeIconNames[this.menuType];\n\n      if (this.isForNew) {\n        this.isEditing = true;\n        this.title = 'New ' + this.menuType;\n      } else {\n        this.fetchFieldValues();\n      }\n  }\n\n  cancel() {\n    this.location.back();\n  }\n\n  settle(result: boolean) {\n    this.isLoading = false;\n    if (this.editableForm) {\n      this.editableForm.settled(result);\n    }\n  }\n\n  fetchFieldValues() {\n    if(ColumnForMenu.hasOwnProperty(this.menuType === MenuType.InstanceOfOrg ?\n        MenuType.Instance : this.menuType)) {\n      this.isLoading = true;\n      if (Object.values(MenuType).includes(this.menuType as MenuType)) {\n        if(this.menuType === MenuType.OrgCandidate){\n          this.organizationControllerService.getUnapprovedOrganizations().subscribe(\n            data => {\n              this.settle(true);\n              this.editableForm.adjustTitle(this.menuType, this.title);\n              this.editableForm.adjustData(data.content.filter(d => d.mrn === this.entityMrn).pop());\n              this.orgShortId = this.entityMrn.split(':').pop();\n              this.defaultPermissions = ORG_ADMIN_AT_MIR;\n            },\n            error => {\n              this.notifierService.notify('error', error.message);\n              this.router.navigateByUrl('/pages/404');\n            },\n          );\n        } else if(this.menuType === MenuType.Role) {\n          const id = parseInt(this.entityMrn);\n          this.roleControllerService.getRole(this.orgMrn, id).subscribe(\n            data => {\n              this.settle(true);\n              this.numberId = data.id;\n              this.editableForm.adjustTitle(this.menuType, this.title);\n              this.editableForm.adjustData(data);\n            },\n            error => {\n              this.notifierService.notify('error', error.message);\n              this.router.navigateByUrl('/pages/404');\n            },\n          )\n        } else {\n          this.route.queryParams.subscribe(e => this.loadDataContent(this.menuType, this.authService.authState.user.organization, this.entityMrn, e.version, this.numberId).subscribe(\n            data => {\n              this.settle(true);\n              if (this.menuType === MenuType.User) {\n                this.title = (data as User).firstName + \" \" + (data as User).lastName;\n              } else if (this.menuType === MenuType.Organization) {\n                this.title = (data as Organization).name;\n              }\n              this.editableForm.adjustTitle(this.menuType, this.title);\n              this.editableForm.adjustData(data);\n            },\n            error => {\n              this.notifierService.notify('error', error.message);\n              this.router.navigateByUrl('/pages/404');\n            },\n          ));\n        }\n      } else {\n        this.settle(false);\n          throw new Error(`There's no such thing as '${this.menuType}DataService'`);\n      }\n    } else {\n      this.settle(false);\n      throw new Error(`There's no '${this.menuType}DataService' in ColumnForMenu`);\n    }\n  }\n\n  refreshData() {\n    this.fetchFieldValues();\n  }\n\n  moveToListPage() {\n    this.router.navigate(['../../' + this.menuType + 's'], {relativeTo: this.route});\n  }\n\n  delete() {\n    let message = 'Are you sure you want to delete?';\n    message = EntityTypes.indexOf(this.menuType)>=0 ?\n      message + ' All certificates under this entity will be revoked.' : message;\n    if (confirm(message)) {\n      this.deleteData(this.menuType, this.orgMrn, this.entityMrn, this.instanceVersion).subscribe(\n        res => {\n          this.notifierService.notify('success', this.title + ' has been successfully deleted');\n          this.moveToListPage();\n        },\n        err => this.notifierService.notify('error', 'There was error in deletion - ' + err.error.message),\n      );\n    }\n  }\n\n  approve() {\n    if (this.menuType === MenuType.OrgCandidate) {\n      if (!this.supplementForm.formGroup.valid) {\n        this.notifierService.notify('error', 'There is missing information of administrator');\n      } else {\n        this.organizationControllerService.approveOrganization(this.entityMrn).subscribe(\n          res => {\n            this.createAdminRole().subscribe(\n              role => {\n                this.createUser(this.supplementForm.getFormValue()).subscribe(\n                  user => {\n                    this.notifierService.notify('success', 'Organization Approved');\n                    this.moveToListPage();\n                  },\n                  err => this.notifierService.notify('error', 'The organization was approved, but user creation failed. You can go to organizations and try to create the user again later - ' + err.error.message),\n                );\n              },\n              err => this.notifierService.notify('error', 'The organization was approved, but role creation failed - ' + err.error.message),\n            );\n          },\n          err => this.notifierService.notify('error', 'The organization is not approved - ' + err.error.message),\n        );\n      }\n    }\n  }\n\n  createAdminRole() {\n\t\tconst role: Role = {\n\t\t\tpermission: ORG_ADMIN_AT_MIR, // TODO is this correct? Revise when creating the new role-functionality\n\t\t\troleName: RoleNameEnum.ORGADMIN,\n\t\t};\n\n\t\treturn this.roleControllerService.createRole(role, this.entityMrn);\n\t}\n\n  createUser(user: any) {\n    if (!user) {\n      throw new Error('No user data');\n    }\n\t\treturn this.userControllerService.createUser(user, this.entityMrn);\n\t}\n\n  submit(body: any) {\n    if (this.menuType === 'role') {\n      this.organizationControllerService.getOrganizationByMrn(this.orgMrn).subscribe(\n        res => this.submitDataToBackend({ ...body, idOrganization: res.id}),\n        err => this.notifierService.notify('error', 'Error in fetching organization information'),\n      );\n    } else {\n      this.submitDataToBackend(body, body.mrn);\n    }\n  }\n\n  submitDataToBackend(body: object, mrn?: string) {\n    if (this.isForNew) {\n      this.registerData(this.menuType, body, this.authService.authState.orgMrn).subscribe(\n        res => {\n          this.notifierService.notify('success', 'New ' + this.menuType + ' has been created');\n          this.settle(true);\n          this.moveToListPage();\n        },\n        err => {\n          this.notifierService.notify('error', 'Creation has failed - ' + err.error.message);\n          this.settle(true);\n        }\n      );\n    } else {\n      // editing\n      this.updateData(this.menuType, body, this.authService.authState.orgMrn, mrn, this.instanceVersion, this.numberId).subscribe(\n        res => {\n          this.notifierService.notify('success', this.menuType + ' has been updated');\n          if(this.editableForm) {\n            this.editableForm.adjustData(body);\n            this.editableForm.invertIsEditing();\n          }\n          this.settle(true);\n        },\n        err => {\n          this.notifierService.notify('error', 'Update has failed - ' + err.error.message);\n          this.settle(true);\n        }\n      );\n    }\n  }\n\n  registerData = (context: string, body: object, orgMrn: string): Observable<Entity> => {\n    if (context === MenuType.User) {\n      return this.userControllerService.createUser(body as User, orgMrn);\n    } else if (context === MenuType.Device) {\n      return this.deviceControllerService.createDevice(body as Device, orgMrn);\n    } else if (context === MenuType.Vessel) {\n      return this.vesselControllerService.createVessel(body as Vessel, orgMrn);\n    } else if (context === MenuType.MMS) {\n      return this.mmsControllerService.createMMS(body as MMS, orgMrn);\n    } else if (context === MenuType.Service) {\n      return this.serviceControllerService.createService(body as Service, orgMrn);\n    } else if (context === MenuType.Organization) {\n      return this.organizationControllerService.applyOrganization(body as Organization);\n    } else if (context === MenuType.Role) {\n      return this.roleControllerService.createRole(body as Role, orgMrn);\n    } else if (context === MenuType.Instance) {\n      return this.instanceControllerService.createInstance(body as InstanceDtDto);\n    }\n    return new Observable();\n  }\n\n  updateData = (context: string, body: object, orgMrn: string, entityMrn: string, version?: string, instanceId?: number): Observable<Entity> => {\n    if (context === MenuType.User) {\n      return this.userControllerService.updateUser(body as User, orgMrn, entityMrn);\n    } else if (context === MenuType.Device) {\n      return this.deviceControllerService.updateDevice(body as Device, orgMrn, entityMrn);\n    } else if (context === MenuType.Vessel) {\n      return this.vesselControllerService.updateVessel(formatVesselToUpload(body) as Vessel, orgMrn, entityMrn);\n    } else if (context === MenuType.MMS) {\n      return this.mmsControllerService.updateMMS(body as MMS, orgMrn, entityMrn);\n    } else if (context === MenuType.Service && version) {\n      return this.serviceControllerService.updateService(body as Service, orgMrn, entityMrn, version);\n    } else if (context === MenuType.Organization) {\n      return this.organizationControllerService.updateOrganization(body as Organization, entityMrn);\n    } else if (context === MenuType.Role) {\n      return this.roleControllerService.updateRole(body as Role, orgMrn, this.numberId);\n    } else if (context === MenuType.Instance) {\n      return this.instanceControllerService.updateInstance(Object.assign({}, body, {id: instanceId}) as InstanceDtDto, instanceId);\n    }\n    return new Observable();\n  }\n\n  deleteData = (context: string, orgMrn: string, entityMrn: string, version?: string, instanceId?: number): Observable<Entity> => {\n    if (context === MenuType.User) {\n      return this.userControllerService.deleteUser(orgMrn, entityMrn);\n    } else if (context === MenuType.Device) {\n      return this.deviceControllerService.deleteDevice(orgMrn, entityMrn);\n    } else if (context === MenuType.Vessel) {\n      return this.vesselControllerService.deleteVessel(orgMrn, entityMrn);\n    } else if (context === MenuType.MMS) {\n      return this.mmsControllerService.deleteMMS(orgMrn, entityMrn);\n    } else if (context === MenuType.Service && version) {\n      return this.serviceControllerService.deleteService(orgMrn, entityMrn, version);\n    } else if (context === MenuType.Organization) {\n      return this.organizationControllerService.deleteOrg(entityMrn);\n    } else if (context === MenuType.Role) {\n      return this.roleControllerService.deleteRole(orgMrn, this.numberId);\n    } else if (context === MenuType.Instance) {\n      return this.instanceControllerService.deleteInstance(this.numberId);\n    }\n    return new Observable();\n  }\n\n  loadDataContent = (context: string, orgMrn: string, entityMrn: string, version?: string, instanceId?: number): Observable<Entity> => {\n    if (context === MenuType.User) {\n      return this.userControllerService.getUser(orgMrn, entityMrn);\n    } else if (context === MenuType.Device) {\n      return this.deviceControllerService.getDevice(orgMrn, entityMrn);\n    } else if (context === MenuType.Vessel) {\n      return this.vesselControllerService.getVessel(orgMrn, entityMrn);\n    } else if (context === MenuType.MMS) {\n      return this.mmsControllerService.getMMS(orgMrn, entityMrn);\n    } else if (context === MenuType.Service && version) {\n      return this.serviceControllerService.getServiceVersion(orgMrn, entityMrn, version);\n    } else if (context === MenuType.Organization) {\n      return this.organizationControllerService.getOrganizationByMrn(entityMrn);\n    } else if (context === MenuType.Instance) {\n      return this.instanceControllerService.getInstance(instanceId);\n    }\n    return new Observable();\n  }\n\n  isAdmin = (): boolean => {\n    const context = this.menuType;\n    if (context === MenuType.User) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.UserAdmin);\n    } else if (context === MenuType.Device) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.DeviceAdmin);\n    } else if (context === MenuType.Vessel) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.VesselAdmin);\n    } else if (context === MenuType.MMS) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.MMSAdmin);\n    } else if (context === MenuType.Service) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.ServiceAdmin);\n    } else if (context === MenuType.Organization || context === MenuTypeNames.role) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.OrgAdmin);\n    } else if (context === MenuType.Instance) {\n      return this.isForNew ? // if it is for new one\n          this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.OrgServiceAdmin) ||\n          this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.MSRAdmin) :\n          this.editableForm ? // when it is not initiated\n          // when it is for editing\n          this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.MSRAdmin) ||\n            (this.editableForm && this.editableForm.isOurServiceInstance() &&\n            this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.OrgServiceAdmin)) :\n          this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.MSRAdmin);\n    } else {\n      return false;\n    }\n  }\n}\n\n","<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div *ngIf=\"!noBacklink && !isForNew\">\n      <button nbButton status=\"info\" ghost (click)=\"cancel()\">\n        <nb-icon icon=\"arrow-ios-back\" pack=\"eva\"></nb-icon> \n        Back to {{entityTypeName}} list\n      </button>\n    </div>\n    <ngx-editable-form #editableForm\n      [menuType]=\"menuType\" [isForNew]=\"isForNew\"\n      [isAdmin]=\"isAdmin()\" [title]=\"title\" [iconName]=\"iconName\"\n      [canApproveOrg]=\"canApproveOrg\" [entityMrn]=\"entityMrn\" [orgMrn]=\"orgMrn\"\n      [instanceVersion]=\"instanceVersion\" [isLoading]=\"isLoading\" [isLoaded]=\"isLoaded\"\n      [hasHeader]=\"true\" [showButtons]=\"true\" (onApprove)=\"approve()\"\n      (onCancel)=\"cancel()\" (onSubmit)=\"submit($event)\" (onDelete)=\"delete()\" (onRefresh)=\"refreshData()\"\n    ></ngx-editable-form>\n    <!-- admin user form for approving org menu -->\n    <ngx-editable-form #supplementForm *ngIf=\"menuType === 'orgcandidate' && orgShortId\"\n      [menuType]=\"'user'\" [isForNew]=\"true\" [orgShortId]=\"orgShortId\" [defaultPermissions]=\"defaultPermissions\"\n      [isAdmin]=\"isAdmin()\" [title]=\"'Administrator account'\" [iconName]=\"'user'\"\n      [canApproveOrg]=\"canApproveOrg\" [entityMrn]=\"\" [orgMrn]=\"entityMrn\"\n      [instanceVersion]=\"instanceVersion\" [isLoading]=\"isLoading\" [isLoaded]=\"isLoaded\"\n      [hasHeader]=\"true\" [showButtons]=\"false\" (onApprove)=\"approve()\"\n      (onCancel)=\"cancel()\" (onSubmit)=\"submit($event)\" (onDelete)=\"delete()\" (onRefresh)=\"refreshData()\"\n    ></ngx-editable-form>\n  </div>\n</div>","import { ListViewComponent } from './list-view.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { NotFoundComponent } from '../miscellaneous/not-found/not-found.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ListViewComponent,\n  children: [\n    {\n      path: '',\n      component: ListComponent,\n    },\n    {\n      path: ':id',\n      component: DetailComponent,\n    },\n    {\n      path: '**',\n      component: NotFoundComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListViewRoutingModule { }\n","import { SharedModule } from './../../shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListViewRoutingModule } from './list-view-routing.module';\nimport { ListComponent } from './list/list.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { NbButtonModule, NbCardModule, NbDatepickerModule, NbIconModule, NbInputModule, NbPopoverModule, NbSelectModule, NbSpinnerModule, NbTabsetModule } from '@nebular/theme';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { NotifierModule, NotifierService } from 'angular-notifier';\nimport { customNotifierOptions } from '../../shared/customNotifierOption';\nimport { ThemeModule } from '../../@theme/theme.module';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    DetailComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    NbInputModule,\n    NbCardModule,\n    NbIconModule,\n    NbSpinnerModule,\n    NbTabsetModule,\n    NbButtonModule,\n    NbPopoverModule,\n    NbSelectModule,\n    ThemeModule,\n    NbDatepickerModule,\n    Ng2SmartTableModule,\n    ListViewRoutingModule,\n  ],\n  providers: [\n    NotifierService,\n  ],\n})\nexport class ListViewModule { }\n","import { AuthService } from './../../../auth/auth.service';\nimport { InstanceControllerService } from './../../../backend-api/service-registry/api/instanceController.service';\nimport { ServiceControllerService } from './../../../backend-api/identity-registry/api/serviceController.service';\nimport { DeviceControllerService } from './../../../backend-api/identity-registry/api/deviceController.service';\nimport { Observable } from 'rxjs/Observable';\nimport { RoleControllerService } from './../../../backend-api/identity-registry/api/roleController.service';\nimport { Organization } from './../../../backend-api/identity-registry/model/organization';\nimport { OrganizationControllerService } from './../../../backend-api/identity-registry/api/organizationController.service';\nimport { UserControllerService } from './../../../backend-api/identity-registry/api/userController.service';\nimport { ColumnForMenu } from '../../../shared/models/columnForMenu';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { MenuType, MenuTypeIconNames, MenuTypeNames, EntityTypes } from '../../../shared/models/menuType';\nimport { NbIconLibraries } from '@nebular/theme';\nimport { NotifierService } from 'angular-notifier';\nimport { MmsControllerService, Role, VesselControllerService } from '../../../backend-api/identity-registry';\nimport { PageEntity } from '../../../backend-api/identity-registry/model/pageEntity';\nimport { InstanceDto, SearchControllerService } from '../../../backend-api/service-registry';\nimport { AuthPermission, AuthPermissionForMSR } from '../../../auth/auth.permission';\nimport { formatData, formatServiceData } from '../../../util/dataFormatter';\nimport { Entity } from '../../../backend-api/identity-registry/model/entity';\n\nconst capitalize = (s): string => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n@Component({\n  selector: 'ngx-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\n\nexport class ListComponent implements OnInit {\n\n  menuType: string = 'device';\n  title = ' for ';\n  contextForAttributes = 'list';\n  orgName = 'MCC';\n  orgMrn = '';\n  iconName = 'circle';\n  menuTypeName = '';\n  data = [];\n  isLoading = false;\n  settings;\n  mySettings = {\n    actions: {\n      edit: false,\n      position: 'right',\n    },\n    mode: 'external',\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: ColumnForMenu[this.menuType],\n    hideSubHeader: true,\n  };\n  showTables = true;\n  source: LocalDataSource = new LocalDataSource();\n  isForServiceForOrg = false;\n\n  constructor(private router: Router,\n    iconsLibrary: NbIconLibraries,\n    private userControllerService: UserControllerService,\n    private deviceControllerService: DeviceControllerService,\n    private roleControllerService: RoleControllerService,\n    private vesselControllerService: VesselControllerService,\n    private serviceControllerService: ServiceControllerService,\n    private instanceControllerService: InstanceControllerService,\n    private searchControllerService: SearchControllerService,\n    private mmsControllerService: MmsControllerService,\n    private organizationControllerService: OrganizationControllerService,\n    private notifierService: NotifierService,\n    private authService: AuthService,\n    ) {\n    this.menuType = this.router.url.split(\"/\").pop();\n    this.menuType = this.menuType.endsWith('s') ? this.menuType.replace('-', '').substr(0,this.menuType.length-1) :\n      this.menuType.replace('-', '');\n    if (this.menuType === MenuType.InstanceOfOrg) {\n      this.isForServiceForOrg = true;\n      this.menuType = MenuType.Instance;\n    }\n    if (Object.values(MenuType).includes(this.menuType as MenuType)) {\n      this.menuTypeName = MenuTypeNames[this.menuType];\n      this.iconName = MenuTypeIconNames[this.menuType];\n      this.orgMrn = this.authService.authState.orgMrn;\n      iconsLibrary.registerFontPack('fas', { packClass: 'fas', iconClassPrefix: 'fa' });\n    } else {\n      this.router.navigate(['**']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.fetchValues();\n  }\n\n  fetchValues() {\n    // filtered with context\n    if(ColumnForMenu.hasOwnProperty(this.menuType)) {\n      this.mySettings.columns = Object.assign({}, ...\n        Object.entries(ColumnForMenu[this.menuType]).filter(([k,v]) => Array.isArray(v['visibleFrom']) && v['visibleFrom'].includes(this.contextForAttributes)).map(([k,v]) => ({[k]:v}))\n      );\n      this.settings = Object.assign({}, this.mySettings);\n      // Not-approved organization list\n      this.title = `${capitalize(this.menuTypeName)} list`;\n      this.isLoading = true;\n\n      if (Object.values(MenuType).includes(this.menuType as MenuType)) {\n        if(this.menuType === MenuType.Organization || this.menuType === MenuType.OrgCandidate){\n          this.loadDataContent(this.menuType).subscribe(\n            res => {this.refreshData(this.formatResponse(res.content)); this.isLoading = false;},\n            error => this.notifierService.notify('error', error.message),\n          );\n        } else if(this.menuType === MenuType.Role){\n          this.loadMyOrganization().subscribe(\n            resOrg => this.loadRoles(resOrg.mrn).subscribe(\n              resData => {this.refreshData(resData); this.isLoading = false;},\n              error => this.notifierService.notify('error', error.message),\n            ),\n            error => this.notifierService.notify('error', error.message),\n          );\n        } else if(this.menuType === MenuType.Instance || this.menuType === MenuType.InstanceOfOrg){\n          this.loadServiceInstances(this.isForServiceForOrg ? this.orgMrn : undefined).subscribe(\n            resData => {this.refreshData(this.formatResponseForService(resData)); this.isLoading = false;},\n            error => this.notifierService.notify('error', error.message),\n          );\n        } else {\n          this.loadMyOrganization().subscribe(\n            resOrg => this.loadDataContent(this.menuType, resOrg.mrn).subscribe(\n              res => {this.refreshData(this.formatResponse(res.content)); this.isLoading = false;},\n              error => this.notifierService.notify('error', error.message),\n            ),\n            error => this.notifierService.notify('error', error.message),\n          );\n        }\n      } else {\n        this.isLoading = false;\n        throw new Error(`There's no such thing as '${this.menuType}DataService'`);\n      }\n    } else {\n      this.isLoading = false;\n      throw new Error(`There's no '${this.menuType}DataService' in ColumnForMenu`);\n    }\n  }\n\n  refreshData(data?: any) {\n    if (data) {\n      this.source.load(data);\n      this.data = data;\n    }\n    else {\n      this.source.load(this.data);\n    }\n  }\n\n  formatResponse(data: any[]) {\n    return data.map(d => formatData(d));\n  }\n\n  formatResponseForService(data: any[]) {\n    return data.map(d => formatServiceData(d));\n  }\n  \n  onDelete(event): void {\n    if (!this.isAdmin()) {\n      this.notifierService.notify('error', 'You don\\'t have right permission');\n    } else {\n      this.delete(this.menuType, this.orgMrn, event.data.mrn, event.data.instanceVersion, event.data.id);\n    }\n  }\n\n  delete(menuType: string, orgMrn: string, entityMrn: string, instanceVersion?: string, numberId?: number) {\n    let message = 'Are you sure you want to delete?';\n    message = EntityTypes.indexOf(this.menuType) >= 0 ?\n      message + ' All certificates under this entity will be revoked.' : message;\n    if (confirm(message)) {\n      this.deleteData(menuType, orgMrn, entityMrn, instanceVersion, numberId).subscribe(\n        res => {\n          this.notifierService.notify('success', this.menuTypeName + ' has been successfully deleted');\n          this.fetchValues();\n        },\n        err => this.notifierService.notify('error', 'There was error in deletion - ' + err.error.message)\n      );\n    }\n  }\n\n  deleteData = (context: string, orgMrn: string, entityMrn: string, version?: string, numberId?: number): Observable<Entity> => {\n    if (context === MenuTypeNames.user) {\n      return this.userControllerService.deleteUser(orgMrn, entityMrn);\n    } else if (context === MenuTypeNames.device) {\n      return this.deviceControllerService.deleteDevice(orgMrn, entityMrn);\n    } else if (context === MenuTypeNames.vessel) {\n      return this.vesselControllerService.deleteVessel(orgMrn, entityMrn);\n    } else if (context === MenuTypeNames.mms) {\n      return this.mmsControllerService.deleteMMS(orgMrn, entityMrn);\n    } else if (context === MenuTypeNames.service && version) {\n      return this.serviceControllerService.deleteService(orgMrn, entityMrn, version);\n    } else if (context === MenuTypeNames.organization) {\n      return this.organizationControllerService.deleteOrg(entityMrn);\n    } else if (context === MenuTypeNames.role && numberId) {\n      return this.roleControllerService.deleteRole(orgMrn, numberId);\n    } else if (context === MenuType.Instance || context === MenuType.InstanceOfOrg) {\n      return this.instanceControllerService.deleteInstance(numberId);\n    }\n    return new Observable();\n  }\n\n  onEdit(event): void {\n    const mrn = this.menuType === MenuType.Instance ? event.data.id : event.data.mrn;\n    this.router.navigate([this.router.url,\n      mrn ? encodeURIComponent(mrn) : event.data.id],\n        { queryParams: { name: event.data.roleName ? event.data.roleName :\n            event.data.name ? event.data.name :\n            event.data.lastName + ' ' + event.data.firstName,\n          version: event.data.instanceVersion,\n         }});\n  }\n\n  onAddNew(): void {\n    this.router.navigate([this.router.url, 'new']);\n  }\n\n  onSearch(event: any) {\n    const query = event.srcElement.value;\n    if (event && event.srcElement && query.length > 0) {\n      this.source.setFilter([\n        // fields we want to include in the search\n        {\n          field: 'id',\n          search: query,\n        },\n        {\n          field: 'name',\n          search: query,\n        },\n        {\n          field: 'mrn',\n          search: query,\n        },\n      ], false);\n    } else {\n      this.source.reset();\n      this.refreshData();\n    }\n  }\n\n  loadMyOrganization = ():Observable<Organization> => {\n    // fetch organization information from it\n    return this.organizationControllerService.getOrganizationByMrn(this.authService.authState.orgMrn);\n\t}\n\n  loadServiceInstances = (orgMrn?: string):Observable<InstanceDto[]> => {\n    return orgMrn ? this.searchControllerService.searchInstances('organizationId:' + orgMrn.split(\":\").join(\"\\\\:\") + \"*\", {}) :\n      this.instanceControllerService.getInstances({});\n  }\n\n  loadDataContent = (context: string, orgMrn?: string):Observable<PageEntity> => {\n    if (context === MenuType.User) {\n      return this.userControllerService.getOrganizationUsers(orgMrn);\n    } else if (context === MenuType.Device) {\n      return this.deviceControllerService.getOrganizationDevices(orgMrn);\n    } else if (context === MenuType.Vessel) {\n      return this.vesselControllerService.getOrganizationVessels(orgMrn);\n    } else if (context === MenuType.MMS) {\n      return this.mmsControllerService.getOrganizationMMSes(orgMrn);\n    } else if (context === MenuType.Service) {\n      return this.serviceControllerService.getOrganizationServices(orgMrn);\n    } else if (context === MenuType.Organization) {\n      return this.organizationControllerService.getOrganization();\n    } else if (context === MenuType.OrgCandidate) {\n      return this.organizationControllerService.getUnapprovedOrganizations();\n    }\n    return new Observable();\n  }\n\n  loadRoles = (orgMrn: string):Observable<Role[]> => {\n    return this.roleControllerService.getRoles(orgMrn);\n  }\n\n  isAdmin = () => {\n    const context = this.menuType;\n    if (context === MenuTypeNames.user) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.UserAdmin);\n    } else if (context === MenuTypeNames.device) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.DeviceAdmin);\n    } else if (context === MenuTypeNames.vessel) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.VesselAdmin);\n    } else if (context === MenuTypeNames.mms) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.MMSAdmin);\n    } else if (context === MenuTypeNames.service) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.ServiceAdmin);\n    } else if (context === MenuTypeNames.organization || context === MenuTypeNames.role) {\n      return this.authService.authState.hasPermissionInMIR(AuthPermission.OrgAdmin);\n    } else if (context === MenuTypeNames.instance) {\n      return this.isForServiceForOrg ?\n        this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.OrgServiceAdmin) :\n        this.authService.authState.hasPermissionInMSR(AuthPermissionForMSR.MSRAdmin);\n    } else {\n      return false;\n    }\n  }\n}\n","<nb-card>\n    <nb-card-header>\n      <div class=\"row\">\n        <div class=\"col my-auto\">\n          <span class=\"icon_header\"><nb-icon [icon]=\"iconName\" pack=\"fas\"></nb-icon></span>{{title}}\n        </div>\n        <div class=\"col-md-auto\">\n          <ngx-search-input (search)=\"onSearch($event)\"></ngx-search-input>\n        </div>\n        <div class=\"col-md-auto\">\n          <button type=\"button\" nbButton status=\"primary\" (click)=\"onAddNew()\" *ngIf=\"isAdmin()\">Add new</button>\n        </div>\n      </div>\n    </nb-card-header>\n  \n    <nb-card-body [nbSpinner]=\"isLoading\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n      <ng2-smart-table *ngIf=\"showTables\" [settings]=\"settings\" [source]=\"source\" (userRowSelect)=\"onEdit($event)\" (delete)=\"onDelete($event)\">\n      </ng2-smart-table>\n    </nb-card-body>\n  </nb-card>\n"],"sourceRoot":"webpack:///"}