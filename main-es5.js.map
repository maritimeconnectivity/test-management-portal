{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/@core/core.module.ts","webpack:///src/app/@core/data/country-order.ts","webpack:///src/app/@core/data/earning.ts","webpack:///src/app/@core/data/electricity.ts","webpack:///src/app/@core/data/orders-chart.ts","webpack:///src/app/@core/data/orders-profit-chart.ts","webpack:///src/app/@core/data/profit-bar-animation-chart.ts","webpack:///src/app/@core/data/profit-chart.ts","webpack:///src/app/@core/data/security-cameras.ts","webpack:///src/app/@core/data/smart-table.ts","webpack:///src/app/@core/data/solar.ts","webpack:///src/app/@core/data/stats-bar.ts","webpack:///src/app/@core/data/stats-progress-bar.ts","webpack:///src/app/@core/data/temperature-humidity.ts","webpack:///src/app/@core/data/traffic-bar.ts","webpack:///src/app/@core/data/traffic-chart.ts","webpack:///src/app/@core/data/traffic-list.ts","webpack:///src/app/@core/data/user-activity.ts","webpack:///src/app/@core/data/users.ts","webpack:///src/app/@core/data/visitors-analytics.ts","webpack:///src/app/@core/mock/country-order.service.ts","webpack:///src/app/@core/mock/earning.service.ts","webpack:///src/app/@core/mock/electricity.service.ts","webpack:///src/app/@core/mock/mock-data.module.ts","webpack:///src/app/@core/mock/orders-chart.service.ts","webpack:///src/app/@core/mock/orders-profit-chart.service.ts","webpack:///src/app/@core/mock/periods.service.ts","webpack:///src/app/@core/mock/profit-bar-animation-chart.service.ts","webpack:///src/app/@core/mock/profit-chart.service.ts","webpack:///src/app/@core/mock/security-cameras.service.ts","webpack:///src/app/@core/mock/smart-table.service.ts","webpack:///src/app/@core/mock/solar.service.ts","webpack:///src/app/@core/mock/stats-bar.service.ts","webpack:///src/app/@core/mock/stats-progress-bar.service.ts","webpack:///src/app/@core/mock/temperature-humidity.service.ts","webpack:///src/app/@core/mock/traffic-bar.service.ts","webpack:///src/app/@core/mock/traffic-chart.service.ts","webpack:///src/app/@core/mock/traffic-list.service.ts","webpack:///src/app/@core/mock/user-activity.service.ts","webpack:///src/app/@core/mock/users.service.ts","webpack:///src/app/@core/mock/visitors-analytics.service.ts","webpack:///src/app/@core/module-import-guard.ts","webpack:///src/app/@core/utils/analytics.service.ts","webpack:///src/app/@core/utils/layout.service.ts","webpack:///src/app/@core/utils/player.service.ts","webpack:///src/app/@core/utils/seo.service.ts","webpack:///src/app/@core/utils/state.service.ts","webpack:///src/app/@theme/components/footer/footer.component.ts","webpack:///src/app/@theme/components/header/header.component.html","webpack:///src/app/@theme/components/header/header.component.ts","webpack:///src/app/@theme/components/search-input/search-input.component.ts","webpack:///src/app/@theme/components/tiny-mce/tiny-mce.component.ts","webpack:///src/app/@theme/layouts/one-column/one-column.layout.ts","webpack:///src/app/@theme/layouts/three-columns/three-columns.layout.ts","webpack:///src/app/@theme/layouts/two-columns/two-columns.layout.ts","webpack:///src/app/@theme/pipes/capitalize.pipe.ts","webpack:///src/app/@theme/pipes/number-with-commas.pipe.ts","webpack:///src/app/@theme/pipes/plural.pipe.ts","webpack:///src/app/@theme/pipes/round.pipe.ts","webpack:///src/app/@theme/pipes/timing.pipe.ts","webpack:///src/app/@theme/styles/theme.corporate.ts","webpack:///src/app/@theme/styles/theme.cosmic.ts","webpack:///src/app/@theme/styles/theme.dark.ts","webpack:///src/app/@theme/styles/theme.default.ts","webpack:///src/app/@theme/theme.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/app.guard.ts","webpack:///src/app/auth/app.init.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.permission.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/backend-api/identity-registry/api.module.ts","webpack:///src/app/backend-api/identity-registry/api/agentController.service.ts","webpack:///src/app/backend-api/identity-registry/api/api.ts","webpack:///src/app/backend-api/identity-registry/api/certificateController.service.ts","webpack:///src/app/backend-api/identity-registry/api/deviceController.service.ts","webpack:///src/app/backend-api/identity-registry/api/logoController.service.ts","webpack:///src/app/backend-api/identity-registry/api/mmsController.service.ts","webpack:///src/app/backend-api/identity-registry/api/organizationController.service.ts","webpack:///src/app/backend-api/identity-registry/api/roleController.service.ts","webpack:///src/app/backend-api/identity-registry/api/serviceController.service.ts","webpack:///src/app/backend-api/identity-registry/api/userController.service.ts","webpack:///src/app/backend-api/identity-registry/api/vesselController.service.ts","webpack:///src/app/backend-api/identity-registry/api/vesselImageController.service.ts","webpack:///src/app/backend-api/identity-registry/configuration.ts","webpack:///src/app/backend-api/identity-registry/encoder.ts","webpack:///src/app/backend-api/identity-registry/model/allowedAgentRole.ts","webpack:///src/app/backend-api/identity-registry/model/certificate.ts","webpack:///src/app/backend-api/identity-registry/model/certificateRevocation.ts","webpack:///src/app/backend-api/identity-registry/model/identityProviderAttribute.ts","webpack:///src/app/backend-api/identity-registry/model/orgMrnLogoBody.ts","webpack:///src/app/backend-api/identity-registry/model/orgMrnLogoBody1.ts","webpack:///src/app/backend-api/identity-registry/model/orgMrnLogoBody2.ts","webpack:///src/app/backend-api/identity-registry/model/orgMrnLogoBody3.ts","webpack:///src/app/backend-api/identity-registry/model/organization.ts","webpack:///src/app/backend-api/identity-registry/model/pageable.ts","webpack:///src/app/backend-api/identity-registry/model/pemCertificate.ts","webpack:///src/app/backend-api/identity-registry/model/role.ts","webpack:///src/app/backend-api/identity-registry/model/service.ts","webpack:///src/app/backend-api/identity-registry/model/sort.ts","webpack:///src/app/backend-api/identity-registry/model/vesselAttribute.ts","webpack:///src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody.ts","webpack:///src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody1.ts","webpack:///src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody2.ts","webpack:///src/app/backend-api/identity-registry/model/vesselMrnVesselImageBody3.ts","webpack:///src/app/backend-api/identity-registry/variables.ts","webpack:///src/app/backend-api/service-registry/api.module.ts","webpack:///src/app/backend-api/service-registry/api/api.ts","webpack:///src/app/backend-api/service-registry/api/docController.service.ts","webpack:///src/app/backend-api/service-registry/api/instanceController.service.ts","webpack:///src/app/backend-api/service-registry/api/ledgerRequestController.service.ts","webpack:///src/app/backend-api/service-registry/api/searchController.service.ts","webpack:///src/app/backend-api/service-registry/api/xmlController.service.ts","webpack:///src/app/backend-api/service-registry/configuration.ts","webpack:///src/app/backend-api/service-registry/encoder.ts","webpack:///src/app/backend-api/service-registry/model/coordinate.ts","webpack:///src/app/backend-api/service-registry/model/coordinateSequence.ts","webpack:///src/app/backend-api/service-registry/model/coordinateSequenceFactory.ts","webpack:///src/app/backend-api/service-registry/model/docDtDto.ts","webpack:///src/app/backend-api/service-registry/model/docDto.ts","webpack:///src/app/backend-api/service-registry/model/dtOrder.ts","webpack:///src/app/backend-api/service-registry/model/dtSearch.ts","webpack:///src/app/backend-api/service-registry/model/envelope.ts","webpack:///src/app/backend-api/service-registry/model/instanceDtDto.ts","webpack:///src/app/backend-api/service-registry/model/instanceDto.ts","webpack:///src/app/backend-api/service-registry/model/ledgerRequestDto.ts","webpack:///src/app/backend-api/service-registry/model/pageable.ts","webpack:///src/app/backend-api/service-registry/model/sort.ts","webpack:///src/app/backend-api/service-registry/model/type.ts","webpack:///src/app/backend-api/service-registry/model/xml.ts","webpack:///src/app/backend-api/service-registry/model/xmlDto.ts","webpack:///src/app/backend-api/service-registry/variables.ts","webpack:///src/app/landing/landing-routing.module.ts","webpack:///src/app/landing/landing.component.ts","webpack:///src/app/landing/landing.module.ts","webpack:///src/app/landing/login/login.component.ts","webpack:///src/app/landing/login/login.component.html","webpack:///src/app/landing/process-dialog/process-dialog.component.ts","webpack:///src/app/landing/process-dialog/process-dialog.component.html","webpack:///src/app/landing/register-dialog/register-dialog.component.html","webpack:///src/app/landing/register-dialog/register-dialog.component.ts","webpack:///src/app/shared/app.constants.ts","webpack:///src/app/shared/calendar/calendar.component.ts","webpack:///src/app/shared/calendar/calendar.component.html","webpack:///src/app/shared/calendar/day-cell/day-cell.component.ts","webpack:///src/app/shared/calendar/day-cell/day-cell.component.html","webpack:///src/app/shared/certificate.service.ts","webpack:///src/app/shared/certificates/cert-issue-dialog/cert-issue-dialog.component.html","webpack:///src/app/shared/certificates/cert-issue-dialog/cert-issue-dialog.component.ts","webpack:///src/app/shared/certificates/cert-revoke-dialog/cert-revoke-dialog.component.html","webpack:///src/app/shared/certificates/cert-revoke-dialog/cert-revoke-dialog.component.ts","webpack:///src/app/shared/certificates/certificates.component.html","webpack:///src/app/shared/certificates/certificates.component.ts","webpack:///src/app/shared/customNotifierOption.ts","webpack:///src/app/shared/editable-form/editable-form.component.ts","webpack:///src/app/shared/editable-form/editable-form.component.html","webpack:///src/app/shared/file-helper.service.ts","webpack:///src/app/shared/input-button-list/input-button-list.component.ts","webpack:///src/app/shared/input-button-list/input-button-list.component.html","webpack:///src/app/shared/input-file-list/input-file-list.component.html","webpack:///src/app/shared/input-file-list/input-file-list.component.ts","webpack:///src/app/shared/input-geometry/input-geometry.component.ts","webpack:///src/app/shared/input-geometry/input-geometry.component.html","webpack:///src/app/shared/input-image/input-image.component.ts","webpack:///src/app/shared/input-image/input-image.component.html","webpack:///src/app/shared/input-mcp-entity/input-mcp-entity.component.html","webpack:///src/app/shared/input-mcp-entity/input-mcp-entity.component.ts","webpack:///src/app/shared/models/columnForCertificate.ts","webpack:///src/app/shared/models/columnForMenu.ts","webpack:///src/app/shared/models/countryOptions.ts","webpack:///src/app/shared/models/menuType.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/xml-edit-dialog/xml-edit-dialog.component.ts","webpack:///src/app/shared/xml-edit-dialog/xml-edit-dialog.component.html","webpack:///src/app/util/adminPermissionResolver.ts","webpack:///src/app/util/certRevokeInfo.ts","webpack:///src/app/util/dataFormatter.ts","webpack:///src/app/util/mapToGeometry.ts","webpack:///src/app/util/mrn-helper.service.ts","webpack:///src/app/util/timeConverter.ts","webpack:///src/environments/environment.test.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","socialLinks","url","target","icon","DATA_SERVICES","provide","UserData","useClass","UserService","ElectricityData","ElectricityService","SmartTableData","SmartTableService","UserActivityData","UserActivityService","OrdersChartData","OrdersChartService","ProfitChartData","ProfitChartService","TrafficListData","TrafficListService","EarningData","EarningService","OrdersProfitChartData","OrdersProfitChartService","TrafficBarData","TrafficBarService","ProfitBarAnimationChartData","ProfitBarAnimationChartService","TemperatureHumidityData","TemperatureHumidityService","SolarData","SolarService","TrafficChartData","TrafficChartService","StatsBarData","StatsBarService","CountryOrderData","CountryOrderService","StatsProgressBarData","StatsProgressBarService","VisitorsAnalyticsData","VisitorsAnalyticsService","SecurityCamerasData","SecurityCamerasService","NbSimpleRoleProvider","NbRoleProvider","NB_CORE_PROVIDERS","MockDataModule","providers","NbAuthModule","strategies","NbDummyAuthStrategy","name","delay","forms","login","register","NbSecurityModule","accessControl","guest","view","user","parent","create","edit","remove","AnalyticsService","LayoutService","PlayerService","SeoService","StateService","CoreModule","parentModule","throwIfAlreadyLoaded","ngModule","CommonModule","countriesCategories","countriesCategoriesLength","length","nPoints","Array","from","map","Math","round","random","country","generateRandomData","currentDate","Date","currentValue","ONE_DAY","pieChartData","value","liveUpdateChartData","bitcoin","liveChart","delta","up","dailyIncome","tether","ethereum","elementsNumber","item","generateRandomLiveChartData","getFullYear","getMonth","getDate","join","currency","data","toLowerCase","newValue","shift","push","getDefaultLiveChartData","listData","title","months","month","down","kWatts","cost","active","chartPoints","chartData","p","index","label","SERVICES","PeriodsService","period","year","week","getDataForWeekPeriod","getDataForMonthPeriod","getDataForYearPeriod","chartLabel","getDataLabels","getWeeks","linesData","getMonths","labelsArray","labelsArrayLength","step","dataIndex","ordersChartService","profitChartService","summary","getOrdersChartData","getProfitChartData","firstLine","getDataForFirstLine","secondLine","getDataForSecondLine","createEmptyArray","_","oneFifth","sin","cos","nPoint","getRandomData","cameras","source","firstName","lastName","username","email","age","statsBarData","progressInfoData","activeProgress","description","temperatureDate","min","max","humidityDate","labels","formatter","getYears","getRandom","roundTo","getDataWeek","getDataMonth","getDataYear","getFirstDateInPeriod","weeks","reduceData","years","parseInt","timePeriods","reduce","result","timePeriod","hasResult","prevDate","comparison","nextDate","prevValue","nextValue","deltaValue","date","abs","periods","pagesVisitCount","deltaUp","newVisits","generateUserActivityRandomData","days","time","users","nick","picture","eva","jack","lee","alan","kate","types","mobile","home","work","contacts","type","recentUsers","setHours","periodService","pieChartValue","innerLinePoints","outerLinePoints","outerLinePointsLength","monthsLength","monthIndex","generateOutlineLineData","moduleName","location","router","enabled","events","pipe","filter","event","NavigationEnd","subscribe","ga","hitType","page","path","eventName","layoutSize$","Subject","layoutSizeChange$","shareReplay","refCount","next","debounceTime","Track","playlist","artist","cover","current","floor","getNextTrack","getPrevTrack","document","platformId","destroy$","isBrowser","isPlatformBrowser","dom","createCanonicalTag","complete","linkCanonical","createElement","setAttribute","head","appendChild","getCanonicalUrl","takeUntil","origin","pathname","NB_DOCUMENT","PLATFORM_ID","directionService","layouts","selected","sidebars","layoutState$","BehaviorSubject","sidebarState$","alive","onDirectionChange","takeWhile","direction","updateSidebarIcons","getDirection","startSidebar","endSidebar","isLtr","NbLayoutDirection","startIconClass","endIconClass","state","asObservable","FooterComponent","HeaderComponent","sidebarService","menuService","themeService","layoutService","breakpointService","authService","userPictureOnly","themes","currentTheme","authState","userName","logoutUrl","getLogoutUrl","getBreakpointsMap","xl","onMediaQueryChange","currentBreakpoint","width","isLessThanXl","onThemeChange","themeName","changeTheme","toggle","changeLayoutSize","navigate","mrn","logout","toggleSidebar","navigateHome","SearchInputComponent","search","EventEmitter","isInputShown","input","nativeElement","focus","val","emit","showInput","hideInput","onInput","TinyMCEComponent","host","locationStrategy","editorKeyup","tinymce","init","plugins","skin_url","getBaseHref","setup","editor","on","getContent","height","OneColumnLayoutComponent","ThreeColumnsLayoutComponent","TwoColumnsLayoutComponent","CapitalizePipe","charAt","toUpperCase","slice","NumberWithCommasPipe","Intl","NumberFormat","format","PluralPipe","pluralLabel","RoundPipe","TimingPipe","minutes","seconds","initZero","baseThemeVariables","CORPORATE_THEME","base","variables","temperature","arcFill","arcEmpty","bg2","thumbBg","thumbBorder","solar","gradientLeft","primary","gradientRight","shadowColor","secondSeriesFill","radius","traffic","tooltipBg","bg","tooltipBorderColor","border2","tooltipExtraCss","tooltipTextColor","fgText","tooltipFontWeight","yAxisSplitLine","lineBg","lineShadowBlur","itemColor","border4","itemBorderColor","itemEmphasisBorderColor","primaryLight","shadowLineDarkBg","shadowLineShadow","gradFrom","gradTo","electricity","tooltipLineColor","tooltipLineWidth","axisLineColor","border3","xAxisTextColor","fg","separator","lineStyle","lineWidth","lineGradFrom","lineGradTo","lineShadow","areaGradFrom","areaGradTo","bubbleMap","titleColor","areaColor","bg4","areaHoverColor","fgHighlight","areaBorderColor","border5","profitBarAnimationEchart","textColor","firstAnimationBarColor","secondAnimationBarColor","success","splitLineStyleOpacity","splitLineStyleWidth","splitLineStyleColor","tooltipFontSize","tooltipBorderWidth","trafficBarEchart","gradientFrom","warningLight","gradientTo","warning","shadow","shadowBlur","axisTextColor","axisFontSize","countryOrders","countryBorderColor","countryFillColor","countryBorderWidth","hoveredCountryBorderColor","hoveredCountryFillColor","hoveredCountryBorderWidth","chartAxisLineColor","chartAxisTextColor","chartAxisFontSize","chartGradientTo","chartGradientFrom","chartAxisSplitLine","chartShadowLineColor","chartLineBottomShadowColor","chartInnerLineColor","echarts","splitLineColor","itemHoverShadowColor","tooltipBackgroundColor","areaOpacity","chartjs","orders","firstAreaGradFrom","bg3","firstAreaGradTo","firstShadowLineDarkBg","secondLineGradFrom","secondLineGradTo","secondAreaGradFrom","secondAreaGradTo","secondShadowLineDarkBg","thirdLineGradFrom","thirdLineGradTo","successLight","thirdAreaGradFrom","thirdAreaGradTo","thirdShadowLineDarkBg","profit","firstLineGradFrom","firstLineGradTo","firstLineShadow","secondLineShadow","thirdLineShadow","orderProfitLegend","firstItem","secondItem","thirdItem","visitors","innerLineStyle","innerLineWidth","innerAreaGradFrom","innerAreaGradTo","visitorsLegend","firstIcon","secondIcon","visitorsPie","firstPieGradientLeft","firstPieGradientRight","firstPieShadowColor","firstPieRadius","secondPieGradientLeft","secondPieGradientRight","secondPieShadowColor","secondPieRadius","shadowOffsetX","shadowOffsetY","visitorsPieLegend","firstSection","secondSection","earningPie","center","fontSize","thirdPieGradientLeft","thirdPieGradientRight","thirdPieShadowColor","earningLine","COSMIC_THEME","DARK_THEME","DEFAULT_THEME","NB_MODULES","NbLayoutModule","NbMenuModule","NbUserModule","NbActionsModule","NbSearchModule","NbSidebarModule","NbContextMenuModule","NbButtonModule","NbSelectModule","NbIconModule","NbEvaIconsModule","COMPONENTS","PIPES","ThemeModule","NbThemeModule","routes","loadChildren","m","PagesModule","canActivate","AuthGuard","LandingModule","redirectTo","pathMatch","config","useHash","AppRoutingModule","RouterModule","AppComponent","analytics","seoService","trackPageViews","trackCanonicalChanges","AppConfig","IR_BASE_PATH","environment","SR_BASE_PATH","ENVIRONMENT_TITLE","TERMS_OF_USE","IDP_NAMESPACE","HAS_SERVICE_REGISTRY","OIDC_BASE_PATH","ENVIRONMENT_NAME","IR_PROVIDER","IR_CONTACT","SR_PROVIDER","SR_CONTACT","MP_PROVIDER","MP_CONTACT","MP_VERSION","_initialize","AppModule","BrowserModule","BrowserAnimationsModule","HttpClientModule","AuthModule","NbDatepickerModule","NbDialogModule","NbWindowModule","NbToastrModule","NbChatModule","messageGoogleMapKey","NotifierModule","customNotifierOptions","keycloak","route","loggedIn","loginUrl","KeycloakAuthGuard","initializeKeycloak","realm","clientId","initOptions","onLoad","flow","enableBearerInterceptor","bearerPrefix","bearerExcludedUrls","authenticated","AuthService","getKeycloakInstance","tokenParsed","onAuthLogout","console","log","onTokenExpired","APP_INITIALIZER","useFactory","multi","deps","KeycloakService","KeycloakAngularModule","RoleNameEnum","Role","AuthPermission","AuthPermissionForMSR","rolesToPermission","roles","permission","User","roleString","ORGADMIN","OrgAdmin","SITEADMIN","SiteAdmin","USERADMIN","UserAdmin","DEVICEADMIN","DeviceAdmin","VESSELADMIN","VesselAdmin","SERVICEADMIN","ServiceAdmin","ENTITYADMIN","EntityAdmin","MMSADMIN","MMSAdmin","APPROVEORG","ApproveOrg","PermissionResolver","isSiteAdmin","isOrgAdmin","isEntityAdmin","includes","roleControllerService","notifierService","rolesLoaded","realmName","createAuthState","findPermissionRoles","getMyRole","orgMrn","error","notify","message","staticAuthInfo","orgName","acting","window","authz","redirectUri","protocol","loginPage","err","keycloakToken","org","firstname","given_name","lastname","family_name","permissions","rolesInMSR","preferredUsername","preferred_username","authUser","organization","keycloakMIRPermissions","toString","keycloakMSRPermissions","reject","token","updateToken","handle401","ApiModule","http","configurationFactory","Configuration","AgentControllerService","CertificateControllerService","DeviceControllerService","LogoControllerService","MmsControllerService","OrganizationControllerService","RoleControllerService","ServiceControllerService","UserControllerService","VesselControllerService","VesselImageControllerService","httpClient","basePath","configuration","defaultHeaders","HttpHeaders","consumes","form","consume","body","observe","reportProgress","undefined","headers","httpHeaderAccepts","httpHeaderAcceptSelected","selectHeaderAccept","set","httpContentTypeSelected","selectHeaderContentType","request","encodeURIComponent","String","withCredentials","agentId","size","sort","queryParameters","HttpParams","encoder","CustomHttpUrlEncodingCodec","forEach","element","append","params","BASE_PATH","APIS","caAlias","deviceMrn","serialNumber","certId","responseType","mediaType","mmsMrn","orgId","roleId","serviceMrn","version","pageable","userMrn","vesselMrn","configurationParameters","apiKeys","password","accessToken","contentTypes","find","x","isJsonMime","accepts","mime","jsonMime","RegExp","test","k","replace","v","HttpUrlEncodingCodec","AllowedAgentRole","USER","RevokationReasonEnum","Unspecified","Keycompromise","Cacompromise","Affiliationchanged","Superseded","Cessationofoperation","Certificatehold","Removefromcrl","Privilegewithdrawn","Aacompromise","IdentityProviderAttribute","AttributeNameEnum","ImportUrlValidateSignatureSigningCertificateSingleLogoutServiceUrlPostBindingResponsePostBindingAuthnRequestSingleSignOnServiceUrlWantAuthnRequestsSignedUserInfoUrlTokenUrlAuthorizationUrlLogoutUrlIssuerPublicKeySignatureVerifierClientIdClientSecretproviderTypeFirstNameAttrLastNameAttrEmailAttrUsernameAttrPermissionsAttr","Organization","FederationTypeEnum","TestIdp","OwnIdp","ExternalIdp","Service","OidcAccessTypeEnum","PublicBearerOnlyConfidential","VesselAttribute","ImoNumber","MmsiNumber","Callsign","Flagstate","AisClass","PortOfRegister","InjectionToken","COLLECTION_FORMATS","DocControllerService","InstanceControllerService","LedgerRequestControllerService","SearchControllerService","XmlControllerService","instanceId","ledgerStatus","status","queryString","geometry","geometryWKT","globalSearch","schema","DtOrder","DirEnum","Asc","Desc","InstanceDtDto","StatusEnum","PROVISIONAL","RELEASED","DEPRECATED","DELETED","LedgerRequestStatusEnum","INACTIVE","CREATED","VETTING","VETTED","REQUESTING","SUCCEEDED","FAILED","REJECTED","InstanceDto","LedgerRequestDto","component","LandingComponent","children","LoginComponent","LandingRoutingModule","NbCardModule","SharedModule","NbStepperModule","RegisterDialogComponent","ProcessDialogComponent","dialogService","environmentName","capitalize","s","queryParams","open","logIn","createRegisterDialog","createProcessDialog","ref","organizationControllerService","menuType","isForNew","agreed","submitted","clause","close","orgEmail","orgUrl","orgCountry","address","orgAddress","applyOrganization","res","TOKEN_DELIMITER","MIR_ADMIN","ORG_ADMIN_AT_MIR","CalendarComponent","dateService","date2","dayCellComponent","DayCellComponent","range","start","addDay","monthStart","end","monthEnd","getMonthStart","getMonthEnd","NbCalendarDayCellComponent","CertificateService","organizationsService","devicesService","servicesService","usersService","vesselsService","mmsService","certificates","formatted","key_certs","cert","key","getReasonOptionFromRevocationReason","activeCertificates","revokedCertificates","a","b","formatCerts","entityType","entityMrn","EntityType","newOrgCert","newDeviceCert","newServiceCert","newUserCert","newVesselCert","newMMSCert","csr","newOrgCertFromCsr","newDeviceCertFromCsr","newServiceCertFromCsr","newUserCertFromCsr","newVesselCertFromCsr","newMMSCertFromCsr","certificateId","certificateRevocation","revokeOrgCert","revokeDeviceCert","revokeServiceCert","revokeUserCert","revokeVesselCert","revokeMMSCert","CertIssueDialogComponent","serverGeneratedKeys","isLoading","generateLabelValues","nameNoSpaces","entityTitle","split","updateCertificate","issueNewWithLocalKeys","issueNewWithServerKeys","fileHelper","downloadPemCertificate","certificateBundle","certificateService","issueNewCertificateFromMIR","instanceVersion","generatePkcs12","ecKeyGenParams","namedCurve","typedCurve","keyResult","crypto","subtle","generateKey","keyPair","CertificationRequest","subject","typesAndValues","AttributeTypeAndValue","PrintableString","subjectPublicKeyInfo","importKey","publicKey","sign","privateKey","csrBytes","toSchema","toBER","pemCsr","toPem","issueNewCertificate","certificate","text","exportKey","rawPrivateKey","rawPublicKey","PrivateKeyInfo","fromBER","rawCerts","convertCertChain","certs","Certificate","generatePassword","generatePKCS12","pemCertificate","pkcs12Keystore","keystorePassword","labelValues","valueHtml","arrayBuffer","b64","Convert","finalString","substring","pemCertChain","tmp","c","charset","values","Uint32Array","getRandomValues","keyLocalIDBuffer","ArrayBuffer","keyLocalIDView","Uint8Array","certLocalIDBuffer","certLocalIDView","caCertLocalIDBuffer","caCertLocalIDView","bitArray","bitView","keyUsage","BitString","valueHex","unusedBits","attributes","Attribute","certCn","t","valueBlock","caCn","pfx","PFX","parsedValue","integrityMode","authenticatedSafe","AuthenticatedSafe","safeContents","privacyMode","SafeContents","safeBags","SafeBag","bagId","bagValue","PKCS8ShroudedKeyBag","bagAttributes","BmpString","OctetString","CertBag","passwordConverted","stringToArrayBuffer","makeInternalValues","contentEncryptionAlgorithm","hmacHashAlgorithm","iterationCount","iterations","pbkdf2HashAlgorithm","dismiss","CertRevokeDialogComponent","reasons","reference","reason","toLocaleLowerCase","revokedAt","getTime","revokationReason","revokeCertificate","chosenReasonOption","onMenuItemSelected","onDateChange","doRevoke","CertificatesComponent","settings","mode","editButtonContent","saveButtonContent","cancelButtonContent","deleteButtonContent","confirmDelete","hideSubHeader","actions","position","LocalDataSource","onUpdate","certificateTitle","forRevoked","RevokedCertificatesColumn","ActiveCertificatesColumn","hasPermissionInMIR","context","closeOnBackdropClick","closeOnEsc","download","openRevokeDialog","certBundle","onEdit","onDelete","horizontal","distance","vertical","gap","theme","behaviour","autoHide","onClick","onMouseover","showDismissButton","stacking","animations","show","preset","speed","easing","hide","offset","overlap","placeholder","required","formGroup","notUndefined","anyValue","EditableFormComponent","mrnHelperService","formBuilder","iconsLibrary","onCancel","onSubmit","onApprove","onReject","onRefresh","isAdmin","loadedData","nonStringForm","fetchList","isEditing","isEntity","fieldVisibility","shortId","contextForAttributes","menuTypeName","isServiceInstance","needShortId","resourceType","getShortIdType","columnForMenu","shortIdType","setForm","Object","entries","ColumnForMenu","isArray","setFormWithValidators","setFormFieldVisibility","menuWithOptions","menu","notShowOnEdit","options","hasChosen","Set","showField","f","setFieldVisible","add","get","disable","fetchMissingValuesFromForm","getFormValue","ResourceType","assign","instanceAsDoc","filtered","filterUnselected","formValue","unfiltered","field","setIsAdmin","isOurServiceInstance","hasAdminPermission","isForTime","fieldName","endsWith","convertTimeString","timeString","convertTime","invertIsEditing","reset","adjustData","geometryMap","applyEditingToMap","settled","isLoaded","adjustTitle","MenuTypeNames","EntityTypes","addShortIdToMrn","mrnMask","orgShortId","setValue","pop","adminShortId","mrnMaskForUserOfOrg","validateMrn","mrnMcpIdpRegexForOrg","mrnMcpIdpRegex","getOrgShortId","getValidators","validators","Validators","rawData","formatData","immutable","isThisForMCPMRN","shortIdFromMrn","hasCertificate","splited","splitByRevokeStatus","loadGeometry","group","updateFieldVisibility","fieldInfo","enable","onDataChanged","onLinkChanged","onUpdateGeometry","geojsonToWKT","openXmlDialog","xml","XmlEditDialogComponent","updateXml","onFileDeleted","sortColumnForMenu","order","registerFontPack","packClass","iconClassPrefix","controls","defaultPermissions","refreshData","menyType","FileHelperService","entityName","replaceNewLines","convertBase64ToByteArray","zip","file","jksKeystore","jksByteArray","blob","Blob","p12ByteArray","generateAsync","content","xmlFile","fileContent","fileName","fileType","contentContentType","downloadFile","docFile","filecontent","filecontentContentType","downloadBase64File","base64Content","byteArray","byteCharacters","atob","byteNumbers","i","charCodeAt","stringToReplace","replaceString","navigator","appVersion","indexOf","InputButtonListComponent","onAddItem","items","cleanInput","update","selectInput","stringInput","forceFocusIn","onRemoveItem","pointerType","splice","onFocusOut","relatedTarget","alert","InputFileListComponent","docControllerService","docDtoList","binary","len","buffer","URL","createObjectURL","anchor","href","click","loadDocs","docIds","docNumber","getDoc","docDto","deleteFileFromBackend","docId","deleteDoc","deleteFile","isForSingleDoc","confirm","updateFileFromBackend","createFileFromBackend","createDoc","changeFile","files","reader","FileReader","addEventListener","base64Data","substr","loadedFile","comment","mimetype","readAsDataURL","iconRetinaUrl","iconUrl","shadowUrl","iconDefault","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","InputGeometryComponent","initMap","container","setView","maxZoom","minZoom","attribution","addTo","destroyMap","off","mapDiv","searchMap","removeControl","controlWithoutEdit","addControl","controlWithEdit","applySearchToMap","controlForSearch","handleCreation","layer","isForSearch","addNonGroupLayers","drawnItemsForSearch","getGeometryCollectionFromMap","drawnItems","handleDeletion","removeLayers","clearMap","clearLayers","fitBounds","clearMapFromBeginning","tooltipString","loadGeometryOnMap","loadGeometries","geometries","names","g","geomLayer","setTimeout","getBounds","coordinate","coordinates","setToolTip","getCenter","lat","lng","marker","opacity","bindTooltip","permanent","className","initDrawControlWithoutEdit","featureGroup","draw","initDrawControlWithEdit","polyline","shapeOptions","color","weight","polygon","rectangle","circle","circlemarker","initDrawControlForSearch","addLayer","accept","InputImageComponent","logoControllerService","vesselImageControllerService","sanitizer","clickToRemoveImage","deleteImage","image","updatePut","logo","allowedExtensions","getImage","objectURL","bypassSecurityTrustUrl","updateLogoPut","updateVesselImagePut","Observable","getLogo","getVesselImage","deleteLogo","deleteVesselImage","InputMcpEntityComponent","vesselControllerService","selectedEntityMrn","getTitle","getOption","onUpdateEntity","entity","getOrganizationVessels","valuePrepareFunction","timestamp","revokeInfo","revokeReasonText","device","visibleFrom","mrnSubsidiary","homeMMSUrl","createdAt","updatedAt","countryOptions","federationType","service","certDomainName","oidcClientId","oidcClientSecret","oidcAccessType","oidcRedirectUri","vessel","imoNumber","mmsiNumber","callsign","flagstate","aisClass","portOfRegister","role","roleName","orgcandidate","instance","serviceType","endpointUri","endpointType","organizationId","keywords","implementsServiceDesign","implementsServiceDesignVersion","geometryContentType","unlocode","mmsi","imo","instanceAsXml","instanceAsDocId","ledgerRequestId","ledgerRequestStatus","publishedAt","lastUpdatedAt","newOrganization","code3","MIRResourceType","Device","Vessel","Agent","MMS","agent","mms","instanceorg","orgsvc","MenuTypeIconNames","ReactiveFormsModule","NbSpinnerModule","NbCalendarModule","NbCalendarRangeModule","NbInputModule","NbTabsetModule","Ng2SmartTableModule","xmlControllerService","isValidated","initialXml","FormGroup","FormControl","initial","isThereAnyDifference","xmlContent","validateXmlWithG1128Schema","dialog","hasAdminPermissionInMIR","hasAdminPermissionInMSR","myPermission","permissionRole","myPermissions","revocationReason","menuData","attr_key","attributeName","camel2snake","snake2camel","attributeValue","formatServiceData","formatVesselToUpload","vesselData","word","str","constter","crs","properties","toGeoJSON","features","feature","getSingleGeometryFromMap","populateWKTTextArea","sourceLayer","targetGroup","eachLayer","removeLayer","MrnHelperService","idpNamespace","mrnMCP","mrnPreFixForOrg","orgSplit","mrnMaskForDevice","mrnMaskForUser","mrnMaskForOrganization","mrnMaskForVessel","mrnMaskForInstance","mrnMaskForDesign","mrnMaskForMms","specificationMrn","rawRegex","mrnMaskForSpecification","regex","designMrn","instanceMrn","validMrnMask","elementIdIndex","valid","idSplit","idElement","match","mrnPattern","timeZone","dtFormat","DateTimeFormat","toISOString","production","staging","irBasePath","irProvider","irContact","oidcBasePath","hasServiceRegistry","srBasePath","srProvider","srContact","mpProvider","mpContact","environmentTitle","termsOfUse","enableProdMode","platformBrowser","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NbAuthModule, NbDummyAuthStrategy } from '@nebular/auth';\nimport { NbSecurityModule, NbRoleProvider } from '@nebular/security';\nimport { of as observableOf } from 'rxjs';\n\nimport { throwIfAlreadyLoaded } from './module-import-guard';\nimport {\n  AnalyticsService,\n  LayoutService,\n  PlayerService,\n  SeoService,\n  StateService,\n} from './utils';\nimport { UserData } from './data/users';\nimport { ElectricityData } from './data/electricity';\nimport { SmartTableData } from './data/smart-table';\nimport { UserActivityData } from './data/user-activity';\nimport { OrdersChartData } from './data/orders-chart';\nimport { ProfitChartData } from './data/profit-chart';\nimport { TrafficListData } from './data/traffic-list';\nimport { EarningData } from './data/earning';\nimport { OrdersProfitChartData } from './data/orders-profit-chart';\nimport { TrafficBarData } from './data/traffic-bar';\nimport { ProfitBarAnimationChartData } from './data/profit-bar-animation-chart';\nimport { TemperatureHumidityData } from './data/temperature-humidity';\nimport { SolarData } from './data/solar';\nimport { TrafficChartData } from './data/traffic-chart';\nimport { StatsBarData } from './data/stats-bar';\nimport { CountryOrderData } from './data/country-order';\nimport { StatsProgressBarData } from './data/stats-progress-bar';\nimport { VisitorsAnalyticsData } from './data/visitors-analytics';\nimport { SecurityCamerasData } from './data/security-cameras';\n\nimport { UserService } from './mock/users.service';\nimport { ElectricityService } from './mock/electricity.service';\nimport { SmartTableService } from './mock/smart-table.service';\nimport { UserActivityService } from './mock/user-activity.service';\nimport { OrdersChartService } from './mock/orders-chart.service';\nimport { ProfitChartService } from './mock/profit-chart.service';\nimport { TrafficListService } from './mock/traffic-list.service';\nimport { EarningService } from './mock/earning.service';\nimport { OrdersProfitChartService } from './mock/orders-profit-chart.service';\nimport { TrafficBarService } from './mock/traffic-bar.service';\nimport { ProfitBarAnimationChartService } from './mock/profit-bar-animation-chart.service';\nimport { TemperatureHumidityService } from './mock/temperature-humidity.service';\nimport { SolarService } from './mock/solar.service';\nimport { TrafficChartService } from './mock/traffic-chart.service';\nimport { StatsBarService } from './mock/stats-bar.service';\nimport { CountryOrderService } from './mock/country-order.service';\nimport { StatsProgressBarService } from './mock/stats-progress-bar.service';\nimport { VisitorsAnalyticsService } from './mock/visitors-analytics.service';\nimport { SecurityCamerasService } from './mock/security-cameras.service';\nimport { MockDataModule } from './mock/mock-data.module';\n\nconst socialLinks = [\n  {\n    url: 'https://github.com/akveo/nebular',\n    target: '_blank',\n    icon: 'github',\n  },\n  {\n    url: 'https://www.facebook.com/akveo/',\n    target: '_blank',\n    icon: 'facebook',\n  },\n  {\n    url: 'https://twitter.com/akveo_inc',\n    target: '_blank',\n    icon: 'twitter',\n  },\n];\n\nconst DATA_SERVICES = [\n  { provide: UserData, useClass: UserService },\n  { provide: ElectricityData, useClass: ElectricityService },\n  { provide: SmartTableData, useClass: SmartTableService },\n  { provide: UserActivityData, useClass: UserActivityService },\n  { provide: OrdersChartData, useClass: OrdersChartService },\n  { provide: ProfitChartData, useClass: ProfitChartService },\n  { provide: TrafficListData, useClass: TrafficListService },\n  { provide: EarningData, useClass: EarningService },\n  { provide: OrdersProfitChartData, useClass: OrdersProfitChartService },\n  { provide: TrafficBarData, useClass: TrafficBarService },\n  { provide: ProfitBarAnimationChartData, useClass: ProfitBarAnimationChartService },\n  { provide: TemperatureHumidityData, useClass: TemperatureHumidityService },\n  { provide: SolarData, useClass: SolarService },\n  { provide: TrafficChartData, useClass: TrafficChartService },\n  { provide: StatsBarData, useClass: StatsBarService },\n  { provide: CountryOrderData, useClass: CountryOrderService },\n  { provide: StatsProgressBarData, useClass: StatsProgressBarService },\n  { provide: VisitorsAnalyticsData, useClass: VisitorsAnalyticsService },\n  { provide: SecurityCamerasData, useClass: SecurityCamerasService },\n];\n\nexport class NbSimpleRoleProvider extends NbRoleProvider {\n  getRole() {\n    // here you could provide any role based on any auth flow\n    return observableOf('guest');\n  }\n}\n\nexport const NB_CORE_PROVIDERS = [\n  ...MockDataModule.forRoot().providers,\n  ...DATA_SERVICES,\n  ...NbAuthModule.forRoot({\n\n    strategies: [\n      NbDummyAuthStrategy.setup({\n        name: 'email',\n        delay: 3000,\n      }),\n    ],\n    forms: {\n      login: {\n        socialLinks: socialLinks,\n      },\n      register: {\n        socialLinks: socialLinks,\n      },\n    },\n  }).providers,\n\n  NbSecurityModule.forRoot({\n    accessControl: {\n      guest: {\n        view: '*',\n      },\n      user: {\n        parent: 'guest',\n        create: '*',\n        edit: '*',\n        remove: '*',\n      },\n    },\n  }).providers,\n\n  {\n    provide: NbRoleProvider, useClass: NbSimpleRoleProvider,\n  },\n  AnalyticsService,\n  LayoutService,\n  PlayerService,\n  SeoService,\n  StateService,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    NbAuthModule,\n  ],\n  declarations: [],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n\n  static forRoot(): ModuleWithProviders<CoreModule> {\n    return {\n      ngModule: CoreModule,\n      providers: [\n        ...NB_CORE_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class CountryOrderData {\n  abstract getCountriesCategories(): Observable<string[]>;\n  abstract getCountriesCategoriesData(country: string): Observable<number[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface LiveUpdateChart {\n  liveChart: { value: [string, number] }[];\n  delta: {\n    up: boolean;\n    value: number;\n  };\n  dailyIncome: number;\n}\n\nexport interface PieChart {\n  value: number;\n  name: string;\n}\n\nexport abstract class EarningData {\n  abstract getEarningLiveUpdateCardData(currency: string): Observable<any[]>;\n  abstract getEarningCardData(currency: string): Observable<LiveUpdateChart>;\n  abstract getEarningPieChartData(): Observable<PieChart[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface Month {\n  month: string;\n  delta: string;\n  down: boolean;\n  kWatts: string;\n  cost: string;\n}\n\nexport interface Electricity {\n  title: string;\n  active?: boolean;\n  months: Month[];\n}\n\nexport interface ElectricityChart {\n  label: string;\n  value: number;\n}\n\nexport abstract class ElectricityData {\n  abstract getListData(): Observable<Electricity[]>;\n  abstract getChartData(): Observable<ElectricityChart[]>;\n}\n","export interface OrdersChart {\n  chartLabel: string[];\n  linesData: number[][];\n}\n\nexport abstract class OrdersChartData {\n  abstract getOrdersChartData(period: string): OrdersChart;\n}\n","import { Observable } from 'rxjs';\nimport { OrdersChart } from './orders-chart';\nimport { ProfitChart  } from './profit-chart';\n\nexport interface OrderProfitChartSummary {\n  title: string;\n  value: number;\n}\n\nexport abstract class OrdersProfitChartData {\n  abstract getOrderProfitChartSummary(): Observable<OrderProfitChartSummary[]>;\n  abstract getOrdersChartData(period: string): Observable<OrdersChart>;\n  abstract getProfitChartData(period: string): Observable<ProfitChart>;\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class ProfitBarAnimationChartData {\n  abstract getChartData(): Observable<{ firstLine: number[]; secondLine: number[]; }>;\n}\n","export interface ProfitChart {\n  chartLabel: string[];\n  data: number[][];\n}\n\nexport abstract class ProfitChartData {\n  abstract getProfitChartData(period: string): ProfitChart;\n}\n","import { Observable } from 'rxjs';\n\nexport interface Camera {\n  title: string;\n  source: string;\n}\n\nexport abstract class SecurityCamerasData {\n  abstract getCamerasData(): Observable<Camera[]>;\n}\n","\nexport abstract class SmartTableData {\n  abstract getData(): any[];\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class SolarData {\n  abstract getSolarData(): Observable<number>;\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class StatsBarData {\n  abstract getStatsBarData(): Observable<number[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface ProgressInfo {\n  title: string;\n  value: number;\n  activeProgress: number;\n  description: string;\n}\n\nexport abstract class StatsProgressBarData {\n  abstract getProgressInfoData(): Observable<ProgressInfo[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface Temperature {\n  value: number;\n  min: number;\n  max: number;\n}\n\nexport abstract class TemperatureHumidityData {\n  abstract getTemperatureData(): Observable<Temperature>;\n  abstract getHumidityData(): Observable<Temperature>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface TrafficBar {\n  data: number[];\n  labels: string[];\n  formatter: string;\n}\n\nexport abstract class TrafficBarData {\n  abstract getTrafficBarData(period: string): Observable<TrafficBar>;\n}\n","import { Observable } from 'rxjs';\n\nexport abstract class TrafficChartData {\n  abstract getTrafficChartData(): Observable<number[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface TrafficList {\n  date: string;\n  value: number;\n  delta: {\n    up: boolean;\n    value: number;\n  };\n  comparison: {\n    prevDate: string;\n    prevValue: number;\n    nextDate: string;\n    nextValue: number;\n  };\n}\n\nexport abstract class TrafficListData {\n  abstract getTrafficListData(period: string): Observable<TrafficList>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface UserActive {\n  date: string;\n  pagesVisitCount: number;\n  deltaUp: boolean;\n  newVisits: number;\n}\n\nexport abstract class UserActivityData {\n  abstract getUserActivityData(period: string): Observable<UserActive[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface User {\n  name: string;\n  picture: string;\n}\n\nexport interface Contacts {\n  user: User;\n  type: string;\n}\n\nexport interface RecentUsers extends Contacts {\n  time: number;\n}\n\nexport abstract class UserData {\n  abstract getUsers(): Observable<User[]>;\n  abstract getContacts(): Observable<Contacts[]>;\n  abstract getRecentUsers(): Observable<RecentUsers[]>;\n}\n","import { Observable } from 'rxjs';\n\nexport interface OutlineData {\n  label: string;\n  value: number;\n}\n\nexport abstract class VisitorsAnalyticsData {\n  abstract getInnerLineChartData(): Observable<number[]>;\n  abstract getOutlineLineChartData(): Observable<OutlineData[]>;\n  abstract getPieChartData(): Observable<number>;\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { CountryOrderData } from '../data/country-order';\n\n@Injectable()\nexport class CountryOrderService extends CountryOrderData {\n\n  private countriesCategories = [\n    'Sofas',\n    'Furniture',\n    'Lighting',\n    'Tables',\n    'Textiles',\n  ];\n  private countriesCategoriesLength = this.countriesCategories.length;\n  private generateRandomData(nPoints: number): number[] {\n    return Array.from(Array(nPoints)).map(() => {\n      return Math.round(Math.random() * 20);\n    });\n  }\n\n  getCountriesCategories(): Observable<string[]> {\n    return observableOf(this.countriesCategories);\n  }\n\n  getCountriesCategoriesData(country: string): Observable<number[]> {\n    return observableOf(this.generateRandomData(this.countriesCategoriesLength));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { LiveUpdateChart, PieChart, EarningData } from '../data/earning';\n\n@Injectable()\nexport class EarningService extends EarningData {\n\n  private currentDate: Date = new Date();\n  private currentValue = Math.random() * 1000;\n  private ONE_DAY = 24 * 3600 * 1000;\n\n  private pieChartData = [\n    {\n      value: 50,\n      name: 'Bitcoin',\n    },\n    {\n      value: 25,\n      name: 'Tether',\n    },\n    {\n      value: 25,\n      name: 'Ethereum',\n    },\n  ];\n\n  private liveUpdateChartData = {\n    bitcoin: {\n      liveChart: [],\n      delta: {\n        up: true,\n        value: 4,\n      },\n      dailyIncome: 45895,\n    },\n    tether: {\n      liveChart: [],\n      delta: {\n        up: false,\n        value: 9,\n      },\n      dailyIncome: 5862,\n    },\n    ethereum: {\n      liveChart: [],\n      delta: {\n        up: false,\n        value: 21,\n      },\n      dailyIncome: 584,\n    },\n  };\n\n  getDefaultLiveChartData(elementsNumber: number) {\n    this.currentDate = new Date();\n    this.currentValue = Math.random() * 1000;\n\n    return Array.from(Array(elementsNumber))\n      .map(item => this.generateRandomLiveChartData());\n  }\n\n  generateRandomLiveChartData() {\n    this.currentDate = new Date(+this.currentDate + this.ONE_DAY);\n    this.currentValue = this.currentValue + Math.random() * 20 - 11;\n\n    if (this.currentValue < 0) {\n      this.currentValue = Math.random() * 100;\n    }\n\n    return {\n      value: [\n        [\n          this.currentDate.getFullYear(),\n          this.currentDate.getMonth(),\n          this.currentDate.getDate(),\n        ].join('/'),\n        Math.round(this.currentValue),\n      ],\n    };\n  }\n\n  getEarningLiveUpdateCardData(currency): Observable<any[]> {\n    const data = this.liveUpdateChartData[currency.toLowerCase()];\n    const newValue = this.generateRandomLiveChartData();\n\n    data.liveChart.shift();\n    data.liveChart.push(newValue);\n\n    return observableOf(data.liveChart);\n  }\n\n  getEarningCardData(currency: string): Observable<LiveUpdateChart> {\n    const data = this.liveUpdateChartData[currency.toLowerCase()];\n\n    data.liveChart = this.getDefaultLiveChartData(150);\n\n    return observableOf(data);\n  }\n\n  getEarningPieChartData(): Observable<PieChart[]> {\n    return observableOf(this.pieChartData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { Electricity, ElectricityChart, ElectricityData } from '../data/electricity';\n\n@Injectable()\nexport class ElectricityService extends ElectricityData {\n\n  private listData: Electricity[] = [\n    {\n      title: '2015',\n      months: [\n        { month: 'Jan', delta: '0.97', down: true, kWatts: '816', cost: '97' },\n        { month: 'Feb', delta: '1.83', down: true, kWatts: '806', cost: '95' },\n        { month: 'Mar', delta: '0.64', down: true, kWatts: '803', cost: '94' },\n        { month: 'Apr', delta: '2.17', down: false, kWatts: '818', cost: '98' },\n        { month: 'May', delta: '1.32', down: true, kWatts: '809', cost: '96' },\n        { month: 'Jun', delta: '0.05', down: true, kWatts: '808', cost: '96' },\n        { month: 'Jul', delta: '1.39', down: false, kWatts: '815', cost: '97' },\n        { month: 'Aug', delta: '0.73', down: true, kWatts: '807', cost: '95' },\n        { month: 'Sept', delta: '2.61', down: true, kWatts: '792', cost: '92' },\n        { month: 'Oct', delta: '0.16', down: true, kWatts: '791', cost: '92' },\n        { month: 'Nov', delta: '1.71', down: true, kWatts: '786', cost: '89' },\n        { month: 'Dec', delta: '0.37', down: false, kWatts: '789', cost: '91' },\n      ],\n    },\n    {\n      title: '2016',\n      active: true,\n      months: [\n        { month: 'Jan', delta: '1.56', down: true, kWatts: '789', cost: '91' },\n        { month: 'Feb', delta: '0.33', down: false, kWatts: '791', cost: '92' },\n        { month: 'Mar', delta: '0.62', down: true, kWatts: '790', cost: '92' },\n        { month: 'Apr', delta: '1.93', down: true, kWatts: '783', cost: '87' },\n        { month: 'May', delta: '2.52', down: true, kWatts: '771', cost: '83' },\n        { month: 'Jun', delta: '0.39', down: false, kWatts: '774', cost: '85' },\n        { month: 'Jul', delta: '1.61', down: true, kWatts: '767', cost: '81' },\n        { month: 'Aug', delta: '1.41', down: true, kWatts: '759', cost: '76' },\n        { month: 'Sept', delta: '1.03', down: true, kWatts: '752', cost: '74' },\n        { month: 'Oct', delta: '2.94', down: false, kWatts: '769', cost: '82' },\n        { month: 'Nov', delta: '0.26', down: true, kWatts: '767', cost: '81' },\n        { month: 'Dec', delta: '1.62', down: true, kWatts: '760', cost: '76' },\n      ],\n    },\n    {\n      title: '2017',\n      months: [\n        { month: 'Jan', delta: '1.34', down: false, kWatts: '789', cost: '91' },\n        { month: 'Feb', delta: '0.95', down: false, kWatts: '793', cost: '93' },\n        { month: 'Mar', delta: '0.25', down: true, kWatts: '791', cost: '92' },\n        { month: 'Apr', delta: '1.72', down: false, kWatts: '797', cost: '95' },\n        { month: 'May', delta: '2.62', down: true, kWatts: '786', cost: '90' },\n        { month: 'Jun', delta: '0.72', down: false, kWatts: '789', cost: '91' },\n        { month: 'Jul', delta: '0.78', down: true, kWatts: '784', cost: '89' },\n        { month: 'Aug', delta: '0.36', down: true, kWatts: '782', cost: '88' },\n        { month: 'Sept', delta: '0.55', down: false, kWatts: '787', cost: '90' },\n        { month: 'Oct', delta: '1.81', down: true, kWatts: '779', cost: '86' },\n        { month: 'Nov', delta: '1.12', down: true, kWatts: '774', cost: '84' },\n        { month: 'Dec', delta: '0.52', down: false, kWatts: '776', cost: '95' },\n      ],\n    },\n  ];\n\n  private chartPoints = [\n    490, 490, 495, 500,\n    505, 510, 520, 530,\n    550, 580, 630, 720,\n    800, 840, 860, 870,\n    870, 860, 840, 800,\n    720, 200, 145, 130,\n    130, 145, 200, 570,\n    635, 660, 670, 670,\n    660, 630, 580, 460,\n    380, 350, 340, 340,\n    340, 340, 340, 340,\n    340, 340, 340,\n  ];\n\n  chartData: ElectricityChart[];\n\n  constructor() {\n    super();\n    this.chartData = this.chartPoints.map((p, index) => ({\n      label: (index % 5 === 3) ? `${Math.round(index / 5)}` : '',\n      value: p,\n    }));\n  }\n\n  getListData(): Observable<Electricity[]> {\n    return observableOf(this.listData);\n  }\n\n  getChartData(): Observable<ElectricityChart[]> {\n    return observableOf(this.chartData);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserService } from './users.service';\nimport { ElectricityService } from './electricity.service';\nimport { SmartTableService } from './smart-table.service';\nimport { UserActivityService } from './user-activity.service';\nimport { OrdersChartService } from './orders-chart.service';\nimport { ProfitChartService } from './profit-chart.service';\nimport { TrafficListService } from './traffic-list.service';\nimport { PeriodsService } from './periods.service';\nimport { EarningService } from './earning.service';\nimport { OrdersProfitChartService } from './orders-profit-chart.service';\nimport { TrafficBarService } from './traffic-bar.service';\nimport { ProfitBarAnimationChartService } from './profit-bar-animation-chart.service';\nimport { TemperatureHumidityService } from './temperature-humidity.service';\nimport { SolarService } from './solar.service';\nimport { TrafficChartService } from './traffic-chart.service';\nimport { StatsBarService } from './stats-bar.service';\nimport { CountryOrderService } from './country-order.service';\nimport { StatsProgressBarService } from './stats-progress-bar.service';\nimport { VisitorsAnalyticsService } from './visitors-analytics.service';\nimport { SecurityCamerasService } from './security-cameras.service';\n\nconst SERVICES = [\n  UserService,\n  ElectricityService,\n  SmartTableService,\n  UserActivityService,\n  OrdersChartService,\n  ProfitChartService,\n  TrafficListService,\n  PeriodsService,\n  EarningService,\n  OrdersProfitChartService,\n  TrafficBarService,\n  ProfitBarAnimationChartService,\n  TemperatureHumidityService,\n  SolarService,\n  TrafficChartService,\n  StatsBarService,\n  CountryOrderService,\n  StatsProgressBarService,\n  VisitorsAnalyticsService,\n  SecurityCamerasService,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    ...SERVICES,\n  ],\n})\nexport class MockDataModule {\n  static forRoot(): ModuleWithProviders<MockDataModule> {\n    return {\n      ngModule: MockDataModule,\n      providers: [\n        ...SERVICES,\n      ],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PeriodsService } from './periods.service';\nimport { OrdersChart, OrdersChartData } from '../data/orders-chart';\n\n@Injectable()\nexport class OrdersChartService extends OrdersChartData {\n\n  private year = [\n    '2012',\n    '2013',\n    '2014',\n    '2015',\n    '2016',\n    '2017',\n    '2018',\n  ];\n\n  private data = { };\n\n  constructor(private period: PeriodsService) {\n    super();\n    this.data = {\n      week: this.getDataForWeekPeriod(),\n      month: this.getDataForMonthPeriod(),\n      year: this.getDataForYearPeriod(),\n    };\n  }\n\n  private getDataForWeekPeriod(): OrdersChart {\n    return {\n      chartLabel: this.getDataLabels(42, this.period.getWeeks()),\n      linesData: [\n        [\n          184, 267, 326, 366, 389, 399,\n          392, 371, 340, 304, 265, 227,\n          191, 158, 130, 108, 95, 91, 97,\n          109, 125, 144, 166, 189, 212,\n          236, 259, 280, 300, 316, 329,\n          338, 342, 339, 329, 312, 288,\n          258, 221, 178, 128, 71,\n        ],\n        [\n          158, 178, 193, 205, 212, 213,\n          204, 190, 180, 173, 168, 164,\n          162, 160, 159, 158, 159, 166,\n          179, 195, 215, 236, 257, 276,\n          292, 301, 304, 303, 300, 293,\n          284, 273, 262, 251, 241, 234,\n          232, 232, 232, 232, 232, 232,\n        ],\n        [\n          58, 137, 202, 251, 288, 312,\n          323, 324, 311, 288, 257, 222,\n          187, 154, 124, 100, 81, 68, 61,\n          58, 61, 69, 80, 96, 115, 137,\n          161, 186, 210, 233, 254, 271,\n          284, 293, 297, 297, 297, 297,\n          297, 297, 297, 297, 297,\n        ],\n      ],\n    };\n  }\n\n  private getDataForMonthPeriod(): OrdersChart {\n    return {\n      chartLabel: this.getDataLabels(47, this.period.getMonths()),\n      linesData: [\n        [\n          5, 63, 113, 156, 194, 225,\n          250, 270, 283, 289, 290,\n          286, 277, 264, 244, 220,\n          194, 171, 157, 151, 150,\n          152, 155, 160, 166, 170,\n          167, 153, 135, 115, 97,\n          82, 71, 64, 63, 62, 61,\n          62, 65, 73, 84, 102,\n          127, 159, 203, 259, 333,\n        ],\n        [\n          6, 83, 148, 200, 240,\n          265, 273, 259, 211,\n          122, 55, 30, 28, 36,\n          50, 68, 88, 109, 129,\n          146, 158, 163, 165,\n          173, 187, 208, 236,\n          271, 310, 346, 375,\n          393, 400, 398, 387,\n          368, 341, 309, 275,\n          243, 220, 206, 202,\n          207, 222, 247, 286, 348,\n        ],\n        [\n          398, 348, 315, 292, 274,\n          261, 251, 243, 237, 231,\n          222, 209, 192, 172, 152,\n          132, 116, 102, 90, 80, 71,\n          64, 58, 53, 49, 48, 54, 66,\n          84, 104, 125, 142, 156, 166,\n          172, 174, 172, 167, 159, 149,\n          136, 121, 105, 86, 67, 45, 22,\n        ],\n      ],\n    };\n  }\n\n  private getDataForYearPeriod(): OrdersChart {\n    return {\n      chartLabel: this.getDataLabels(42, this.year),\n      linesData: [\n        [\n          190, 269, 327, 366, 389, 398,\n          396, 387, 375, 359, 343, 327,\n          312, 298, 286, 276, 270, 268,\n          265, 258, 247, 234, 220, 204,\n          188, 172, 157, 142, 128, 116,\n          106, 99, 95, 94, 92, 89, 84,\n          77, 69, 60, 49, 36, 22,\n        ],\n        [\n          265, 307, 337, 359, 375, 386,\n          393, 397, 399, 397, 390, 379,\n          365, 347, 326, 305, 282, 261,\n          241, 223, 208, 197, 190, 187,\n          185, 181, 172, 160, 145, 126,\n          105, 82, 60, 40, 26, 19, 22,\n          43, 82, 141, 220, 321,\n        ],\n        [\n          9, 165, 236, 258, 244, 206,\n          186, 189, 209, 239, 273, 307,\n          339, 365, 385, 396, 398, 385,\n          351, 300, 255, 221, 197, 181,\n          170, 164, 162, 161, 159, 154,\n          146, 135, 122, 108, 96, 87,\n          83, 82, 82, 82, 82, 82, 82,\n        ],\n      ],\n    };\n  }\n\n  getDataLabels(nPoints: number, labelsArray: string[]): string[] {\n    const labelsArrayLength = labelsArray.length;\n    const step = Math.round(nPoints / labelsArrayLength);\n\n    return Array.from(Array(nPoints)).map((item, index) => {\n      const dataIndex = Math.round(index / step);\n\n      return index % step === 0 ? labelsArray[dataIndex] : '';\n    });\n  }\n\n  getOrdersChartData(period: string): OrdersChart {\n    return this.data[period];\n  }\n}\n","import { of as observableOf,  Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { OrdersChart, OrdersChartData } from '../data/orders-chart';\nimport { OrderProfitChartSummary, OrdersProfitChartData } from '../data/orders-profit-chart';\nimport { ProfitChart, ProfitChartData } from '../data/profit-chart';\n\n@Injectable()\nexport class OrdersProfitChartService extends OrdersProfitChartData {\n\n  private summary = [\n    {\n      title: 'Marketplace',\n      value: 3654,\n    },\n    {\n      title: 'Last Month',\n      value: 946,\n    },\n    {\n      title: 'Last Week',\n      value: 654,\n    },\n    {\n      title: 'Today',\n      value: 230,\n    },\n  ];\n\n  constructor(private ordersChartService: OrdersChartData,\n              private profitChartService: ProfitChartData) {\n    super();\n  }\n\n  getOrderProfitChartSummary(): Observable<OrderProfitChartSummary[]> {\n    return observableOf(this.summary);\n  }\n\n  getOrdersChartData(period: string): Observable<OrdersChart> {\n    return observableOf(this.ordersChartService.getOrdersChartData(period));\n  }\n\n  getProfitChartData(period: string): Observable<ProfitChart> {\n    return observableOf(this.profitChartService.getProfitChartData(period));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PeriodsService {\n  getYears() {\n    return [\n      '2010', '2011', '2012',\n      '2013', '2014', '2015',\n      '2016', '2017', '2018',\n    ];\n  }\n\n  getMonths() {\n    return [\n      'Jan', 'Feb', 'Mar',\n      'Apr', 'May', 'Jun',\n      'Jul', 'Aug', 'Sep',\n      'Oct', 'Nov', 'Dec',\n    ];\n  }\n\n  getWeeks() {\n    return [\n      'Mon',\n      'Tue',\n      'Wed',\n      'Thu',\n      'Fri',\n      'Sat',\n      'Sun',\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { ProfitBarAnimationChartData } from '../data/profit-bar-animation-chart';\n\n@Injectable()\nexport class ProfitBarAnimationChartService extends ProfitBarAnimationChartData {\n\n  private data: any;\n\n  constructor() {\n    super();\n    this.data = {\n      firstLine: this.getDataForFirstLine(),\n      secondLine: this.getDataForSecondLine(),\n    };\n  }\n\n  getDataForFirstLine(): number[] {\n    return this.createEmptyArray(100)\n      .map((_, index) => {\n        const oneFifth = index / 5;\n\n        return (Math.sin(oneFifth) * (oneFifth - 10) + index / 6) * 5;\n      });\n  }\n\n  getDataForSecondLine(): number[] {\n    return this.createEmptyArray(100)\n      .map((_, index) => {\n        const oneFifth = index / 5;\n\n        return (Math.cos(oneFifth) * (oneFifth - 10) + index / 6) * 5;\n      });\n  }\n\n  createEmptyArray(nPoints: number) {\n    return Array.from(Array(nPoints));\n  }\n\n  getChartData(): Observable<{ firstLine: number[]; secondLine: number[]; }> {\n    return observableOf(this.data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PeriodsService } from './periods.service';\nimport { ProfitChart, ProfitChartData } from '../data/profit-chart';\n\n@Injectable()\nexport class ProfitChartService extends ProfitChartData {\n\n  private year = [\n    '2012',\n    '2013',\n    '2014',\n    '2015',\n    '2016',\n    '2017',\n    '2018',\n  ];\n\n  private data = { };\n\n  constructor(private period: PeriodsService) {\n    super();\n    this.data = {\n      week: this.getDataForWeekPeriod(),\n      month: this.getDataForMonthPeriod(),\n      year: this.getDataForYearPeriod(),\n    };\n  }\n\n  private getDataForWeekPeriod(): ProfitChart {\n    const nPoint = this.period.getWeeks().length;\n\n    return {\n      chartLabel: this.period.getWeeks(),\n      data: [\n        this.getRandomData(nPoint),\n        this.getRandomData(nPoint),\n        this.getRandomData(nPoint),\n      ],\n    };\n  }\n\n  private getDataForMonthPeriod(): ProfitChart {\n    const nPoint = this.period.getMonths().length;\n\n    return {\n      chartLabel: this.period.getMonths(),\n      data: [\n        this.getRandomData(nPoint),\n        this.getRandomData(nPoint),\n        this.getRandomData(nPoint),\n      ],\n    };\n  }\n\n  private getDataForYearPeriod(): ProfitChart {\n    const nPoint = this.year.length;\n\n    return {\n      chartLabel: this.year,\n      data: [\n        this.getRandomData(nPoint),\n        this.getRandomData(nPoint),\n        this.getRandomData(nPoint),\n      ],\n    };\n  }\n\n  private getRandomData(nPoints: number): number[] {\n    return Array.from(Array(nPoints)).map(() => {\n      return Math.round(Math.random() * 500);\n    });\n  }\n\n  getProfitChartData(period: string): ProfitChart {\n    return this.data[period];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { Camera, SecurityCamerasData } from '../data/security-cameras';\n\n@Injectable()\nexport class SecurityCamerasService extends SecurityCamerasData {\n\n  private cameras: Camera[] = [\n    {\n      title: 'Camera #1',\n      source: 'assets/images/camera1.jpg',\n    },\n    {\n      title: 'Camera #2',\n      source: 'assets/images/camera2.jpg',\n    },\n    {\n      title: 'Camera #3',\n      source: 'assets/images/camera3.jpg',\n    },\n    {\n      title: 'Camera #4',\n      source: 'assets/images/camera4.jpg',\n    },\n  ];\n\n  getCamerasData(): Observable<Camera[]> {\n    return observableOf(this.cameras);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SmartTableData } from '../data/smart-table';\n\n@Injectable()\nexport class SmartTableService extends SmartTableData {\n\n  data = [{\n    id: 1,\n    firstName: 'Mark',\n    lastName: 'Otto',\n    username: '@mdo',\n    email: 'mdo@gmail.com',\n    age: '28',\n  }, {\n    id: 2,\n    firstName: 'Jacob',\n    lastName: 'Thornton',\n    username: '@fat',\n    email: 'fat@yandex.ru',\n    age: '45',\n  }, {\n    id: 3,\n    firstName: 'Larry',\n    lastName: 'Bird',\n    username: '@twitter',\n    email: 'twitter@outlook.com',\n    age: '18',\n  }, {\n    id: 4,\n    firstName: 'John',\n    lastName: 'Snow',\n    username: '@snow',\n    email: 'snow@gmail.com',\n    age: '20',\n  }, {\n    id: 5,\n    firstName: 'Jack',\n    lastName: 'Sparrow',\n    username: '@jack',\n    email: 'jack@yandex.ru',\n    age: '30',\n  }, {\n    id: 6,\n    firstName: 'Ann',\n    lastName: 'Smith',\n    username: '@ann',\n    email: 'ann@gmail.com',\n    age: '21',\n  }, {\n    id: 7,\n    firstName: 'Barbara',\n    lastName: 'Black',\n    username: '@barbara',\n    email: 'barbara@yandex.ru',\n    age: '43',\n  }, {\n    id: 8,\n    firstName: 'Sevan',\n    lastName: 'Bagrat',\n    username: '@sevan',\n    email: 'sevan@outlook.com',\n    age: '13',\n  }, {\n    id: 9,\n    firstName: 'Ruben',\n    lastName: 'Vardan',\n    username: '@ruben',\n    email: 'ruben@gmail.com',\n    age: '22',\n  }, {\n    id: 10,\n    firstName: 'Karen',\n    lastName: 'Sevan',\n    username: '@karen',\n    email: 'karen@yandex.ru',\n    age: '33',\n  }, {\n    id: 11,\n    firstName: 'Mark',\n    lastName: 'Otto',\n    username: '@mark',\n    email: 'mark@gmail.com',\n    age: '38',\n  }, {\n    id: 12,\n    firstName: 'Jacob',\n    lastName: 'Thornton',\n    username: '@jacob',\n    email: 'jacob@yandex.ru',\n    age: '48',\n  }, {\n    id: 13,\n    firstName: 'Haik',\n    lastName: 'Hakob',\n    username: '@haik',\n    email: 'haik@outlook.com',\n    age: '48',\n  }, {\n    id: 14,\n    firstName: 'Garegin',\n    lastName: 'Jirair',\n    username: '@garegin',\n    email: 'garegin@gmail.com',\n    age: '40',\n  }, {\n    id: 15,\n    firstName: 'Krikor',\n    lastName: 'Bedros',\n    username: '@krikor',\n    email: 'krikor@yandex.ru',\n    age: '32',\n  }, {\n    'id': 16,\n    'firstName': 'Francisca',\n    'lastName': 'Brady',\n    'username': '@Gibson',\n    'email': 'franciscagibson@comtours.com',\n    'age': 11,\n  }, {\n    'id': 17,\n    'firstName': 'Tillman',\n    'lastName': 'Figueroa',\n    'username': '@Snow',\n    'email': 'tillmansnow@comtours.com',\n    'age': 34,\n  }, {\n    'id': 18,\n    'firstName': 'Jimenez',\n    'lastName': 'Morris',\n    'username': '@Bryant',\n    'email': 'jimenezbryant@comtours.com',\n    'age': 45,\n  }, {\n    'id': 19,\n    'firstName': 'Sandoval',\n    'lastName': 'Jacobson',\n    'username': '@Mcbride',\n    'email': 'sandovalmcbride@comtours.com',\n    'age': 32,\n  }, {\n    'id': 20,\n    'firstName': 'Griffin',\n    'lastName': 'Torres',\n    'username': '@Charles',\n    'email': 'griffincharles@comtours.com',\n    'age': 19,\n  }, {\n    'id': 21,\n    'firstName': 'Cora',\n    'lastName': 'Parker',\n    'username': '@Caldwell',\n    'email': 'coracaldwell@comtours.com',\n    'age': 27,\n  }, {\n    'id': 22,\n    'firstName': 'Cindy',\n    'lastName': 'Bond',\n    'username': '@Velez',\n    'email': 'cindyvelez@comtours.com',\n    'age': 24,\n  }, {\n    'id': 23,\n    'firstName': 'Frieda',\n    'lastName': 'Tyson',\n    'username': '@Craig',\n    'email': 'friedacraig@comtours.com',\n    'age': 45,\n  }, {\n    'id': 24,\n    'firstName': 'Cote',\n    'lastName': 'Holcomb',\n    'username': '@Rowe',\n    'email': 'coterowe@comtours.com',\n    'age': 20,\n  }, {\n    'id': 25,\n    'firstName': 'Trujillo',\n    'lastName': 'Mejia',\n    'username': '@Valenzuela',\n    'email': 'trujillovalenzuela@comtours.com',\n    'age': 16,\n  }, {\n    'id': 26,\n    'firstName': 'Pruitt',\n    'lastName': 'Shepard',\n    'username': '@Sloan',\n    'email': 'pruittsloan@comtours.com',\n    'age': 44,\n  }, {\n    'id': 27,\n    'firstName': 'Sutton',\n    'lastName': 'Ortega',\n    'username': '@Black',\n    'email': 'suttonblack@comtours.com',\n    'age': 42,\n  }, {\n    'id': 28,\n    'firstName': 'Marion',\n    'lastName': 'Heath',\n    'username': '@Espinoza',\n    'email': 'marionespinoza@comtours.com',\n    'age': 47,\n  }, {\n    'id': 29,\n    'firstName': 'Newman',\n    'lastName': 'Hicks',\n    'username': '@Keith',\n    'email': 'newmankeith@comtours.com',\n    'age': 15,\n  }, {\n    'id': 30,\n    'firstName': 'Boyle',\n    'lastName': 'Larson',\n    'username': '@Summers',\n    'email': 'boylesummers@comtours.com',\n    'age': 32,\n  }, {\n    'id': 31,\n    'firstName': 'Haynes',\n    'lastName': 'Vinson',\n    'username': '@Mckenzie',\n    'email': 'haynesmckenzie@comtours.com',\n    'age': 15,\n  }, {\n    'id': 32,\n    'firstName': 'Miller',\n    'lastName': 'Acosta',\n    'username': '@Young',\n    'email': 'milleryoung@comtours.com',\n    'age': 55,\n  }, {\n    'id': 33,\n    'firstName': 'Johnston',\n    'lastName': 'Brown',\n    'username': '@Knight',\n    'email': 'johnstonknight@comtours.com',\n    'age': 29,\n  }, {\n    'id': 34,\n    'firstName': 'Lena',\n    'lastName': 'Pitts',\n    'username': '@Forbes',\n    'email': 'lenaforbes@comtours.com',\n    'age': 25,\n  }, {\n    'id': 35,\n    'firstName': 'Terrie',\n    'lastName': 'Kennedy',\n    'username': '@Branch',\n    'email': 'terriebranch@comtours.com',\n    'age': 37,\n  }, {\n    'id': 36,\n    'firstName': 'Louise',\n    'lastName': 'Aguirre',\n    'username': '@Kirby',\n    'email': 'louisekirby@comtours.com',\n    'age': 44,\n  }, {\n    'id': 37,\n    'firstName': 'David',\n    'lastName': 'Patton',\n    'username': '@Sanders',\n    'email': 'davidsanders@comtours.com',\n    'age': 26,\n  }, {\n    'id': 38,\n    'firstName': 'Holden',\n    'lastName': 'Barlow',\n    'username': '@Mckinney',\n    'email': 'holdenmckinney@comtours.com',\n    'age': 11,\n  }, {\n    'id': 39,\n    'firstName': 'Baker',\n    'lastName': 'Rivera',\n    'username': '@Montoya',\n    'email': 'bakermontoya@comtours.com',\n    'age': 47,\n  }, {\n    'id': 40,\n    'firstName': 'Belinda',\n    'lastName': 'Lloyd',\n    'username': '@Calderon',\n    'email': 'belindacalderon@comtours.com',\n    'age': 21,\n  }, {\n    'id': 41,\n    'firstName': 'Pearson',\n    'lastName': 'Patrick',\n    'username': '@Clements',\n    'email': 'pearsonclements@comtours.com',\n    'age': 42,\n  }, {\n    'id': 42,\n    'firstName': 'Alyce',\n    'lastName': 'Mckee',\n    'username': '@Daugherty',\n    'email': 'alycedaugherty@comtours.com',\n    'age': 55,\n  }, {\n    'id': 43,\n    'firstName': 'Valencia',\n    'lastName': 'Spence',\n    'username': '@Olsen',\n    'email': 'valenciaolsen@comtours.com',\n    'age': 20,\n  }, {\n    'id': 44,\n    'firstName': 'Leach',\n    'lastName': 'Holcomb',\n    'username': '@Humphrey',\n    'email': 'leachhumphrey@comtours.com',\n    'age': 28,\n  }, {\n    'id': 45,\n    'firstName': 'Moss',\n    'lastName': 'Baxter',\n    'username': '@Fitzpatrick',\n    'email': 'mossfitzpatrick@comtours.com',\n    'age': 51,\n  }, {\n    'id': 46,\n    'firstName': 'Jeanne',\n    'lastName': 'Cooke',\n    'username': '@Ward',\n    'email': 'jeanneward@comtours.com',\n    'age': 59,\n  }, {\n    'id': 47,\n    'firstName': 'Wilma',\n    'lastName': 'Briggs',\n    'username': '@Kidd',\n    'email': 'wilmakidd@comtours.com',\n    'age': 53,\n  }, {\n    'id': 48,\n    'firstName': 'Beatrice',\n    'lastName': 'Perry',\n    'username': '@Gilbert',\n    'email': 'beatricegilbert@comtours.com',\n    'age': 39,\n  }, {\n    'id': 49,\n    'firstName': 'Whitaker',\n    'lastName': 'Hyde',\n    'username': '@Mcdonald',\n    'email': 'whitakermcdonald@comtours.com',\n    'age': 35,\n  }, {\n    'id': 50,\n    'firstName': 'Rebekah',\n    'lastName': 'Duran',\n    'username': '@Gross',\n    'email': 'rebekahgross@comtours.com',\n    'age': 40,\n  }, {\n    'id': 51,\n    'firstName': 'Earline',\n    'lastName': 'Mayer',\n    'username': '@Woodward',\n    'email': 'earlinewoodward@comtours.com',\n    'age': 52,\n  }, {\n    'id': 52,\n    'firstName': 'Moran',\n    'lastName': 'Baxter',\n    'username': '@Johns',\n    'email': 'moranjohns@comtours.com',\n    'age': 20,\n  }, {\n    'id': 53,\n    'firstName': 'Nanette',\n    'lastName': 'Hubbard',\n    'username': '@Cooke',\n    'email': 'nanettecooke@comtours.com',\n    'age': 55,\n  }, {\n    'id': 54,\n    'firstName': 'Dalton',\n    'lastName': 'Walker',\n    'username': '@Hendricks',\n    'email': 'daltonhendricks@comtours.com',\n    'age': 25,\n  }, {\n    'id': 55,\n    'firstName': 'Bennett',\n    'lastName': 'Blake',\n    'username': '@Pena',\n    'email': 'bennettpena@comtours.com',\n    'age': 13,\n  }, {\n    'id': 56,\n    'firstName': 'Kellie',\n    'lastName': 'Horton',\n    'username': '@Weiss',\n    'email': 'kellieweiss@comtours.com',\n    'age': 48,\n  }, {\n    'id': 57,\n    'firstName': 'Hobbs',\n    'lastName': 'Talley',\n    'username': '@Sanford',\n    'email': 'hobbssanford@comtours.com',\n    'age': 28,\n  }, {\n    'id': 58,\n    'firstName': 'Mcguire',\n    'lastName': 'Donaldson',\n    'username': '@Roman',\n    'email': 'mcguireroman@comtours.com',\n    'age': 38,\n  }, {\n    'id': 59,\n    'firstName': 'Rodriquez',\n    'lastName': 'Saunders',\n    'username': '@Harper',\n    'email': 'rodriquezharper@comtours.com',\n    'age': 20,\n  }, {\n    'id': 60,\n    'firstName': 'Lou',\n    'lastName': 'Conner',\n    'username': '@Sanchez',\n    'email': 'lousanchez@comtours.com',\n    'age': 16,\n  }];\n\n  getData() {\n    return this.data;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { SolarData } from '../data/solar';\n\n@Injectable()\nexport class SolarService extends SolarData {\n  private value = 42;\n\n  getSolarData(): Observable<number> {\n    return observableOf(this.value);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { StatsBarData } from '../data/stats-bar';\n\n@Injectable()\nexport class StatsBarService extends StatsBarData {\n\n  private statsBarData: number[] = [\n    300, 520, 435, 530,\n    730, 620, 660, 860,\n  ];\n\n  getStatsBarData(): Observable<number[]> {\n    return observableOf(this.statsBarData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { ProgressInfo, StatsProgressBarData } from '../data/stats-progress-bar';\n\n@Injectable()\nexport class StatsProgressBarService extends StatsProgressBarData {\n  private progressInfoData: ProgressInfo[] = [\n    {\n      title: 'Today’s Profit',\n      value: 572900,\n      activeProgress: 70,\n      description: 'Better than last week (70%)',\n    },\n    {\n      title: 'New Orders',\n      value: 6378,\n      activeProgress: 30,\n      description: 'Better than last week (30%)',\n    },\n    {\n      title: 'New Comments',\n      value: 200,\n      activeProgress: 55,\n      description: 'Better than last week (55%)',\n    },\n  ];\n\n  getProgressInfoData(): Observable<ProgressInfo[]> {\n    return observableOf(this.progressInfoData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { TemperatureHumidityData, Temperature } from '../data/temperature-humidity';\n\n@Injectable()\nexport class TemperatureHumidityService extends TemperatureHumidityData {\n\n  private temperatureDate: Temperature = {\n    value: 24,\n    min: 12,\n    max: 30,\n  };\n\n  private humidityDate: Temperature = {\n    value: 87,\n    min: 0,\n    max: 100,\n  };\n\n  getTemperatureData(): Observable<Temperature> {\n    return observableOf(this.temperatureDate);\n  }\n\n  getHumidityData(): Observable<Temperature> {\n    return observableOf(this.humidityDate);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { PeriodsService } from './periods.service';\nimport { TrafficBarData, TrafficBar } from '../data/traffic-bar';\n\n@Injectable()\nexport class TrafficBarService extends TrafficBarData {\n\n  private data = { };\n\n  constructor(private period: PeriodsService) {\n    super();\n    this.data = {\n      week: this.getDataForWeekPeriod(),\n      month: this.getDataForMonthPeriod(),\n      year: this.getDataForYearPeriod(),\n    };\n  }\n\n  getDataForWeekPeriod(): TrafficBar {\n    return {\n      data: [10, 15, 19, 7, 20, 13, 15],\n      labels: this.period.getWeeks(),\n      formatter: '{c0} MB',\n    };\n  }\n\n  getDataForMonthPeriod(): TrafficBar {\n    return {\n      data: [0.5, 0.3, 0.8, 0.2, 0.3, 0.7, 0.8, 1, 0.7, 0.8, 0.6, 0.7],\n      labels: this.period.getMonths(),\n      formatter: '{c0} GB',\n    };\n  }\n\n  getDataForYearPeriod(): TrafficBar {\n    return {\n      data: [10, 15, 19, 7, 20, 13, 15, 19, 11],\n      labels: this.period.getYears(),\n      formatter: '{c0} GB',\n    };\n  }\n\n  getTrafficBarData(period: string): Observable<TrafficBar> {\n    return observableOf(this.data[period]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { TrafficChartData } from '../data/traffic-chart';\n\n@Injectable()\nexport class TrafficChartService extends TrafficChartData {\n\n  private data: number[] = [\n    300, 520, 435, 530,\n    730, 620, 660, 860,\n  ];\n\n  getTrafficChartData(): Observable<number[]> {\n    return observableOf(this.data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { PeriodsService } from './periods.service';\nimport { TrafficList, TrafficListData } from '../data/traffic-list';\n\n@Injectable()\nexport class TrafficListService extends TrafficListData {\n\n  private getRandom = (roundTo: number) => Math.round(Math.random() * roundTo);\n  private data = {};\n\n  constructor(private period: PeriodsService) {\n    super();\n    this.data = {\n      week: this.getDataWeek(),\n      month: this.getDataMonth(),\n      year: this.getDataYear(),\n    };\n  }\n\n  private getDataWeek(): TrafficList[] {\n    const getFirstDateInPeriod = () => {\n      const weeks = this.period.getWeeks();\n\n      return weeks[weeks.length - 1];\n    };\n\n    return this.reduceData(this.period.getWeeks(), getFirstDateInPeriod);\n  }\n\n  private getDataMonth(): TrafficList[] {\n    const getFirstDateInPeriod = () => {\n      const months = this.period.getMonths();\n\n      return months[months.length - 1];\n    };\n\n    return this.reduceData(this.period.getMonths(), getFirstDateInPeriod);\n  }\n\n  private getDataYear(): TrafficList[] {\n    const getFirstDateInPeriod = () => {\n      const years = this.period.getYears();\n\n      return `${parseInt(years[0], 10) - 1}`;\n    };\n\n    return this.reduceData(this.period.getYears(), getFirstDateInPeriod);\n  }\n\n  private reduceData(timePeriods: string[], getFirstDateInPeriod: () => string): TrafficList[] {\n    return timePeriods.reduce((result, timePeriod, index) => {\n      const hasResult = result[index - 1];\n      const prevDate = hasResult ?\n        result[index - 1].comparison.nextDate :\n        getFirstDateInPeriod();\n      const prevValue = hasResult ?\n        result[index - 1].comparison.nextValue :\n        this.getRandom(100);\n      const nextValue = this.getRandom(100);\n      const deltaValue = prevValue - nextValue;\n\n      const item = {\n        date: timePeriod,\n        value: this.getRandom(1000),\n        delta: {\n          up: deltaValue <= 0,\n          value: Math.abs(deltaValue),\n        },\n        comparison: {\n          prevDate,\n          prevValue,\n          nextDate: timePeriod,\n          nextValue,\n        },\n      };\n\n      return [...result, item];\n    }, []);\n  }\n\n  getTrafficListData(period: string): Observable<TrafficList> {\n    return observableOf(this.data[period]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf,  Observable } from 'rxjs';\nimport { PeriodsService } from './periods.service';\nimport { UserActive, UserActivityData } from '../data/user-activity';\n\n@Injectable()\nexport class UserActivityService extends UserActivityData {\n\n  private getRandom = (roundTo: number) => Math.round(Math.random() * roundTo);\n  private generateUserActivityRandomData(date) {\n    return {\n      date,\n      pagesVisitCount: this.getRandom(1000),\n      deltaUp: this.getRandom(1) % 2 === 0,\n      newVisits: this.getRandom(100),\n    };\n  }\n\n  data = {};\n\n  constructor(private periods: PeriodsService) {\n    super();\n    this.data = {\n      week: this.getDataWeek(),\n      month: this.getDataMonth(),\n      year: this.getDataYear(),\n    };\n  }\n\n  private getDataWeek(): UserActive[] {\n    return this.periods.getWeeks().map((week) => {\n      return this.generateUserActivityRandomData(week);\n    });\n  }\n\n  private getDataMonth(): UserActive[] {\n    const currentDate = new Date();\n    const days = currentDate.getDate();\n    const month = this.periods.getMonths()[currentDate.getMonth()];\n\n    return Array.from(Array(days)).map((_, index) => {\n      const date = `${index + 1} ${month}`;\n\n      return this.generateUserActivityRandomData(date);\n    });\n  }\n\n  private getDataYear(): UserActive[] {\n    return this.periods.getYears().map((year) => {\n      return this.generateUserActivityRandomData(year);\n    });\n  }\n\n  getUserActivityData(period: string): Observable<UserActive[]> {\n    return observableOf(this.data[period]);\n  }\n}\n","import { of as observableOf,  Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Contacts, RecentUsers, UserData } from '../data/users';\n\n@Injectable()\nexport class UserService extends UserData {\n\n  private time: Date = new Date;\n\n  private users = {\n    nick: { name: 'Thomas Christensen', picture: 'assets/images/nick.png' },\n    eva: { name: 'Eva Moor', picture: 'assets/images/eva.png' },\n    jack: { name: 'Jack Williams', picture: 'assets/images/jack.png' },\n    lee: { name: 'Lee Wong', picture: 'assets/images/lee.png' },\n    alan: { name: 'Alan Thompson', picture: 'assets/images/alan.png' },\n    kate: { name: 'Kate Martinez', picture: 'assets/images/kate.png' },\n  };\n  private types = {\n    mobile: 'mobile',\n    home: 'home',\n    work: 'work',\n  };\n  private contacts: Contacts[] = [\n    { user: this.users.nick, type: this.types.mobile },\n    { user: this.users.eva, type: this.types.home },\n    { user: this.users.jack, type: this.types.mobile },\n    { user: this.users.lee, type: this.types.mobile },\n    { user: this.users.alan, type: this.types.home },\n    { user: this.users.kate, type: this.types.work },\n  ];\n  private recentUsers: RecentUsers[]  = [\n    { user: this.users.alan, type: this.types.home, time: this.time.setHours(21, 12)},\n    { user: this.users.eva, type: this.types.home, time: this.time.setHours(17, 45)},\n    { user: this.users.nick, type: this.types.mobile, time: this.time.setHours(5, 29)},\n    { user: this.users.lee, type: this.types.mobile, time: this.time.setHours(11, 24)},\n    { user: this.users.jack, type: this.types.mobile, time: this.time.setHours(10, 45)},\n    { user: this.users.kate, type: this.types.work, time: this.time.setHours(9, 42)},\n    { user: this.users.kate, type: this.types.work, time: this.time.setHours(9, 31)},\n    { user: this.users.jack, type: this.types.mobile, time: this.time.setHours(8, 0)},\n  ];\n\n  getUsers(): Observable<any> {\n    return observableOf(this.users);\n  }\n\n  getContacts(): Observable<Contacts[]> {\n    return observableOf(this.contacts);\n  }\n\n  getRecentUsers(): Observable<RecentUsers[]> {\n    return observableOf(this.recentUsers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable } from 'rxjs';\nimport { PeriodsService } from './periods.service';\nimport { OutlineData, VisitorsAnalyticsData } from '../data/visitors-analytics';\n\n@Injectable()\nexport class VisitorsAnalyticsService extends VisitorsAnalyticsData {\n\n  constructor(private periodService: PeriodsService) {\n    super();\n  }\n\n  private pieChartValue = 75;\n  private innerLinePoints: number[] = [\n    94, 188, 225, 244, 253, 254, 249, 235, 208,\n    173, 141, 118, 105, 97, 94, 96, 104, 121, 147,\n    183, 224, 265, 302, 333, 358, 375, 388, 395,\n    400, 400, 397, 390, 377, 360, 338, 310, 278,\n    241, 204, 166, 130, 98, 71, 49, 32, 20, 13, 9,\n  ];\n  private outerLinePoints: number[] = [\n    85, 71, 59, 50, 45, 42, 41, 44 , 58, 88,\n    136 , 199, 267, 326, 367, 391, 400, 397,\n    376, 319, 200, 104, 60, 41, 36, 37, 44,\n    55, 74, 100 , 131, 159, 180, 193, 199, 200,\n    195, 184, 164, 135, 103, 73, 50, 33, 22, 15, 11,\n  ];\n  private generateOutlineLineData(): OutlineData[] {\n    const months = this.periodService.getMonths();\n    const outerLinePointsLength = this.outerLinePoints.length;\n    const monthsLength = months.length;\n\n    return this.outerLinePoints.map((p, index) => {\n      const monthIndex = Math.round(index / 4);\n      const label = (index % Math.round(outerLinePointsLength / monthsLength) === 0)\n        ? months[monthIndex]\n        : '';\n\n      return {\n        label,\n        value: p,\n      };\n    });\n  }\n\n  getInnerLineChartData(): Observable<number[]> {\n    return observableOf(this.innerLinePoints);\n  }\n\n  getOutlineLineChartData(): Observable<OutlineData[]> {\n    return observableOf(this.generateOutlineLineData());\n  }\n\n  getPieChartData(): Observable<number> {\n    return observableOf(this.pieChartValue);\n  }\n}\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\ndeclare const ga: any;\n\n@Injectable()\nexport class AnalyticsService {\n  private enabled: boolean;\n\n  constructor(private location: Location, private router: Router) {\n    this.enabled = false;\n  }\n\n  trackPageViews() {\n    if (this.enabled) {\n      this.router.events.pipe(\n        filter((event) => event instanceof NavigationEnd),\n      )\n        .subscribe(() => {\n          ga('send', {hitType: 'pageview', page: this.location.path()});\n        });\n    }\n  }\n\n  trackEvent(eventName: string) {\n    if (this.enabled) {\n      ga('send', 'event', eventName);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { delay, shareReplay, debounceTime } from 'rxjs/operators';\n\n@Injectable()\nexport class LayoutService {\n\n  protected layoutSize$ = new Subject();\n  protected layoutSizeChange$ = this.layoutSize$.pipe(\n    shareReplay({ refCount: true }),\n  );\n\n  changeLayoutSize() {\n    this.layoutSize$.next();\n  }\n\n  onChangeLayoutSize(): Observable<any> {\n    return this.layoutSizeChange$.pipe(delay(1));\n  }\n\n  onSafeChangeLayoutSize(): Observable<any> {\n    return this.layoutSizeChange$.pipe(\n      debounceTime(350),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport class Track {\n  name: string;\n  artist: string;\n  url: string;\n  cover: string;\n}\n\n@Injectable()\nexport class PlayerService {\n  current: number;\n  playlist: Track[] = [\n    {\n      name: 'Don\\'t Wanna Fight',\n      artist: 'Alabama Shakes',\n      url: 'https://p.scdn.co/mp3-preview/6156cdbca425a894972c02fca9d76c0b70e001af',\n      cover: 'assets/images/cover1.jpg',\n    },\n    {\n      name: 'Harder',\n      artist: 'Daft Punk',\n      url: 'https://p.scdn.co/mp3-preview/92a04c7c0e96bf93a1b1b1cae7dfff1921969a7b',\n      cover: 'assets/images/cover2.jpg',\n    },\n    {\n      name: 'Come Together',\n      artist: 'Beatles',\n      url: 'https://p.scdn.co/mp3-preview/83090a4db6899eaca689ae35f69126dbe65d94c9',\n      cover: 'assets/images/cover3.jpg',\n    },\n  ];\n\n  random(): Track {\n    this.current = Math.floor(Math.random() * this.playlist.length);\n    return this.playlist[this.current];\n  }\n\n  next(): Track {\n    return this.getNextTrack();\n  }\n\n  prev() {\n    return this.getPrevTrack();\n  }\n\n  private getNextTrack(): Track {\n    if (this.current === this.playlist.length - 1) {\n      this.current = 0;\n    } else {\n      this.current++;\n    }\n\n    return this.playlist[this.current];\n  }\n\n  private getPrevTrack(): Track {\n    if (this.current === 0) {\n      this.current = this.playlist.length - 1;\n    } else {\n      this.current--;\n    }\n\n    return this.playlist[this.current];\n  }\n}\n","import { Injectable, Inject, PLATFORM_ID, OnDestroy } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { NB_DOCUMENT } from '@nebular/theme';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SeoService implements OnDestroy {\n\n  private readonly destroy$ = new Subject<void>();\n  private readonly dom: Document;\n  private readonly isBrowser: boolean;\n  private linkCanonical: HTMLLinkElement;\n\n  constructor(\n    private router: Router,\n    @Inject(NB_DOCUMENT) document,\n    @Inject(PLATFORM_ID) platformId,\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.dom = document;\n\n    if (this.isBrowser) {\n      this.createCanonicalTag();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  createCanonicalTag() {\n    this.linkCanonical = this.dom.createElement('link');\n    this.linkCanonical.setAttribute('rel', 'canonical');\n    this.dom.head.appendChild(this.linkCanonical);\n    this.linkCanonical.setAttribute('href', this.getCanonicalUrl());\n  }\n\n  trackCanonicalChanges() {\n    if (!this.isBrowser) {\n      return;\n    }\n\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      takeUntil(this.destroy$),\n    )\n      .subscribe(() => {\n        this.linkCanonical.setAttribute('href', this.getCanonicalUrl());\n      });\n  }\n\n  private getCanonicalUrl(): string {\n    return this.dom.location.origin + this.dom.location.pathname;\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { of as observableOf,  Observable,  BehaviorSubject } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { NbLayoutDirectionService, NbLayoutDirection } from '@nebular/theme';\n\n@Injectable()\nexport class StateService implements OnDestroy {\n\n  protected layouts: any = [\n    {\n      name: 'One Column',\n      icon: 'nb-layout-default',\n      id: 'one-column',\n      selected: true,\n    },\n    {\n      name: 'Two Column',\n      icon: 'nb-layout-two-column',\n      id: 'two-column',\n    },\n    {\n      name: 'Center Column',\n      icon: 'nb-layout-centre',\n      id: 'center-column',\n    },\n  ];\n\n  protected sidebars: any = [\n    {\n      name: 'Sidebar at layout start',\n      icon: 'nb-layout-sidebar-left',\n      id: 'start',\n      selected: true,\n    },\n    {\n      name: 'Sidebar at layout end',\n      icon: 'nb-layout-sidebar-right',\n      id: 'end',\n    },\n  ];\n\n  protected layoutState$ = new BehaviorSubject(this.layouts[0]);\n  protected sidebarState$ = new BehaviorSubject(this.sidebars[0]);\n\n  alive = true;\n\n  constructor(directionService: NbLayoutDirectionService) {\n    directionService.onDirectionChange()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(direction => this.updateSidebarIcons(direction));\n\n    this.updateSidebarIcons(directionService.getDirection());\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  private updateSidebarIcons(direction: NbLayoutDirection) {\n    const [ startSidebar, endSidebar ] = this.sidebars;\n    const isLtr = direction === NbLayoutDirection.LTR;\n    const startIconClass = isLtr ? 'nb-layout-sidebar-left' : 'nb-layout-sidebar-right';\n    const endIconClass = isLtr ? 'nb-layout-sidebar-right' : 'nb-layout-sidebar-left';\n    startSidebar.icon = startIconClass;\n    endSidebar.icon = endIconClass;\n  }\n\n  setLayoutState(state: any): any {\n    this.layoutState$.next(state);\n  }\n\n  getLayoutStates(): Observable<any[]> {\n    return observableOf(this.layouts);\n  }\n\n  onLayoutState(): Observable<any> {\n    return this.layoutState$.asObservable();\n  }\n\n  setSidebarState(state: any): any {\n    this.sidebarState$.next(state);\n  }\n\n  getSidebarStates(): Observable<any[]> {\n    return observableOf(this.sidebars);\n  }\n\n  onSidebarState(): Observable<any> {\n    return this.sidebarState$.asObservable();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-footer',\n  styleUrls: ['./footer.component.scss'],\n  template: `\n    <span class=\"created-by\">\n      <b><a href=\"https://maritimeconnectivity.net\" target=\"_blank\">Maritime Connectivity Platform Consortium</a></b>, 2022\n    </span>\n    <div class=\"socials\">\n      <a href=\"https://github.com/maritimeconnectivity\" target=\"_blank\" class=\"ion ion-social-github\"></a>\n      <a href=\"https://www.linkedin.com/company/maritime-connectivity-platform-consortium/\" target=\"_blank\" class=\"ion ion-social-linkedin\"></a>\n    </div>\n  `,\n})\nexport class FooterComponent {\n}\n","<div class=\"header-container\">\n  <div class=\"logo-container\">\n    <a (click)=\"toggleSidebar()\" href=\"#\" class=\"sidebar-toggle\">\n      <nb-icon icon=\"menu-2-outline\"></nb-icon>\n    </a>\n    <a class=\"logo\" href=\"#\" (click)=\"navigateHome()\">MCP Management Portal</a>\n    <nb-select [selected]=\"currentTheme\" (selectedChange)=\"changeTheme($event)\" status=\"primary\">\n      <nb-option *ngFor=\"let theme of themes\" [value]=\"theme.value\"> {{ theme.name }}</nb-option>\n    </nb-select>\n  </div>\n</div>\n\n<div class=\"header-container\">\n  <nb-actions size=\"small\">\n    <nb-action class=\"user-action\" *nbIsGranted=\"['view', 'user']\" >\n      <nb-user [name]=\"userName\" (click)=\"navigateHome()\">\n      </nb-user>\n    </nb-action>\n  </nb-actions>\n  <a href=\"{{logoutUrl}}\">Log out</a>\n</div>\n","import { AuthService } from './../../../auth/auth.service';\nimport { KeycloakService } from 'keycloak-angular';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NbMediaBreakpointsService, NbMenuService, NbSidebarService, NbThemeService } from '@nebular/theme';\n\nimport { UserData } from '../../../@core/data/users';\nimport { LayoutService } from '../../../@core/utils';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ngx-header',\n  styleUrls: ['./header.component.scss'],\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  private destroy$: Subject<void> = new Subject<void>();\n  userPictureOnly: boolean = false;\n  userName: string;\n  logoutUrl: string;\n\n  themes = [\n    {\n      value: 'default',\n      name: 'Light',\n    },\n    {\n      value: 'dark',\n      name: 'Dark',\n    },\n    {\n      value: 'cosmic',\n      name: 'Cosmic',\n    },\n    {\n      value: 'corporate',\n      name: 'Corporate',\n    },\n  ];\n\n  currentTheme = 'default';\n\n  constructor(private sidebarService: NbSidebarService,\n              private menuService: NbMenuService,\n              private themeService: NbThemeService,\n              private layoutService: LayoutService,\n              private breakpointService: NbMediaBreakpointsService,\n              private router: Router,\n              private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.currentTheme = this.themeService.currentTheme;\n\n    if (this.authService.authState.user) {\n      this.userName = this.authService.authState.user.lastName + ' ' + this.authService.authState.user.firstName;\n    }\n\n    this.logoutUrl = this.authService.getLogoutUrl();\n\n    const { xl } = this.breakpointService.getBreakpointsMap();\n    this.themeService.onMediaQueryChange()\n      .pipe(\n        map(([, currentBreakpoint]) => currentBreakpoint.width < xl),\n        takeUntil(this.destroy$),\n      )\n      .subscribe((isLessThanXl: boolean) => this.userPictureOnly = isLessThanXl);\n\n    this.themeService.onThemeChange()\n      .pipe(\n        map(({ name }) => name),\n        takeUntil(this.destroy$),\n      )\n      .subscribe(themeName => this.currentTheme = themeName);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  changeTheme(themeName: string) {\n    this.themeService.changeTheme(themeName);\n  }\n\n  toggleSidebar(): boolean {\n    this.sidebarService.toggle(true, 'menu-sidebar');\n    this.layoutService.changeLayoutSize();\n\n    return false;\n  }\n\n  navigateHome() {\n    this.router.navigate(['pages/ir/users/' + this.authService.authState.user.mrn]);\n    return false;\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ngx-search-input',\n  styleUrls: ['./search-input.component.scss'],\n  template: `\n    <i class=\"control-icon ion ion-ios-search\"\n       (click)=\"showInput()\"></i>\n    <input placeholder=\"Type your search request here...\"\n           #input class='search'\n           [class.hidden]=\"!isInputShown\"\n           (blur)=\"hideInput()\"\n           (input)=\"onInput($event)\">\n  `,\n})\nexport class SearchInputComponent {\n  @ViewChild('input', { static: true }) input: ElementRef;\n\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\n\n  isInputShown = false;\n\n  showInput() {\n    this.isInputShown = true;\n    this.input.nativeElement.focus();\n  }\n\n  hideInput() {\n    this.isInputShown = false;\n  }\n\n  onInput(val: string) {\n    this.search.emit(val);\n  }\n}\n","import { Component, OnDestroy, AfterViewInit, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\n\n@Component({\n  selector: 'ngx-tiny-mce',\n  template: '',\n})\nexport class TinyMCEComponent implements OnDestroy, AfterViewInit {\n\n  @Output() editorKeyup = new EventEmitter<any>();\n\n  editor: any;\n\n  constructor(\n    private host: ElementRef,\n    private locationStrategy: LocationStrategy,\n  ) { }\n\n  ngAfterViewInit() {\n    tinymce.init({\n      target: this.host.nativeElement,\n      plugins: ['link', 'paste', 'table'],\n      skin_url: `${this.locationStrategy.getBaseHref()}assets/skins/lightgray`,\n      setup: editor => {\n        this.editor = editor;\n        editor.on('keyup', () => {\n          this.editorKeyup.emit(editor.getContent());\n        });\n      },\n      height: '320',\n    });\n  }\n\n  ngOnDestroy() {\n    tinymce.remove(this.editor);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-one-column-layout',\n  styleUrls: ['./one-column.layout.scss'],\n  template: `\n    <nb-layout windowMode>\n      <nb-layout-header fixed>\n        <ngx-header></ngx-header>\n      </nb-layout-header>\n\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive>\n        <ng-content select=\"nb-menu\"></ng-content>\n      </nb-sidebar>\n\n      <nb-layout-column>\n        <ng-content select=\"router-outlet\"></ng-content>\n      </nb-layout-column>\n\n      <nb-layout-footer fixed>\n        <ngx-footer></ngx-footer>\n      </nb-layout-footer>\n    </nb-layout>\n  `,\n})\nexport class OneColumnLayoutComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-three-columns-layout',\n  styleUrls: ['./three-columns.layout.scss'],\n  template: `\n    <nb-layout windowMode>\n      <nb-layout-header fixed>\n        <ngx-header></ngx-header>\n      </nb-layout-header>\n\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive>\n        <ng-content select=\"nb-menu\"></ng-content>\n      </nb-sidebar>\n\n      <nb-layout-column class=\"small\">\n      </nb-layout-column>\n\n      <nb-layout-column>\n        <ng-content select=\"router-outlet\"></ng-content>\n      </nb-layout-column>\n\n      <nb-layout-column class=\"small\">\n      </nb-layout-column>\n\n      <nb-layout-footer fixed>\n        <ngx-footer></ngx-footer>\n      </nb-layout-footer>\n    </nb-layout>\n  `,\n})\nexport class ThreeColumnsLayoutComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-two-columns-layout',\n  styleUrls: ['./two-columns.layout.scss'],\n  template: `\n    <nb-layout windowMode>\n      <nb-layout-header fixed>\n        <ngx-header></ngx-header>\n      </nb-layout-header>\n\n      <nb-sidebar class=\"menu-sidebar\" tag=\"menu-sidebar\" responsive>\n        <ng-content select=\"nb-menu\"></ng-content>\n      </nb-sidebar>\n\n      <nb-layout-column class=\"small\">\n      </nb-layout-column>\n\n      <nb-layout-column>\n        <ng-content select=\"router-outlet\"></ng-content>\n      </nb-layout-column>\n\n      <nb-layout-footer fixed>\n        <ngx-footer></ngx-footer>\n      </nb-layout-footer>\n\n    </nb-layout>\n  `,\n})\nexport class TwoColumnsLayoutComponent {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxCapitalize' })\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(input: string): string {\n    return input && input.length\n      ? (input.charAt(0).toUpperCase() + input.slice(1).toLowerCase())\n      : input;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxNumberWithCommas' })\nexport class NumberWithCommasPipe implements PipeTransform {\n\n  transform(input: number): string {\n    return new Intl.NumberFormat().format(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxPlural' })\nexport class PluralPipe implements PipeTransform {\n\n  transform(input: number, label: string, pluralLabel: string = ''): string {\n    input = input || 0;\n    return input === 1\n      ? `${input} ${label}`\n      : pluralLabel\n        ? `${input} ${pluralLabel}`\n        : `${input} ${label}s`;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'ngxRound' })\nexport class RoundPipe implements PipeTransform {\n\n  transform(input: number): number {\n    return Math.round(input);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'timing' })\nexport class TimingPipe implements PipeTransform {\n  transform(time: number): string {\n    if (time) {\n      const minutes = Math.floor(time / 60);\n      const seconds = Math.floor(time % 60);\n      return `${this.initZero(minutes)}${minutes}:${this.initZero(seconds)}${seconds}`;\n    }\n\n    return '00:00';\n  }\n\n  private initZero(time: number): string {\n    return time < 10 ? '0' : '';\n  }\n}\n","import { NbJSThemeOptions, CORPORATE_THEME as baseTheme } from '@nebular/theme';\n\nconst baseThemeVariables = baseTheme.variables;\n\nexport const CORPORATE_THEME = {\n  name: 'corporate',\n  base: 'corporate',\n  variables: {\n    temperature: {\n      arcFill: [ '#ffa36b', '#ffa36b', '#ff9e7a', '#ff9888', '#ff8ea0' ],\n      arcEmpty: baseThemeVariables.bg2,\n      thumbBg: baseThemeVariables.bg2,\n      thumbBorder: '#ffa36b',\n    },\n\n    solar: {\n      gradientLeft: baseThemeVariables.primary,\n      gradientRight: baseThemeVariables.primary,\n      shadowColor: 'rgba(0, 0, 0, 0)',\n      secondSeriesFill: baseThemeVariables.bg2,\n      radius: ['80%', '90%'],\n    },\n\n    traffic: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      yAxisSplitLine: 'rgba(0, 0, 0, 0)',\n\n      lineBg: baseThemeVariables.primary,\n      lineShadowBlur: '0',\n      itemColor: baseThemeVariables.border4,\n      itemBorderColor: baseThemeVariables.border4,\n      itemEmphasisBorderColor: baseThemeVariables.primaryLight,\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n      shadowLineShadow: 'rgba(0, 0, 0, 0)',\n      gradFrom: baseThemeVariables.bg,\n      gradTo: baseThemeVariables.bg,\n    },\n\n    electricity: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: baseThemeVariables.fgText,\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      axisLineColor: baseThemeVariables.border3,\n      xAxisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n      lineGradFrom: baseThemeVariables.primary,\n      lineGradTo: baseThemeVariables.primary,\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: 'rgba(0, 0, 0, 0)',\n      areaGradTo: 'rgba(0, 0, 0, 0)',\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n    },\n\n    bubbleMap: {\n      titleColor: baseThemeVariables.fgText,\n      areaColor: baseThemeVariables.bg4,\n      areaHoverColor: baseThemeVariables.fgHighlight,\n      areaBorderColor: baseThemeVariables.border5,\n    },\n\n    profitBarAnimationEchart: {\n      textColor: baseThemeVariables.fgText,\n\n      firstAnimationBarColor: baseThemeVariables.primary,\n      secondAnimationBarColor: baseThemeVariables.success,\n\n      splitLineStyleOpacity: '1',\n      splitLineStyleWidth: '1',\n      splitLineStyleColor: baseThemeVariables.separator,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n\n    trafficBarEchart: {\n      gradientFrom: baseThemeVariables.warningLight,\n      gradientTo: baseThemeVariables.warning,\n      shadow: baseThemeVariables.warningLight,\n      shadowBlur: '0',\n\n      axisTextColor: baseThemeVariables.fgText,\n      axisFontSize: '12',\n\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n    },\n\n    countryOrders: {\n      countryBorderColor: baseThemeVariables.border4,\n      countryFillColor: baseThemeVariables.bg4,\n      countryBorderWidth: '1',\n      hoveredCountryBorderColor: baseThemeVariables.primary,\n      hoveredCountryFillColor: baseThemeVariables.primaryLight,\n      hoveredCountryBorderWidth: '1',\n\n      chartAxisLineColor: baseThemeVariables.border4,\n      chartAxisTextColor: baseThemeVariables.fg,\n      chartAxisFontSize: '16',\n      chartGradientTo: baseThemeVariables.primary,\n      chartGradientFrom: baseThemeVariables.primaryLight,\n      chartAxisSplitLine: baseThemeVariables.separator,\n      chartShadowLineColor: baseThemeVariables.primaryLight,\n\n      chartLineBottomShadowColor: baseThemeVariables.primary,\n\n      chartInnerLineColor: baseThemeVariables.bg2,\n    },\n\n    echarts: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.fgText,\n      splitLineColor: baseThemeVariables.separator,\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\n      tooltipBackgroundColor: baseThemeVariables.primary,\n      areaOpacity: '0.7',\n    },\n\n    chartjs: {\n      axisLineColor: baseThemeVariables.separator,\n      textColor: baseThemeVariables.fgText,\n    },\n\n    orders: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n\n      // first line\n      firstAreaGradFrom: baseThemeVariables.bg3,\n      firstAreaGradTo: baseThemeVariables.bg3,\n      firstShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n\n      // second line\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n\n      secondAreaGradFrom: 'rgba(0, 0, 0, 0)',\n      secondAreaGradTo: 'rgba(0, 0, 0, 0)',\n      secondShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n\n      // third line\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n\n      thirdAreaGradFrom: 'rgba(0, 0, 0, 0)',\n      thirdAreaGradTo: 'rgba(0, 0, 0, 0)',\n      thirdShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n    },\n\n    profit: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.border4,\n      splitLineColor: baseThemeVariables.separator,\n      areaOpacity: '1',\n\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n\n      // first bar\n      firstLineGradFrom: baseThemeVariables.bg3,\n      firstLineGradTo: baseThemeVariables.bg3,\n      firstLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // second bar\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n      secondLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // third bar\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.success,\n      thirdLineShadow: 'rgba(0, 0, 0, 0)',\n    },\n\n    orderProfitLegend: {\n      firstItem: baseThemeVariables.success,\n      secondItem: baseThemeVariables.primary,\n      thirdItem: baseThemeVariables.bg3,\n    },\n\n    visitors: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '1',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'dotted',\n      lineWidth: '6',\n      lineGradFrom: '#ffffff',\n      lineGradTo: '#ffffff',\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: baseThemeVariables.primary,\n      areaGradTo: baseThemeVariables.primaryLight,\n\n      innerLineStyle: 'solid',\n      innerLineWidth: '1',\n\n      innerAreaGradFrom: baseThemeVariables.success,\n      innerAreaGradTo: baseThemeVariables.success,\n    },\n\n    visitorsLegend: {\n      firstIcon: baseThemeVariables.success,\n      secondIcon: baseThemeVariables.primary,\n    },\n\n    visitorsPie: {\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n      firstPieRadius: ['65%', '90%'],\n\n      secondPieGradientLeft: baseThemeVariables.warning,\n      secondPieGradientRight: baseThemeVariables.warningLight,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n      secondPieRadius: ['63%', '92%'],\n      shadowOffsetX: '-4',\n      shadowOffsetY: '-4',\n    },\n\n    visitorsPieLegend: {\n      firstSection: baseThemeVariables.warning,\n      secondSection: baseThemeVariables.success,\n    },\n\n    earningPie: {\n      radius: ['65%', '100%'],\n      center: ['50%', '50%'],\n\n      fontSize: '22',\n\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      secondPieGradientLeft: baseThemeVariables.primary,\n      secondPieGradientRight: baseThemeVariables.primary,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      thirdPieGradientLeft: baseThemeVariables.warning,\n      thirdPieGradientRight: baseThemeVariables.warning,\n      thirdPieShadowColor: 'rgba(0, 0, 0, 0)',\n    },\n\n    earningLine: {\n      gradFrom: baseThemeVariables.primary,\n      gradTo: baseThemeVariables.primary,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n  },\n} as NbJSThemeOptions;\n","import { NbJSThemeOptions, COSMIC_THEME as baseTheme } from '@nebular/theme';\n\nconst baseThemeVariables = baseTheme.variables;\n\nexport const COSMIC_THEME = {\n  name: 'cosmic',\n  base: 'cosmic',\n  variables: {\n    temperature: {\n      arcFill: [ '#2ec7fe', '#31ffad', '#7bff24', '#fff024', '#f7bd59' ],\n      arcEmpty: baseThemeVariables.bg2,\n      thumbBg: '#ffffff',\n      thumbBorder: '#ffffff',\n    },\n\n    solar: {\n      gradientLeft: baseThemeVariables.primary,\n      gradientRight: baseThemeVariables.primary,\n      shadowColor: 'rgba(0, 0, 0, 0)',\n      secondSeriesFill: baseThemeVariables.bg2,\n      radius: ['70%', '90%'],\n    },\n\n    traffic: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'box-shadow: 0px 2px 46px 0 rgba(50, 50, 89); border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      lineBg: baseThemeVariables.border2,\n      lineShadowBlur: '14',\n      itemColor: baseThemeVariables.border2,\n      itemBorderColor: baseThemeVariables.border2,\n      itemEmphasisBorderColor: baseThemeVariables.primary,\n      shadowLineDarkBg: baseThemeVariables.border3,\n      shadowLineShadow: baseThemeVariables.border3,\n      gradFrom: baseThemeVariables.bg,\n      gradTo: baseThemeVariables.bg2,\n    },\n\n    electricity: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: baseThemeVariables.fgText,\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'box-shadow: 0px 2px 46px 0 rgba(0, 255, 170, 0.35); border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      axisLineColor: baseThemeVariables.border3,\n      xAxisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.border2,\n      lineStyle: 'dotted',\n      lineWidth: '6',\n      lineGradFrom: baseThemeVariables.success,\n      lineGradTo: baseThemeVariables.warning,\n      lineShadow: baseThemeVariables.bg4,\n\n      areaGradFrom: baseThemeVariables.bg2,\n      areaGradTo: baseThemeVariables.bg3,\n      shadowLineDarkBg: baseThemeVariables.bg3,\n    },\n\n    bubbleMap: {\n      titleColor: baseThemeVariables.fgText,\n      areaColor: baseThemeVariables.bg4,\n      areaHoverColor: baseThemeVariables.fgHighlight,\n      areaBorderColor: baseThemeVariables.border5,\n    },\n\n    profitBarAnimationEchart: {\n      textColor: baseThemeVariables.fgText,\n\n      firstAnimationBarColor: baseThemeVariables.primary,\n      secondAnimationBarColor: baseThemeVariables.success,\n\n      splitLineStyleOpacity: '1',\n      splitLineStyleWidth: '1',\n      splitLineStyleColor: baseThemeVariables.border2,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n\n    trafficBarEchart: {\n      gradientFrom: baseThemeVariables.warningLight,\n      gradientTo: baseThemeVariables.warning,\n      shadow: baseThemeVariables.warningLight,\n      shadowBlur: '5',\n\n      axisTextColor: baseThemeVariables.fgText,\n      axisFontSize: '12',\n\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n    },\n\n    countryOrders: {\n      countryBorderColor: baseThemeVariables.border4,\n      countryFillColor: baseThemeVariables.bg3,\n      countryBorderWidth: '1',\n      hoveredCountryBorderColor: baseThemeVariables.primary,\n      hoveredCountryFillColor: baseThemeVariables.primaryLight,\n      hoveredCountryBorderWidth: '1',\n\n      chartAxisLineColor: baseThemeVariables.border4,\n      chartAxisTextColor: baseThemeVariables.fg,\n      chartAxisFontSize: '16',\n      chartGradientTo: baseThemeVariables.primary,\n      chartGradientFrom: baseThemeVariables.primaryLight,\n      chartAxisSplitLine: baseThemeVariables.separator,\n      chartShadowLineColor: baseThemeVariables.primaryLight,\n\n      chartLineBottomShadowColor: baseThemeVariables.primary,\n\n      chartInnerLineColor: baseThemeVariables.bg2,\n    },\n\n    echarts: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.fgText,\n      splitLineColor: baseThemeVariables.separator,\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\n      tooltipBackgroundColor: baseThemeVariables.primary,\n      areaOpacity: '1',\n    },\n\n    chartjs: {\n      axisLineColor: baseThemeVariables.separator,\n      textColor: baseThemeVariables.fgText,\n    },\n\n    orders: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n\n      // first line\n      firstAreaGradFrom: baseThemeVariables.bg2,\n      firstAreaGradTo: baseThemeVariables.bg2,\n      firstShadowLineDarkBg: baseThemeVariables.bg2,\n\n      // second line\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n\n      secondAreaGradFrom: 'rgba(161, 110, 255, 0.8)',\n      secondAreaGradTo: 'rgba(161, 110, 255, 0.5)',\n      secondShadowLineDarkBg: baseThemeVariables.primary,\n\n      // third line\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n\n      thirdAreaGradFrom: 'rgba(0, 214, 143, 0.7)',\n      thirdAreaGradTo: 'rgba(0, 214, 143, 0.4)',\n      thirdShadowLineDarkBg: baseThemeVariables.success,\n    },\n\n    profit: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.border4,\n      splitLineColor: baseThemeVariables.separator,\n      areaOpacity: '1',\n\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n\n      // first bar\n      firstLineGradFrom: baseThemeVariables.bg2,\n      firstLineGradTo: baseThemeVariables.bg2,\n      firstLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // second bar\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n      secondLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // third bar\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n      thirdLineShadow: 'rgba(0, 0, 0, 0)',\n    },\n\n    orderProfitLegend: {\n      firstItem: baseThemeVariables.success,\n      secondItem: baseThemeVariables.primary,\n      thirdItem: baseThemeVariables.bg2,\n    },\n\n    visitors: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '1',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'dotted',\n      lineWidth: '6',\n      lineGradFrom: '#ffffff',\n      lineGradTo: '#ffffff',\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: baseThemeVariables.primary,\n      areaGradTo: baseThemeVariables.primaryLight,\n\n      innerLineStyle: 'solid',\n      innerLineWidth: '1',\n\n      innerAreaGradFrom: baseThemeVariables.success,\n      innerAreaGradTo: baseThemeVariables.success,\n    },\n\n    visitorsLegend: {\n      firstIcon: baseThemeVariables.success,\n      secondIcon: baseThemeVariables.primary,\n    },\n\n    visitorsPie: {\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.successLight,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n      firstPieRadius: ['70%', '90%'],\n\n      secondPieGradientLeft: baseThemeVariables.warning,\n      secondPieGradientRight: baseThemeVariables.warningLight,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n      secondPieRadius: ['60%', '95%'],\n      shadowOffsetX: '0',\n      shadowOffsetY: '3',\n    },\n\n    visitorsPieLegend: {\n      firstSection: baseThemeVariables.warning,\n      secondSection: baseThemeVariables.success,\n    },\n\n    earningPie: {\n      radius: ['65%', '100%'],\n      center: ['50%', '50%'],\n\n      fontSize: '22',\n\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      secondPieGradientLeft: baseThemeVariables.primary,\n      secondPieGradientRight: baseThemeVariables.primary,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      thirdPieGradientLeft: baseThemeVariables.warning,\n      thirdPieGradientRight: baseThemeVariables.warning,\n      thirdPieShadowColor: 'rgba(0, 0, 0, 0)',\n    },\n\n    earningLine: {\n      gradFrom: baseThemeVariables.primary,\n      gradTo: baseThemeVariables.primary,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n  },\n} as NbJSThemeOptions;\n","import { NbJSThemeOptions, DARK_THEME as baseTheme } from '@nebular/theme';\n\nconst baseThemeVariables = baseTheme.variables;\n\nexport const DARK_THEME = {\n  name: 'dark',\n  base: 'dark',\n  variables: {\n    temperature: {\n      arcFill: [\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n      ],\n      arcEmpty: baseThemeVariables.bg2,\n      thumbBg: baseThemeVariables.bg2,\n      thumbBorder: baseThemeVariables.primary,\n    },\n\n    solar: {\n      gradientLeft: baseThemeVariables.primary,\n      gradientRight: baseThemeVariables.primary,\n      shadowColor: 'rgba(0, 0, 0, 0)',\n      secondSeriesFill: baseThemeVariables.bg2,\n      radius: ['80%', '90%'],\n    },\n\n    traffic: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      lineBg: baseThemeVariables.border4,\n      lineShadowBlur: '1',\n      itemColor: baseThemeVariables.border4,\n      itemBorderColor: baseThemeVariables.border4,\n      itemEmphasisBorderColor: baseThemeVariables.primary,\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n      shadowLineShadow: 'rgba(0, 0, 0, 0)',\n      gradFrom: baseThemeVariables.bg2,\n      gradTo: baseThemeVariables.bg2,\n    },\n\n    electricity: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: baseThemeVariables.fgText,\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      axisLineColor: baseThemeVariables.border3,\n      xAxisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n      lineGradFrom: baseThemeVariables.primary,\n      lineGradTo: baseThemeVariables.primary,\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: baseThemeVariables.bg2,\n      areaGradTo: baseThemeVariables.bg2,\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n    },\n\n    bubbleMap: {\n      titleColor: baseThemeVariables.fgText,\n      areaColor: baseThemeVariables.bg4,\n      areaHoverColor: baseThemeVariables.fgHighlight,\n      areaBorderColor: baseThemeVariables.border5,\n    },\n\n    profitBarAnimationEchart: {\n      textColor: baseThemeVariables.fgText,\n\n      firstAnimationBarColor: baseThemeVariables.primary,\n      secondAnimationBarColor: baseThemeVariables.success,\n\n      splitLineStyleOpacity: '1',\n      splitLineStyleWidth: '1',\n      splitLineStyleColor: baseThemeVariables.separator,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n\n    trafficBarEchart: {\n      gradientFrom: baseThemeVariables.warningLight,\n      gradientTo: baseThemeVariables.warning,\n      shadow: baseThemeVariables.warningLight,\n      shadowBlur: '0',\n\n      axisTextColor: baseThemeVariables.fgText,\n      axisFontSize: '12',\n\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n    },\n\n    countryOrders: {\n      countryBorderColor: baseThemeVariables.border4,\n      countryFillColor: baseThemeVariables.bg3,\n      countryBorderWidth: '1',\n      hoveredCountryBorderColor: baseThemeVariables.primary,\n      hoveredCountryFillColor: baseThemeVariables.primaryLight,\n      hoveredCountryBorderWidth: '1',\n\n      chartAxisLineColor: baseThemeVariables.border4,\n      chartAxisTextColor: baseThemeVariables.fg,\n      chartAxisFontSize: '16',\n      chartGradientTo: baseThemeVariables.primary,\n      chartGradientFrom: baseThemeVariables.primaryLight,\n      chartAxisSplitLine: baseThemeVariables.separator,\n      chartShadowLineColor: baseThemeVariables.primaryLight,\n\n      chartLineBottomShadowColor: baseThemeVariables.primary,\n\n      chartInnerLineColor: baseThemeVariables.bg2,\n    },\n\n    echarts: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.fgText,\n      splitLineColor: baseThemeVariables.separator,\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\n      tooltipBackgroundColor: baseThemeVariables.primary,\n      areaOpacity: '0.7',\n    },\n\n    chartjs: {\n      axisLineColor: baseThemeVariables.separator,\n      textColor: baseThemeVariables.fgText,\n    },\n\n    orders: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n\n      // first line\n      firstAreaGradFrom: baseThemeVariables.bg3,\n      firstAreaGradTo: baseThemeVariables.bg3,\n      firstShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n\n      // second line\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n\n      secondAreaGradFrom: 'rgba(51, 102, 255, 0.2)',\n      secondAreaGradTo: 'rgba(51, 102, 255, 0)',\n      secondShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n\n      // third line\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n\n      thirdAreaGradFrom: 'rgba(0, 214, 143, 0.2)',\n      thirdAreaGradTo: 'rgba(0, 214, 143, 0)',\n      thirdShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n    },\n\n    profit: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.border4,\n      splitLineColor: baseThemeVariables.separator,\n      areaOpacity: '1',\n\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n\n      // first bar\n      firstLineGradFrom: baseThemeVariables.bg3,\n      firstLineGradTo: baseThemeVariables.bg3,\n      firstLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // second bar\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n      secondLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // third bar\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n      thirdLineShadow: 'rgba(0, 0, 0, 0)',\n    },\n\n    orderProfitLegend: {\n      firstItem: baseThemeVariables.success,\n      secondItem: baseThemeVariables.primary,\n      thirdItem: baseThemeVariables.bg3,\n    },\n\n    visitors: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'dotted',\n      lineWidth: '6',\n      lineGradFrom: '#ffffff',\n      lineGradTo: '#ffffff',\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: baseThemeVariables.primary,\n      areaGradTo: baseThemeVariables.primaryLight,\n\n      innerLineStyle: 'solid',\n      innerLineWidth: '1',\n\n      innerAreaGradFrom: baseThemeVariables.success,\n      innerAreaGradTo: baseThemeVariables.success,\n    },\n\n    visitorsLegend: {\n      firstIcon: baseThemeVariables.success,\n      secondIcon: baseThemeVariables.primary,\n    },\n\n    visitorsPie: {\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n      firstPieRadius: ['70%', '90%'],\n\n      secondPieGradientLeft: baseThemeVariables.warning,\n      secondPieGradientRight: baseThemeVariables.warningLight,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n      secondPieRadius: ['60%', '97%'],\n      shadowOffsetX: '0',\n      shadowOffsetY: '0',\n    },\n\n    visitorsPieLegend: {\n      firstSection: baseThemeVariables.warning,\n      secondSection: baseThemeVariables.success,\n    },\n\n    earningPie: {\n      radius: ['65%', '100%'],\n      center: ['50%', '50%'],\n\n      fontSize: '22',\n\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      secondPieGradientLeft: baseThemeVariables.primary,\n      secondPieGradientRight: baseThemeVariables.primary,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      thirdPieGradientLeft: baseThemeVariables.warning,\n      thirdPieGradientRight: baseThemeVariables.warning,\n      thirdPieShadowColor: 'rgba(0, 0, 0, 0)',\n    },\n\n    earningLine: {\n      gradFrom: baseThemeVariables.primary,\n      gradTo: baseThemeVariables.primary,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n  },\n} as NbJSThemeOptions;\n","import { NbJSThemeOptions, DEFAULT_THEME as baseTheme } from '@nebular/theme';\n\nconst baseThemeVariables = baseTheme.variables;\n\nexport const DEFAULT_THEME = {\n  name: 'default',\n  base: 'default',\n  variables: {\n    temperature: {\n      arcFill: [\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n        baseThemeVariables.primary,\n      ],\n      arcEmpty: baseThemeVariables.bg2,\n      thumbBg: baseThemeVariables.bg2,\n      thumbBorder: baseThemeVariables.primary,\n    },\n\n    solar: {\n      gradientLeft: baseThemeVariables.primary,\n      gradientRight: baseThemeVariables.primary,\n      shadowColor: 'rgba(0, 0, 0, 0)',\n      secondSeriesFill: baseThemeVariables.bg2,\n      radius: ['80%', '90%'],\n    },\n\n    traffic: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      lineBg: baseThemeVariables.border4,\n      lineShadowBlur: '1',\n      itemColor: baseThemeVariables.border4,\n      itemBorderColor: baseThemeVariables.border4,\n      itemEmphasisBorderColor: baseThemeVariables.primary,\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n      shadowLineShadow: 'rgba(0, 0, 0, 0)',\n      gradFrom: baseThemeVariables.bg2,\n      gradTo: baseThemeVariables.bg2,\n    },\n\n    electricity: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: baseThemeVariables.fgText,\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n\n      axisLineColor: baseThemeVariables.border3,\n      xAxisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n      lineGradFrom: baseThemeVariables.primary,\n      lineGradTo: baseThemeVariables.primary,\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: baseThemeVariables.bg2,\n      areaGradTo: baseThemeVariables.bg2,\n      shadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n    },\n\n    bubbleMap: {\n      titleColor: baseThemeVariables.fgText,\n      areaColor: baseThemeVariables.bg4,\n      areaHoverColor: baseThemeVariables.fgHighlight,\n      areaBorderColor: baseThemeVariables.border5,\n    },\n\n    profitBarAnimationEchart: {\n      textColor: baseThemeVariables.fgText,\n\n      firstAnimationBarColor: baseThemeVariables.primary,\n      secondAnimationBarColor: baseThemeVariables.success,\n\n      splitLineStyleOpacity: '1',\n      splitLineStyleWidth: '1',\n      splitLineStyleColor: baseThemeVariables.separator,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n\n    trafficBarEchart: {\n      gradientFrom: baseThemeVariables.warningLight,\n      gradientTo: baseThemeVariables.warning,\n      shadow: baseThemeVariables.warningLight,\n      shadowBlur: '0',\n\n      axisTextColor: baseThemeVariables.fgText,\n      axisFontSize: '12',\n\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n    },\n\n    countryOrders: {\n      countryBorderColor: baseThemeVariables.border4,\n      countryFillColor: baseThemeVariables.bg3,\n      countryBorderWidth: '1',\n      hoveredCountryBorderColor: baseThemeVariables.primary,\n      hoveredCountryFillColor: baseThemeVariables.primaryLight,\n      hoveredCountryBorderWidth: '1',\n\n      chartAxisLineColor: baseThemeVariables.border4,\n      chartAxisTextColor: baseThemeVariables.fg,\n      chartAxisFontSize: '16',\n      chartGradientTo: baseThemeVariables.primary,\n      chartGradientFrom: baseThemeVariables.primaryLight,\n      chartAxisSplitLine: baseThemeVariables.separator,\n      chartShadowLineColor: baseThemeVariables.primaryLight,\n\n      chartLineBottomShadowColor: baseThemeVariables.primary,\n\n      chartInnerLineColor: baseThemeVariables.bg2,\n    },\n\n    echarts: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.fgText,\n      splitLineColor: baseThemeVariables.separator,\n      itemHoverShadowColor: 'rgba(0, 0, 0, 0.5)',\n      tooltipBackgroundColor: baseThemeVariables.primary,\n      areaOpacity: '0.7',\n    },\n\n    chartjs: {\n      axisLineColor: baseThemeVariables.separator,\n      textColor: baseThemeVariables.fgText,\n    },\n\n    orders: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '0',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'solid',\n      lineWidth: '4',\n\n      // first line\n      firstAreaGradFrom: baseThemeVariables.bg3,\n      firstAreaGradTo: baseThemeVariables.bg3,\n      firstShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n\n      // second line\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n\n      secondAreaGradFrom: 'rgba(51, 102, 255, 0.2)',\n      secondAreaGradTo: 'rgba(51, 102, 255, 0)',\n      secondShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n\n      // third line\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n\n      thirdAreaGradFrom: 'rgba(0, 214, 143, 0.2)',\n      thirdAreaGradTo: 'rgba(0, 214, 143, 0)',\n      thirdShadowLineDarkBg: 'rgba(0, 0, 0, 0)',\n    },\n\n    profit: {\n      bg: baseThemeVariables.bg,\n      textColor: baseThemeVariables.fgText,\n      axisLineColor: baseThemeVariables.border4,\n      splitLineColor: baseThemeVariables.separator,\n      areaOpacity: '1',\n\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n\n      // first bar\n      firstLineGradFrom: baseThemeVariables.bg3,\n      firstLineGradTo: baseThemeVariables.bg3,\n      firstLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // second bar\n      secondLineGradFrom: baseThemeVariables.primary,\n      secondLineGradTo: baseThemeVariables.primary,\n      secondLineShadow: 'rgba(0, 0, 0, 0)',\n\n      // third bar\n      thirdLineGradFrom: baseThemeVariables.success,\n      thirdLineGradTo: baseThemeVariables.successLight,\n      thirdLineShadow: 'rgba(0, 0, 0, 0)',\n    },\n\n    orderProfitLegend: {\n      firstItem: baseThemeVariables.success,\n      secondItem: baseThemeVariables.primary,\n      thirdItem: baseThemeVariables.bg3,\n    },\n\n    visitors: {\n      tooltipBg: baseThemeVariables.bg,\n      tooltipLineColor: 'rgba(0, 0, 0, 0)',\n      tooltipLineWidth: '1',\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipExtraCss: 'border-radius: 10px; padding: 8px 24px;',\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '20',\n\n      axisLineColor: baseThemeVariables.border4,\n      axisFontSize: '16',\n      axisTextColor: baseThemeVariables.fg,\n      yAxisSplitLine: baseThemeVariables.separator,\n\n      itemBorderColor: baseThemeVariables.primary,\n      lineStyle: 'dotted',\n      lineWidth: '6',\n      lineGradFrom: '#ffffff',\n      lineGradTo: '#ffffff',\n      lineShadow: 'rgba(0, 0, 0, 0)',\n\n      areaGradFrom: baseThemeVariables.primary,\n      areaGradTo: baseThemeVariables.primaryLight,\n\n      innerLineStyle: 'solid',\n      innerLineWidth: '1',\n\n      innerAreaGradFrom: baseThemeVariables.success,\n      innerAreaGradTo: baseThemeVariables.success,\n    },\n\n    visitorsLegend: {\n      firstIcon: baseThemeVariables.success,\n      secondIcon: baseThemeVariables.primary,\n    },\n\n    visitorsPie: {\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n      firstPieRadius: ['70%', '90%'],\n\n      secondPieGradientLeft: baseThemeVariables.warning,\n      secondPieGradientRight: baseThemeVariables.warningLight,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n      secondPieRadius: ['60%', '97%'],\n      shadowOffsetX: '0',\n      shadowOffsetY: '0',\n    },\n\n    visitorsPieLegend: {\n      firstSection: baseThemeVariables.warning,\n      secondSection: baseThemeVariables.success,\n    },\n\n    earningPie: {\n      radius: ['65%', '100%'],\n      center: ['50%', '50%'],\n\n      fontSize: '22',\n\n      firstPieGradientLeft: baseThemeVariables.success,\n      firstPieGradientRight: baseThemeVariables.success,\n      firstPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      secondPieGradientLeft: baseThemeVariables.primary,\n      secondPieGradientRight: baseThemeVariables.primary,\n      secondPieShadowColor: 'rgba(0, 0, 0, 0)',\n\n      thirdPieGradientLeft: baseThemeVariables.warning,\n      thirdPieGradientRight: baseThemeVariables.warning,\n      thirdPieShadowColor: 'rgba(0, 0, 0, 0)',\n    },\n\n    earningLine: {\n      gradFrom: baseThemeVariables.primary,\n      gradTo: baseThemeVariables.primary,\n\n      tooltipTextColor: baseThemeVariables.fgText,\n      tooltipFontWeight: 'normal',\n      tooltipFontSize: '16',\n      tooltipBg: baseThemeVariables.bg,\n      tooltipBorderColor: baseThemeVariables.border2,\n      tooltipBorderWidth: '1',\n      tooltipExtraCss: 'border-radius: 10px; padding: 4px 16px;',\n    },\n  },\n} as NbJSThemeOptions;\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  NbActionsModule,\n  NbLayoutModule,\n  NbMenuModule,\n  NbSearchModule,\n  NbSidebarModule,\n  NbUserModule,\n  NbContextMenuModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbThemeModule,\n} from '@nebular/theme';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport { NbSecurityModule } from '@nebular/security';\n\nimport {\n  FooterComponent,\n  HeaderComponent,\n  SearchInputComponent,\n  TinyMCEComponent,\n} from './components';\nimport {\n  CapitalizePipe,\n  PluralPipe,\n  RoundPipe,\n  TimingPipe,\n  NumberWithCommasPipe,\n} from './pipes';\nimport {\n  OneColumnLayoutComponent,\n  ThreeColumnsLayoutComponent,\n  TwoColumnsLayoutComponent,\n} from './layouts';\nimport { DEFAULT_THEME } from './styles/theme.default';\nimport { COSMIC_THEME } from './styles/theme.cosmic';\nimport { CORPORATE_THEME } from './styles/theme.corporate';\nimport { DARK_THEME } from './styles/theme.dark';\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbMenuModule,\n  NbUserModule,\n  NbActionsModule,\n  NbSearchModule,\n  NbSidebarModule,\n  NbContextMenuModule,\n  NbSecurityModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbEvaIconsModule,\n];\nconst COMPONENTS = [\n  HeaderComponent,\n  FooterComponent,\n  SearchInputComponent,\n  TinyMCEComponent,\n  OneColumnLayoutComponent,\n  ThreeColumnsLayoutComponent,\n  TwoColumnsLayoutComponent,\n];\nconst PIPES = [\n  CapitalizePipe,\n  PluralPipe,\n  RoundPipe,\n  TimingPipe,\n  NumberWithCommasPipe,\n];\n\n@NgModule({\n  imports: [CommonModule, ...NB_MODULES],\n  exports: [CommonModule, ...PIPES, ...COMPONENTS],\n  declarations: [...COMPONENTS, ...PIPES],\n})\nexport class ThemeModule {\n  static forRoot(): ModuleWithProviders<ThemeModule> {\n    return {\n      ngModule: ThemeModule,\n      providers: [\n        ...NbThemeModule.forRoot(\n          {\n            name: 'default',\n          },\n          [ DEFAULT_THEME, COSMIC_THEME, CORPORATE_THEME, DARK_THEME ],\n        ).providers,\n      ],\n    };\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtraOptions, RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AuthGuard } from './auth/app.guard';\n\nexport const routes: Routes = [\n  {\n    path: 'pages',\n    loadChildren: () => import('./pages/pages.module')\n      .then(m => m.PagesModule),\n    canActivate: [AuthGuard],\n  },\n  {\n    path: '',\n    loadChildren: () => import('./landing/landing.module')\n      .then(m => m.LandingModule),\n  },\n  { path: '', redirectTo: 'pages', pathMatch: 'full' },\n  { path: '**', redirectTo: 'pages' },\n];\n\nconst config: ExtraOptions = {\n  useHash: false,\n};\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, config)],\n  exports: [RouterModule],\n})\n\nexport class AppRoutingModule {\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, OnInit } from '@angular/core';\nimport { AnalyticsService } from './@core/utils/analytics.service';\nimport { SeoService } from './@core/utils/seo.service';\n\n@Component({\n  selector: 'ngx-app',\n  template: '<router-outlet></router-outlet><notifier-container></notifier-container>',\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private analytics: AnalyticsService, private seoService: SeoService) {\n  }\n\n  ngOnInit(): void {\n    this.analytics.trackPageViews();\n    this.seoService.trackCanonicalChanges();\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare const fetch: Function\nimport { environment } from '../environments/environment';\n\nexport class AppConfig {\n  static OIDC_BASE_PATH: string;\n  static ENDORSEMENT_BASE_PATH: string;\n  static IR_BASE_PATH: string;\n  static HAS_SERVICE_REGISTRY: boolean;\n  static SR_BASE_PATH: string;\n  static ENVIRONMENT_TITLE: string;\n  static TERMS_OF_USE: string;\n  static IDP_NAMESPACE: string;\n  static ENVIRONMENT_NAME: string;\n  static IR_PROVIDER: string;\n  static IR_CONTACT: string;\n  static SR_PROVIDER: string;\n  static SR_CONTACT: string;\n  static MP_PROVIDER: string;\n  static MP_CONTACT: string;\n  static MP_VERSION: string;\n\n  public static _initialize() {\n    AppConfig.IR_BASE_PATH = environment.irBasePath,\n    AppConfig.SR_BASE_PATH = environment.hasServiceRegistry ? environment.srBasePath : '',\n    AppConfig.ENVIRONMENT_TITLE = environment.environmentTitle,\n    AppConfig.TERMS_OF_USE = environment.termsOfUse,\n    AppConfig.IDP_NAMESPACE = environment.idpNamespace;\n    AppConfig.HAS_SERVICE_REGISTRY = environment.hasServiceRegistry;\n    AppConfig.OIDC_BASE_PATH = environment.oidcBasePath;\n    AppConfig.ENVIRONMENT_NAME = environment.environmentName;\n    AppConfig.IR_PROVIDER = environment.irProvider;\n    AppConfig.IR_CONTACT = environment.irContact;\n    AppConfig.SR_PROVIDER = environment.srProvider;\n    AppConfig.SR_CONTACT = environment.srContact;\n    AppConfig.MP_PROVIDER = environment.mpProvider;\n    AppConfig.MP_CONTACT = environment.mpContact;\n    AppConfig.MP_VERSION = require( '../../package.json').version;\n  }\n}\nAppConfig._initialize();","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LandingModule } from './landing/landing.module';\nimport { ApiModule as MIRApiModule } from './backend-api/identity-registry';\nimport { ApiModule as MSRApiModule } from './backend-api/service-registry';\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from './@core/core.module';\nimport { ThemeModule } from './@theme/theme.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {\n  NbChatModule,\n  NbDatepickerModule,\n  NbDialogModule,\n  NbMenuModule,\n  NbSidebarModule,\n  NbToastrModule,\n  NbWindowModule,\n} from '@nebular/theme';\nimport { customNotifierOptions } from './shared/customNotifierOption';\nimport { NotifierModule } from 'angular-notifier';\nimport { AuthModule } from './auth/auth.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MIRApiModule,\n    MSRApiModule,\n    AuthModule,\n    LandingModule,\n    RouterModule,\n    NbSidebarModule.forRoot(),\n    NbMenuModule.forRoot(),\n    NbDatepickerModule.forRoot(),\n    NbDialogModule.forRoot(),\n    NbWindowModule.forRoot(),\n    NbToastrModule.forRoot(),\n    NbChatModule.forRoot({\n      messageGoogleMapKey: 'AIzaSyA_wNuCzia92MAmdLRzmqitRGvCF7wCZPY',\n    }),\n    CoreModule.forRoot(),\n    ThemeModule.forRoot(),\n    NotifierModule.withConfig(customNotifierOptions),\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Router,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(\n    protected readonly router: Router,\n    protected readonly keycloak: KeycloakService,\n    protected readonly authService: AuthService,\n  ) {\n    super(router, keycloak);\n  }\n\n  public async isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) : Promise<boolean> {\n    if (this.authService.authState.loggedIn) {\n      return true;\n    }\n\n    // Navigate to the login page\n    this.router.navigate([this.authService.loginUrl()]);\n    return false;\n  }\n}","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from './../app.config';\nimport { KeycloakService } from 'keycloak-angular';\nimport { AuthService } from './auth.service';\n\nexport const initializeKeycloak = (keycloak: KeycloakService): () => Promise<boolean> => {\n    return () =>\n      keycloak.init({\n        config: {\n          url: AppConfig.OIDC_BASE_PATH + '/auth/',\n          realm: 'MCP',\n          clientId: 'MCP-Portal',\n        },\n        initOptions: {\n          onLoad: 'check-sso',\n          flow: 'standard',\n        },\n        enableBearerInterceptor: true,\n        bearerPrefix: 'Bearer',\n        bearerExcludedUrls: [\n            '/assets',\n            '/clients/public']\n      }).then((authenticated: any) => {\n        AuthService.staticAuthInfo.authz = keycloak.getKeycloakInstance();\n        AuthService.staticAuthInfo.logoutUrl = \"/login\";\n        if (authenticated) {\n          AuthService.staticAuthInfo.loggedIn = true;\n\n          AuthService.parseAuthInfo(keycloak.getKeycloakInstance().tokenParsed);\n\n          keycloak.getKeycloakInstance().onAuthLogout = function() {\n            console.log(\"USER LOGGED OUT\");\n            AuthService.handle401();\n          };\n          keycloak.getKeycloakInstance().onTokenExpired = function() {\n            console.log(\"TOKEN EXPIRED LOGGED OUT\");\n          };\n            return true;\n          } else {\n            AuthService.staticAuthInfo.loggedIn = false;\n            return false;\n          }\n        }\n      );\n  }","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { initializeKeycloak } from './app.init';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    KeycloakAngularModule,\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeKeycloak,\n      multi: true,\n      deps: [KeycloakService],\n    },\n  ],\n})\nexport class AuthModule { }\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Role } from \"../backend-api/identity-registry/model/role\";\n\nimport RoleNameEnum = Role.RoleNameEnum;\n\nexport enum AuthPermission {\n    User = 1 << 0,\n    OrgAdmin = 1 << 1,\n    SiteAdmin = 1 << 2,\n    UserAdmin = 1 << 3,\n    VesselAdmin = 1 << 4,\n    ServiceAdmin = 1 << 5,\n    DeviceAdmin = 1 << 6,\n    MMSAdmin = 1 << 7,\n    ApproveOrg = 1 << 8,\n    EntityAdmin = 1 << 9,\n}\n\nexport enum AuthPermissionForMSR {\n  User = 1 << 0,\n  OrgServiceAdmin = 1 << 1,\n  LedgerAdmin = 1 << 2,\n  MSRAdmin = 1 << 3,\n}\n\nexport const rolesToPermission = (roles: string[]): AuthPermission => {\n    let permission = AuthPermission.User;\n    for (const roleString of roles) {\n      switch (roleString as RoleNameEnum) {\n        case RoleNameEnum.ORGADMIN: {\n          permission = permission | AuthPermission.OrgAdmin;\n          break;\n        }\n        case RoleNameEnum.SITEADMIN: {\n            permission = permission | AuthPermission.SiteAdmin;\n          break;\n        }\n        case RoleNameEnum.USERADMIN: {\n            permission = permission | AuthPermission.UserAdmin;\n          break;\n        }\n        case RoleNameEnum.DEVICEADMIN: {\n            permission = permission | AuthPermission.DeviceAdmin;\n          break;\n        }\n        case RoleNameEnum.VESSELADMIN: {\n            permission = permission | AuthPermission.VesselAdmin;\n          break;\n        }\n        case RoleNameEnum.SERVICEADMIN: {\n            permission = permission | AuthPermission.ServiceAdmin;\n          break;\n        }\n        case RoleNameEnum.ENTITYADMIN: {\n            permission = permission | AuthPermission.EntityAdmin;\n          break;\n        }\n        case RoleNameEnum.MMSADMIN: {\n            permission = permission | AuthPermission.MMSAdmin;\n          break;\n        }\n        case RoleNameEnum.APPROVEORG: {\n            permission = permission | AuthPermission.ApproveOrg;\n          break;\n        }\n        default:\n          permission = permission | AuthPermission.User;\n      }\n    }\n    return permission;\n}\n\nexport class PermissionResolver {\n    static isSiteAdmin(permission: AuthPermission) {\n      return (permission & AuthPermission.SiteAdmin) > 0;\n    }\n  \n    static isOrgAdmin(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.OrgAdmin) > 0 || this.isSiteAdmin(permission)\n      );\n    }\n  \n    static isEntityAdmin(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.EntityAdmin) > 0 ||\n        this.isOrgAdmin(permission)\n      );\n    }\n  \n    static isUserAdmin(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.UserAdmin) > 0 ||\n        this.isEntityAdmin(permission)\n      );\n    }\n  \n    static isVesselAdmin(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.VesselAdmin) > 0 ||\n        this.isEntityAdmin(permission)\n      );\n    }\n  \n    static isDeviceAdmin(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.DeviceAdmin) > 0 ||\n        this.isEntityAdmin(permission)\n      );\n    }\n  \n    static isServiceAdmin(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.ServiceAdmin) > 0 ||\n        this.isEntityAdmin(permission)\n      );\n    }\n  \n    static canApproveOrg(permission: AuthPermission) {\n      return (\n        (permission & AuthPermission.ApproveOrg) > 0 ||\n        this.isSiteAdmin(permission)\n      );\n    }\n\n    static isMSRAdmin(roles: string[]) {\n      return roles && roles.length > 0 && roles.includes('admin');\n    }\n\n    static isLedgerAdmin(roles: string[]) {\n      return roles && roles.length > 0 && roles.includes('ledger_admin');\n    }\n\n    static isOrgServiceAdmin(roles: string[]) {\n      return roles && roles.length > 0 && roles.includes('service_admin');\n    }\n  }","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotifierService } from 'angular-notifier';\nimport { RoleControllerService } from './../backend-api/identity-registry/api/roleController.service';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { AuthState } from './model/AuthState';\nimport { StaticAuthInfo } from './model/StaticAuthInfo';\nimport { AuthPermission, rolesToPermission } from './auth.permission';\nimport { AuthUser } from './model/AuthUser';\nimport { Role } from '../backend-api/identity-registry/model/role';\n\nimport RoleNameEnum = Role.RoleNameEnum;\nimport { Router } from '@angular/router';\nimport { AppConfig } from '../app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public static staticAuthInfo: StaticAuthInfo = {}; // This is needed to save some information about user, because these informations is found before this class is initiated\n\n\tpublic rolesLoaded: EventEmitter<any> = new EventEmitter<any>();\n  \n  public authState: AuthState;\n  private realmName = 'MCP';\n\n  constructor(\n    private roleControllerService: RoleControllerService,\n    private notifierService: NotifierService,\n    private router: Router,\n    ) {\n    this.authState = this.createAuthState();\n    this.findPermissionRoles();\n  }\n\n  private findPermissionRoles() {\n  if (this.authState.loggedIn) {\n    this.roleControllerService.getMyRole(this.authState.orgMrn).subscribe(\n      roles => {\n        this.authState.permission = rolesToPermission(roles);\n        this.authState.rolesLoaded = true;\n        this.rolesLoaded.emit('');\n      },\n      error => {\n        this.authState.permission = AuthPermission.User;\n        this.notifierService.notify('error', 'Error trying to fetch user permissions - ' + error.message);\n        this.authState.rolesLoaded = true;\n        this.rolesLoaded.emit('');\n      }\n    );\n  }\n}\nprivate createAuthState(): AuthState {\n  return {\n    loggedIn: AuthService.staticAuthInfo.loggedIn,\n    permission: AuthPermission.User,\n    orgMrn: AuthService.staticAuthInfo.orgMrn,\n    orgName: AuthService.staticAuthInfo.orgName,\n    user: AuthService.staticAuthInfo.user,\n    rolesLoaded: false,\n    acting: false,\n  };\n}\n\n  public static parseAuthInfo(keycloakToken: any) {\n    if (!keycloakToken) {\n      throw new Error('Keycloak token parse error: Token not present');\n    }\n    if (!keycloakToken.org) {\n      throw new Error('Keycloak token parse error: \\'org\\' not present');\n    }\n    if (!keycloakToken.mrn) {\n      throw new Error('Keycloak token parse error: \\'mrn\\' not present');\n    }\n    if (!keycloakToken.email) {\n      throw new Error('Keycloak token parse error: \\'email\\' not present');\n    }\n\n    AuthService.staticAuthInfo.orgMrn = keycloakToken.org;\n    const firstname = keycloakToken.given_name ? keycloakToken.given_name : '';\n    const lastname = keycloakToken.family_name ? keycloakToken.family_name : '';\n    const permissions = keycloakToken.permissions ? keycloakToken.permissions : '';\n    const rolesInMSR = keycloakToken['resource_access'] && keycloakToken['resource_access']['service-registry'] && keycloakToken['resource_access']['service-registry']['roles'] ? keycloakToken['resource_access']['service-registry']['roles'] : [];\n    const mrn = keycloakToken.mrn;\n    const email = keycloakToken.email;\n    const preferredUsername = keycloakToken.preferred_username\n    ? keycloakToken.preferred_username\n    : '';\n    const authUser: AuthUser = {\n        firstName: firstname,\n        lastName: lastname,\n        mrn: mrn,\n        email: email,\n        organization: keycloakToken.org,\n        preferredUsername: preferredUsername,\n        keycloakMIRPermissions: permissions.toString(),\n        keycloakMSRPermissions: rolesInMSR,\n    };\n    AuthService.staticAuthInfo.user = authUser;\n  }\n\n  isMyOrg(orgMrn:string){\n\t  return this.authState.orgMrn === orgMrn;\n  }\n\n  loginUrl(): string {\n    return '/login';\n  }\n\n  login() {\n  \tconst url = window.location;\n    AuthService.staticAuthInfo.authz.login({redirectUri:  url.protocol + '//' + url.host + '/pages/ir/users/'});\n  }\n\n  logout() {\n\t  try {\n      this.authState.loggedIn = false;\n      const url = window.location;\n      const loginPage = url.protocol + '//' + url.host + '/login';\n\t\t  AuthService.staticAuthInfo.authz.logout(loginPage);\n\t\t  AuthService.staticAuthInfo.authz = null;\n\t  } catch (err) { // State is somehow lost. Just do nothing.\n\t  }\n  }\n\n  public getLogoutUrl(): string {\n    const url = window.location;\n    const loginPage = url.protocol + '//' + url.host + '/login';\n    return AppConfig.OIDC_BASE_PATH + '/auth/realms/'+this.realmName+'/protocol/openid-connect/logout?redirect_uri=' + loginPage;\n  }\n\n  static getToken(): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      if (AuthService.staticAuthInfo.authz.token) {\n        AuthService.staticAuthInfo.authz.updateToken(30)\n          .success(() => {\n            resolve(<string>AuthService.staticAuthInfo.authz.token);\n          })\n          .error((error) => {\n            AuthService.handle401();\n          });\n      }\n    });\n  }\n\n  public updateOrgName(orgName: string) {\n    AuthService.staticAuthInfo.orgName = orgName;\n    this.authState.orgName = orgName;\n  }\n\n\tpublic static handle401() {\n\t\ttry {\n\t\t\tAuthService.staticAuthInfo.loggedIn = false;\n\t\t\tAuthService.staticAuthInfo.authz.logout({redirectUri: window.location.origin + '/#' + AuthService.staticAuthInfo.logoutUrl + '?reason=401'});\n\t\t\tAuthService.staticAuthInfo.authz = null;\n\t\t}catch (err) { // State is somehow lost. Just do nothing.\n\n\t\t}\n\t}\n\n\tpublic static handleCacheError() {\n\t\ttry {\n\t\t\tAuthService.staticAuthInfo.loggedIn = false;\n\t\t\tAuthService.staticAuthInfo.authz.logout({redirectUri: window.location.origin + '/#' + AuthService.staticAuthInfo.logoutUrl + '?reason=cache'});\n\t\t\tAuthService.staticAuthInfo.authz = null;\n\t\t}catch (err) { // State is somehow lost. Just do nothing.\n\n\t\t}\n\t}\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { AgentControllerService } from './api/agentController.service';\nimport { CertificateControllerService } from './api/certificateController.service';\nimport { DeviceControllerService } from './api/deviceController.service';\nimport { LogoControllerService } from './api/logoController.service';\nimport { MmsControllerService } from './api/mmsController.service';\nimport { OrganizationControllerService } from './api/organizationController.service';\nimport { RoleControllerService } from './api/roleController.service';\nimport { ServiceControllerService } from './api/serviceController.service';\nimport { UserControllerService } from './api/userController.service';\nimport { VesselControllerService } from './api/vesselController.service';\nimport { VesselImageControllerService } from './api/vesselImageController.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    AgentControllerService,\n    CertificateControllerService,\n    DeviceControllerService,\n    LogoControllerService,\n    MmsControllerService,\n    OrganizationControllerService,\n    RoleControllerService,\n    ServiceControllerService,\n    UserControllerService,\n    VesselControllerService,\n    VesselImageControllerService,\n ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Agent } from '../model/agent';\nimport { PageAgent } from '../model/pageAgent';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class AgentControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createAgent(body: Agent, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Agent>;\n    public createAgent(body: Agent, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Agent>>;\n    public createAgent(body: Agent, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Agent>>;\n    public createAgent(body: Agent, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createAgent.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createAgent.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Agent>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/agent`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createAgent1(body: Agent, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Agent>;\n    public createAgent1(body: Agent, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Agent>>;\n    public createAgent1(body: Agent, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Agent>>;\n    public createAgent1(body: Agent, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createAgent1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createAgent1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Agent>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/agent`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param agentId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAgent(orgMrn: string, agentId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAgent(orgMrn: string, agentId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAgent(orgMrn: string, agentId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAgent(orgMrn: string, agentId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteAgent.');\n        }\n\n        if (agentId === null || agentId === undefined) {\n            throw new Error('Required parameter agentId was null or undefined when calling deleteAgent.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/agent/${encodeURIComponent(String(agentId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param agentId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAgent1(orgMrn: string, agentId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAgent1(orgMrn: string, agentId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAgent1(orgMrn: string, agentId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAgent1(orgMrn: string, agentId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteAgent1.');\n        }\n\n        if (agentId === null || agentId === undefined) {\n            throw new Error('Required parameter agentId was null or undefined when calling deleteAgent1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/agent/${encodeURIComponent(String(agentId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActingOnBehalfOf(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageAgent>;\n    public getActingOnBehalfOf(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageAgent>>;\n    public getActingOnBehalfOf(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageAgent>>;\n    public getActingOnBehalfOf(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getActingOnBehalfOf.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageAgent>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/acting-on-behalf-of`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getActingOnBehalfOf1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageAgent>;\n    public getActingOnBehalfOf1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageAgent>>;\n    public getActingOnBehalfOf1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageAgent>>;\n    public getActingOnBehalfOf1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getActingOnBehalfOf1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageAgent>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/acting-on-behalf-of`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param agentId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAgent(orgMrn: string, agentId: number, observe?: 'body', reportProgress?: boolean): Observable<Agent>;\n    public getAgent(orgMrn: string, agentId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Agent>>;\n    public getAgent(orgMrn: string, agentId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Agent>>;\n    public getAgent(orgMrn: string, agentId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getAgent.');\n        }\n\n        if (agentId === null || agentId === undefined) {\n            throw new Error('Required parameter agentId was null or undefined when calling getAgent.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Agent>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/agent/${encodeURIComponent(String(agentId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param agentId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAgent1(orgMrn: string, agentId: number, observe?: 'body', reportProgress?: boolean): Observable<Agent>;\n    public getAgent1(orgMrn: string, agentId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Agent>>;\n    public getAgent1(orgMrn: string, agentId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Agent>>;\n    public getAgent1(orgMrn: string, agentId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getAgent1.');\n        }\n\n        if (agentId === null || agentId === undefined) {\n            throw new Error('Required parameter agentId was null or undefined when calling getAgent1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Agent>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/agent/${encodeURIComponent(String(agentId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAgents(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageAgent>;\n    public getAgents(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageAgent>>;\n    public getAgents(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageAgent>>;\n    public getAgents(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getAgents.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageAgent>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/agents`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAgents1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageAgent>;\n    public getAgents1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageAgent>>;\n    public getAgents1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageAgent>>;\n    public getAgents1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getAgents1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageAgent>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/agents`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param agentId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateAgent(body: Agent, orgMrn: string, agentId: number, observe?: 'body', reportProgress?: boolean): Observable<Agent>;\n    public updateAgent(body: Agent, orgMrn: string, agentId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Agent>>;\n    public updateAgent(body: Agent, orgMrn: string, agentId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Agent>>;\n    public updateAgent(body: Agent, orgMrn: string, agentId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateAgent.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateAgent.');\n        }\n\n        if (agentId === null || agentId === undefined) {\n            throw new Error('Required parameter agentId was null or undefined when calling updateAgent.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Agent>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/agent/${encodeURIComponent(String(agentId))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param agentId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateAgent1(body: Agent, orgMrn: string, agentId: number, observe?: 'body', reportProgress?: boolean): Observable<Agent>;\n    public updateAgent1(body: Agent, orgMrn: string, agentId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Agent>>;\n    public updateAgent1(body: Agent, orgMrn: string, agentId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Agent>>;\n    public updateAgent1(body: Agent, orgMrn: string, agentId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateAgent1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateAgent1.');\n        }\n\n        if (agentId === null || agentId === undefined) {\n            throw new Error('Required parameter agentId was null or undefined when calling updateAgent1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Agent>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/agent/${encodeURIComponent(String(agentId))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export * from './agentController.service';\nimport { AgentControllerService } from './agentController.service';\nexport * from './certificateController.service';\nimport { CertificateControllerService } from './certificateController.service';\nexport * from './deviceController.service';\nimport { DeviceControllerService } from './deviceController.service';\nexport * from './logoController.service';\nimport { LogoControllerService } from './logoController.service';\nexport * from './mmsController.service';\nimport { MmsControllerService } from './mmsController.service';\nexport * from './organizationController.service';\nimport { OrganizationControllerService } from './organizationController.service';\nexport * from './roleController.service';\nimport { RoleControllerService } from './roleController.service';\nexport * from './serviceController.service';\nimport { ServiceControllerService } from './serviceController.service';\nexport * from './userController.service';\nimport { UserControllerService } from './userController.service';\nexport * from './vesselController.service';\nimport { VesselControllerService } from './vesselController.service';\nexport * from './vesselImageController.service';\nimport { VesselImageControllerService } from './vesselImageController.service';\nexport const APIS = [AgentControllerService, CertificateControllerService, DeviceControllerService, LogoControllerService, MmsControllerService, OrganizationControllerService, RoleControllerService, ServiceControllerService, UserControllerService, VesselControllerService, VesselImageControllerService];\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class CertificateControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param caAlias \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCRL(caAlias: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getCRL(caAlias: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getCRL(caAlias: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getCRL(caAlias: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (caAlias === null || caAlias === undefined) {\n            throw new Error('Required parameter caAlias was null or undefined when calling getCRL.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/x-pem-file'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/oidc/api/certificates/crl/${encodeURIComponent(String(caAlias))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param caAlias \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCRL1(caAlias: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getCRL1(caAlias: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getCRL1(caAlias: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getCRL1(caAlias: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (caAlias === null || caAlias === undefined) {\n            throw new Error('Required parameter caAlias was null or undefined when calling getCRL1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/x-pem-file'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/x509/api/certificates/crl/${encodeURIComponent(String(caAlias))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param caAlias \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOCSP(caAlias: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getOCSP(caAlias: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getOCSP(caAlias: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getOCSP(caAlias: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (caAlias === null || caAlias === undefined) {\n            throw new Error('Required parameter caAlias was null or undefined when calling getOCSP.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/ocsp-response'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/oidc/api/certificates/ocsp/${encodeURIComponent(String(caAlias))}/**`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param caAlias \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOCSP1(caAlias: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getOCSP1(caAlias: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getOCSP1(caAlias: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getOCSP1(caAlias: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (caAlias === null || caAlias === undefined) {\n            throw new Error('Required parameter caAlias was null or undefined when calling getOCSP1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/ocsp-response'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/x509/api/certificates/ocsp/${encodeURIComponent(String(caAlias))}/**`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param caAlias \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postOCSP(body: Array<string>, caAlias: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public postOCSP(body: Array<string>, caAlias: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public postOCSP(body: Array<string>, caAlias: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public postOCSP(body: Array<string>, caAlias: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling postOCSP.');\n        }\n\n        if (caAlias === null || caAlias === undefined) {\n            throw new Error('Required parameter caAlias was null or undefined when calling postOCSP.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/ocsp-response'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/ocsp-request'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/certificates/ocsp/${encodeURIComponent(String(caAlias))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param caAlias \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public postOCSP1(body: Array<string>, caAlias: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public postOCSP1(body: Array<string>, caAlias: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public postOCSP1(body: Array<string>, caAlias: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public postOCSP1(body: Array<string>, caAlias: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling postOCSP1.');\n        }\n\n        if (caAlias === null || caAlias === undefined) {\n            throw new Error('Required parameter caAlias was null or undefined when calling postOCSP1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/ocsp-response'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/ocsp-request'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/certificates/ocsp/${encodeURIComponent(String(caAlias))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { PageEntity } from './../model/pageEntity';\n/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Certificate } from '../model/certificate';\nimport { CertificateBundle } from '../model/certificateBundle';\nimport { CertificateRevocation } from '../model/certificateRevocation';\nimport { Device } from '../model/device';\nimport { PageDevice } from '../model/pageDevice';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class DeviceControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createDevice(body: Device, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Device>;\n    public createDevice(body: Device, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Device>>;\n    public createDevice(body: Device, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Device>>;\n    public createDevice(body: Device, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createDevice.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createDevice.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Device>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createDevice1(body: Device, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Device>;\n    public createDevice1(body: Device, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Device>>;\n    public createDevice1(body: Device, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Device>>;\n    public createDevice1(body: Device, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createDevice1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createDevice1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Device>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDevice(orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteDevice(orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteDevice(orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteDevice(orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteDevice.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling deleteDevice.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDevice1(orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteDevice1(orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteDevice1(orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteDevice1(orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteDevice1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling deleteDevice1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDevice(orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Device>;\n    public getDevice(orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Device>>;\n    public getDevice(orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Device>>;\n    public getDevice(orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getDevice.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling getDevice.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Device>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDevice1(orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Device>;\n    public getDevice1(orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Device>>;\n    public getDevice1(orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Device>>;\n    public getDevice1(orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getDevice1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling getDevice1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Device>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param deviceMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDeviceCert(orgMrn: string, deviceMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getDeviceCert(orgMrn: string, deviceMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getDeviceCert(orgMrn: string, deviceMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getDeviceCert(orgMrn: string, deviceMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getDeviceCert.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling getDeviceCert.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getDeviceCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param deviceMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDeviceCert1(orgMrn: string, deviceMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getDeviceCert1(orgMrn: string, deviceMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getDeviceCert1(orgMrn: string, deviceMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getDeviceCert1(orgMrn: string, deviceMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getDeviceCert1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling getDeviceCert1.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getDeviceCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationDevices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageDevice>;\n    public getOrganizationDevices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageDevice>>;\n    public getOrganizationDevices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageDevice>>;\n    public getOrganizationDevices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationDevices.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageDevice>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/devices`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationDevices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageDevice>;\n    public getOrganizationDevices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageDevice>>;\n    public getOrganizationDevices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageDevice>>;\n    public getOrganizationDevices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationDevices1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageDevice>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/devices`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newDeviceCert(orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newDeviceCert(orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newDeviceCert(orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newDeviceCert(orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newDeviceCert.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling newDeviceCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newDeviceCert1(orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newDeviceCert1(orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newDeviceCert1(orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newDeviceCert1(orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newDeviceCert1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling newDeviceCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newDeviceCertFromCsr(body: string, orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newDeviceCertFromCsr(body: string, orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newDeviceCertFromCsr(body: string, orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newDeviceCertFromCsr(body: string, orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newDeviceCertFromCsr.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newDeviceCertFromCsr.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling newDeviceCertFromCsr.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newDeviceCertFromCsr1(body: string, orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newDeviceCertFromCsr1(body: string, orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newDeviceCertFromCsr1(body: string, orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newDeviceCertFromCsr1(body: string, orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newDeviceCertFromCsr1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newDeviceCertFromCsr1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling newDeviceCertFromCsr1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param deviceMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeDeviceCert(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeDeviceCert(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeDeviceCert(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeDeviceCert(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeDeviceCert.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeDeviceCert.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling revokeDeviceCert.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeDeviceCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param deviceMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeDeviceCert1(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeDeviceCert1(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeDeviceCert1(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeDeviceCert1(body: CertificateRevocation, orgMrn: string, deviceMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeDeviceCert1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeDeviceCert1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling revokeDeviceCert1.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeDeviceCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDevice(body: Device, orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateDevice(body: Device, orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateDevice(body: Device, orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateDevice(body: Device, orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateDevice.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateDevice.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling updateDevice.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param deviceMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDevice1(body: Device, orgMrn: string, deviceMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateDevice1(body: Device, orgMrn: string, deviceMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateDevice1(body: Device, orgMrn: string, deviceMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateDevice1(body: Device, orgMrn: string, deviceMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateDevice1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateDevice1.');\n        }\n\n        if (deviceMrn === null || deviceMrn === undefined) {\n            throw new Error('Required parameter deviceMrn was null or undefined when calling updateDevice1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/device/${encodeURIComponent(String(deviceMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { OrgMrnLogoBody } from '../model/orgMrnLogoBody';\nimport { OrgMrnLogoBody1 } from '../model/orgMrnLogoBody1';\nimport { OrgMrnLogoBody2 } from '../model/orgMrnLogoBody2';\nimport { OrgMrnLogoBody3 } from '../model/orgMrnLogoBody3';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class LogoControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createLogoPost(orgMrn: string, body?: OrgMrnLogoBody, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createLogoPost(orgMrn: string, body?: OrgMrnLogoBody, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createLogoPost(orgMrn: string, body?: OrgMrnLogoBody, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createLogoPost(orgMrn: string, body?: OrgMrnLogoBody, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createLogoPost.');\n        }\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createLogoPost1(orgMrn: string, body?: OrgMrnLogoBody2, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createLogoPost1(orgMrn: string, body?: OrgMrnLogoBody2, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createLogoPost1(orgMrn: string, body?: OrgMrnLogoBody2, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createLogoPost1(orgMrn: string, body?: OrgMrnLogoBody2, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createLogoPost1.');\n        }\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteLogo(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteLogo(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteLogo(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteLogo(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteLogo.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteLogo1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteLogo1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteLogo1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteLogo1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteLogo1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLogo(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getLogo(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getLogo(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getLogo(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getLogo.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'image/png',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress,\n                responseType: 'blob',\n            },\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLogo1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getLogo1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getLogo1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getLogo1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getLogo1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'image/png',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLogoPut(body: Array<string>, orgMrn: string, mediaType: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateLogoPut(body: Array<string>, orgMrn: string, mediaType: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateLogoPut(body: Array<string>, orgMrn: string, mediaType: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateLogoPut(body: Array<string>, orgMrn: string, mediaType: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateLogoPut.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateLogoPut.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        headers.set('Content-Type', mediaType);\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLogoPut1(body: Array<string>, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateLogoPut1(body: Array<string>, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateLogoPut1(body: Array<string>, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateLogoPut1(body: Array<string>, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateLogoPut1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateLogoPut1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/logo`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Certificate } from '../model/certificate';\nimport { CertificateBundle } from '../model/certificateBundle';\nimport { CertificateRevocation } from '../model/certificateRevocation';\nimport { MMS } from '../model/mMS';\nimport { PageMMS } from '../model/pageMMS';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class MmsControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createMMS(body: MMS, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<MMS>;\n    public createMMS(body: MMS, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<MMS>>;\n    public createMMS(body: MMS, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<MMS>>;\n    public createMMS(body: MMS, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createMMS.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createMMS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<MMS>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createMMS1(body: MMS, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<MMS>;\n    public createMMS1(body: MMS, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<MMS>>;\n    public createMMS1(body: MMS, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<MMS>>;\n    public createMMS1(body: MMS, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createMMS1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createMMS1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<MMS>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMMS(orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteMMS(orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteMMS(orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteMMS(orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteMMS.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling deleteMMS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteMMS1(orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteMMS1(orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteMMS1(orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteMMS1(orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteMMS1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling deleteMMS1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMMS(orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<MMS>;\n    public getMMS(orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<MMS>>;\n    public getMMS(orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<MMS>>;\n    public getMMS(orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getMMS.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling getMMS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<MMS>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMMS1(orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<MMS>;\n    public getMMS1(orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<MMS>>;\n    public getMMS1(orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<MMS>>;\n    public getMMS1(orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getMMS1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling getMMS1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<MMS>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param mmsMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMMSCert(orgMrn: string, mmsMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getMMSCert(orgMrn: string, mmsMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getMMSCert(orgMrn: string, mmsMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getMMSCert(orgMrn: string, mmsMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getMMSCert.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling getMMSCert.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getMMSCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param mmsMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMMSCert1(orgMrn: string, mmsMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getMMSCert1(orgMrn: string, mmsMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getMMSCert1(orgMrn: string, mmsMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getMMSCert1(orgMrn: string, mmsMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getMMSCert1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling getMMSCert1.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getMMSCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationMMSes(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageMMS>;\n    public getOrganizationMMSes(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageMMS>>;\n    public getOrganizationMMSes(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageMMS>>;\n    public getOrganizationMMSes(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationMMSes.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageMMS>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mmses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationMMSes1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageMMS>;\n    public getOrganizationMMSes1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageMMS>>;\n    public getOrganizationMMSes1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageMMS>>;\n    public getOrganizationMMSes1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationMMSes1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageMMS>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mmses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newMMSCert(orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newMMSCert(orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newMMSCert(orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newMMSCert(orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newMMSCert.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling newMMSCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newMMSCert1(orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newMMSCert1(orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newMMSCert1(orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newMMSCert1(orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newMMSCert1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling newMMSCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newMMSCertFromCsr(body: string, orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newMMSCertFromCsr(body: string, orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newMMSCertFromCsr(body: string, orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newMMSCertFromCsr(body: string, orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newMMSCertFromCsr.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newMMSCertFromCsr.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling newMMSCertFromCsr.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newMMSCertFromCsr1(body: string, orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newMMSCertFromCsr1(body: string, orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newMMSCertFromCsr1(body: string, orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newMMSCertFromCsr1(body: string, orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newMMSCertFromCsr1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newMMSCertFromCsr1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling newMMSCertFromCsr1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param mmsMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeMMSCert(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeMMSCert(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeMMSCert(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeMMSCert(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeMMSCert.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeMMSCert.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling revokeMMSCert.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeMMSCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param mmsMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeMMSCert1(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeMMSCert1(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeMMSCert1(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeMMSCert1(body: CertificateRevocation, orgMrn: string, mmsMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeMMSCert1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeMMSCert1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling revokeMMSCert1.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeMMSCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateMMS(body: MMS, orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateMMS(body: MMS, orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateMMS(body: MMS, orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateMMS(body: MMS, orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateMMS.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateMMS.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling updateMMS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param mmsMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateMMS1(body: MMS, orgMrn: string, mmsMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateMMS1(body: MMS, orgMrn: string, mmsMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateMMS1(body: MMS, orgMrn: string, mmsMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateMMS1(body: MMS, orgMrn: string, mmsMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateMMS1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateMMS1.');\n        }\n\n        if (mmsMrn === null || mmsMrn === undefined) {\n            throw new Error('Required parameter mmsMrn was null or undefined when calling updateMMS1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/mms/${encodeURIComponent(String(mmsMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Certificate } from '../model/certificate';\nimport { CertificateBundle } from '../model/certificateBundle';\nimport { CertificateRevocation } from '../model/certificateRevocation';\nimport { Organization } from '../model/organization';\nimport { PageOrganization } from '../model/pageOrganization';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class OrganizationControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public applyOrganization(body: Organization, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public applyOrganization(body: Organization, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public applyOrganization(body: Organization, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public applyOrganization(body: Organization, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling applyOrganization.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Organization>('post',`${this.basePath}/oidc/api/org/apply`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public applyOrganization1(body: Organization, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public applyOrganization1(body: Organization, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public applyOrganization1(body: Organization, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public applyOrganization1(body: Organization, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling applyOrganization1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Organization>('post',`${this.basePath}/x509/api/org/apply`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveOrganization(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public approveOrganization(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public approveOrganization(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public approveOrganization(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling approveOrganization.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Organization>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/approve`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveOrganization1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public approveOrganization1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public approveOrganization1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public approveOrganization1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling approveOrganization1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Organization>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/approve`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOrg(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteOrg(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteOrg(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteOrg(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteOrg.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteOrg1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteOrg1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteOrg1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteOrg1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteOrg1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrgCert(orgMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getOrgCert(orgMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getOrgCert(orgMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getOrgCert(orgMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrgCert.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getOrgCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrgCert1(orgMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getOrgCert1(orgMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getOrgCert1(orgMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getOrgCert1(orgMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrgCert1.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getOrgCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganization(page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageOrganization>;\n    public getOrganization(page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageOrganization>>;\n    public getOrganization(page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageOrganization>>;\n    public getOrganization(page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageOrganization>('get',`${this.basePath}/oidc/api/orgs`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganization1(page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageOrganization>;\n    public getOrganization1(page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageOrganization>>;\n    public getOrganization1(page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageOrganization>>;\n    public getOrganization1(page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageOrganization>('get',`${this.basePath}/x509/api/orgs`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationByMrn(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public getOrganizationByMrn(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public getOrganizationByMrn(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public getOrganizationByMrn(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganization2.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Organization>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationById(orgId: number, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public getOrganizationById(orgId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public getOrganizationById(orgId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public getOrganizationById(orgId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgId === null || orgId === undefined) {\n            throw new Error('Required parameter orgId was null or undefined when calling getOrganizationById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Organization>('get',`${this.basePath}/oidc/api/org/id/${encodeURIComponent(String(orgId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationById1(orgId: number, observe?: 'body', reportProgress?: boolean): Observable<Organization>;\n    public getOrganizationById1(orgId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Organization>>;\n    public getOrganizationById1(orgId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Organization>>;\n    public getOrganizationById1(orgId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgId === null || orgId === undefined) {\n            throw new Error('Required parameter orgId was null or undefined when calling getOrganizationById1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Organization>('get',`${this.basePath}/x509/api/org/id/${encodeURIComponent(String(orgId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnapprovedOrganizations(page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageOrganization>;\n    public getUnapprovedOrganizations(page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageOrganization>>;\n    public getUnapprovedOrganizations(page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageOrganization>>;\n    public getUnapprovedOrganizations(page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageOrganization>('get',`${this.basePath}/oidc/api/org/unapprovedorgs`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUnapprovedOrganizations1(page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageOrganization>;\n    public getUnapprovedOrganizations1(page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageOrganization>>;\n    public getUnapprovedOrganizations1(page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageOrganization>>;\n    public getUnapprovedOrganizations1(page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageOrganization>('get',`${this.basePath}/x509/api/org/unapprovedorgs`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newOrgCert(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newOrgCert(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newOrgCert(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newOrgCert(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newOrgCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newOrgCert1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newOrgCert1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newOrgCert1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newOrgCert1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newOrgCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newOrgCertFromCsr(body: string, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newOrgCertFromCsr(body: string, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newOrgCertFromCsr(body: string, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newOrgCertFromCsr(body: string, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newOrgCertFromCsr.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newOrgCertFromCsr.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newOrgCertFromCsr1(body: string, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newOrgCertFromCsr1(body: string, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newOrgCertFromCsr1(body: string, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newOrgCertFromCsr1(body: string, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newOrgCertFromCsr1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newOrgCertFromCsr1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeOrgCert(body: CertificateRevocation, orgMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeOrgCert(body: CertificateRevocation, orgMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeOrgCert(body: CertificateRevocation, orgMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeOrgCert(body: CertificateRevocation, orgMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeOrgCert.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeOrgCert.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeOrgCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeOrgCert1(body: CertificateRevocation, orgMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeOrgCert1(body: CertificateRevocation, orgMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeOrgCert1(body: CertificateRevocation, orgMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeOrgCert1(body: CertificateRevocation, orgMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeOrgCert1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeOrgCert1.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeOrgCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOrganization(body: Organization, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateOrganization(body: Organization, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateOrganization(body: Organization, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateOrganization(body: Organization, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateOrganization.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateOrganization.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateOrganization1(body: Organization, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateOrganization1(body: Organization, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateOrganization1(body: Organization, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateOrganization1(body: Organization, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateOrganization1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateOrganization1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Role } from '../model/role';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class RoleControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createRole(body: Role, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Role>;\n    public createRole(body: Role, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Role>>;\n    public createRole(body: Role, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Role>>;\n    public createRole(body: Role, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createRole.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createRole.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Role>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/role`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createRole1(body: Role, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Role>;\n    public createRole1(body: Role, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Role>>;\n    public createRole1(body: Role, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Role>>;\n    public createRole1(body: Role, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createRole1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createRole1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Role>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/role`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param roleId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRole(orgMrn: string, roleId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteRole(orgMrn: string, roleId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteRole(orgMrn: string, roleId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteRole(orgMrn: string, roleId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteRole.');\n        }\n\n        if (roleId === null || roleId === undefined) {\n            throw new Error('Required parameter roleId was null or undefined when calling deleteRole.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/role/${encodeURIComponent(String(roleId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param roleId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRole1(orgMrn: string, roleId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteRole1(orgMrn: string, roleId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteRole1(orgMrn: string, roleId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteRole1(orgMrn: string, roleId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteRole1.');\n        }\n\n        if (roleId === null || roleId === undefined) {\n            throw new Error('Required parameter roleId was null or undefined when calling deleteRole1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/role/${encodeURIComponent(String(roleId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailableRoles(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getAvailableRoles(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getAvailableRoles(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getAvailableRoles(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getAvailableRoles.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/role/available-roles`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAvailableRoles1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getAvailableRoles1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getAvailableRoles1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getAvailableRoles1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getAvailableRoles1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/role/available-roles`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyRole(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getMyRole(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getMyRole(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getMyRole(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getMyRole.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/role/myroles`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getMyRole1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<string>>;\n    public getMyRole1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<string>>>;\n    public getMyRole1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<string>>>;\n    public getMyRole1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getMyRole1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<string>>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/role/myroles`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param roleId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRole(orgMrn: string, roleId: number, observe?: 'body', reportProgress?: boolean): Observable<Role>;\n    public getRole(orgMrn: string, roleId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Role>>;\n    public getRole(orgMrn: string, roleId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Role>>;\n    public getRole(orgMrn: string, roleId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getRole.');\n        }\n\n        if (roleId === null || roleId === undefined) {\n            throw new Error('Required parameter roleId was null or undefined when calling getRole.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Role>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/role/${encodeURIComponent(String(roleId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param roleId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRole1(orgMrn: string, roleId: number, observe?: 'body', reportProgress?: boolean): Observable<Role>;\n    public getRole1(orgMrn: string, roleId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Role>>;\n    public getRole1(orgMrn: string, roleId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Role>>;\n    public getRole1(orgMrn: string, roleId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getRole1.');\n        }\n\n        if (roleId === null || roleId === undefined) {\n            throw new Error('Required parameter roleId was null or undefined when calling getRole1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Role>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/role/${encodeURIComponent(String(roleId))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRoles(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Role>>;\n    public getRoles(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Role>>>;\n    public getRoles(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Role>>>;\n    public getRoles(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getRoles.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<Role>>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/roles`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getRoles1(orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Role>>;\n    public getRoles1(orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Role>>>;\n    public getRoles1(orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Role>>>;\n    public getRoles1(orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getRoles1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<Role>>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/roles`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param roleId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateRole(body: Role, orgMrn: string, roleId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateRole(body: Role, orgMrn: string, roleId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateRole(body: Role, orgMrn: string, roleId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateRole(body: Role, orgMrn: string, roleId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateRole.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateRole.');\n        }\n\n        if (roleId === null || roleId === undefined) {\n            throw new Error('Required parameter roleId was null or undefined when calling updateRole.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/role/${encodeURIComponent(String(roleId))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param roleId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateRole1(body: Role, orgMrn: string, roleId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateRole1(body: Role, orgMrn: string, roleId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateRole1(body: Role, orgMrn: string, roleId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateRole1(body: Role, orgMrn: string, roleId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateRole1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateRole1.');\n        }\n\n        if (roleId === null || roleId === undefined) {\n            throw new Error('Required parameter roleId was null or undefined when calling updateRole1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/role/${encodeURIComponent(String(roleId))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Certificate } from '../model/certificate';\nimport { CertificateBundle } from '../model/certificateBundle';\nimport { CertificateRevocation } from '../model/certificateRevocation';\nimport { PageService } from '../model/pageService';\nimport { Pageable } from '../model/pageable';\nimport { Service } from '../model/service';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class ServiceControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createService(body: Service, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Service>;\n    public createService(body: Service, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Service>>;\n    public createService(body: Service, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Service>>;\n    public createService(body: Service, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createService.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createService.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Service>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createService1(body: Service, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Service>;\n    public createService1(body: Service, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Service>>;\n    public createService1(body: Service, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Service>>;\n    public createService1(body: Service, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createService1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createService1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Service>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteService(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteService(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteService(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteService(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteService.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling deleteService.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling deleteService.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteService1(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteService1(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteService1(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteService1(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteService1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling deleteService1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling deleteService1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationServices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageService>;\n    public getOrganizationServices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageService>>;\n    public getOrganizationServices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageService>>;\n    public getOrganizationServices(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationServices.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageService>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/services`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationServices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageService>;\n    public getOrganizationServices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageService>>;\n    public getOrganizationServices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageService>>;\n    public getOrganizationServices1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationServices1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageService>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/services`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param pageable \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getService(orgMrn: string, serviceMrn: string, pageable: Pageable, observe?: 'body', reportProgress?: boolean): Observable<PageService>;\n    public getService(orgMrn: string, serviceMrn: string, pageable: Pageable, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageService>>;\n    public getService(orgMrn: string, serviceMrn: string, pageable: Pageable, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageService>>;\n    public getService(orgMrn: string, serviceMrn: string, pageable: Pageable, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getService.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getService.');\n        }\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling getService.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageService>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param pageable \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getService1(orgMrn: string, serviceMrn: string, pageable: Pageable, observe?: 'body', reportProgress?: boolean): Observable<PageService>;\n    public getService1(orgMrn: string, serviceMrn: string, pageable: Pageable, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageService>>;\n    public getService1(orgMrn: string, serviceMrn: string, pageable: Pageable, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageService>>;\n    public getService1(orgMrn: string, serviceMrn: string, pageable: Pageable, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getService1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getService1.');\n        }\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling getService1.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageService>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceCert(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getServiceCert(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getServiceCert(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getServiceCert(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceCert.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceCert.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceCert.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getServiceCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceCert1(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getServiceCert1(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getServiceCert1(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getServiceCert1(orgMrn: string, serviceMrn: string, version: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceCert1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceCert1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceCert1.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getServiceCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceJbossXml(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getServiceJbossXml(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getServiceJbossXml(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getServiceJbossXml(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceJbossXml.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceJbossXml.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceJbossXml.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<string>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/jbossxml`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceJbossXml1(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getServiceJbossXml1(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getServiceJbossXml1(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getServiceJbossXml1(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceJbossXml1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceJbossXml1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceJbossXml1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<string>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/jbossxml`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceKeycloakJson(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getServiceKeycloakJson(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getServiceKeycloakJson(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getServiceKeycloakJson(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceKeycloakJson.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceKeycloakJson.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceKeycloakJson.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<string>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/keycloakjson`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceKeycloakJson1(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getServiceKeycloakJson1(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getServiceKeycloakJson1(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getServiceKeycloakJson1(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceKeycloakJson1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceKeycloakJson1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceKeycloakJson1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<string>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/keycloakjson`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceVersion(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<Service>;\n    public getServiceVersion(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Service>>;\n    public getServiceVersion(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Service>>;\n    public getServiceVersion(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceVersion.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceVersion.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceVersion.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Service>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceVersion1(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<Service>;\n    public getServiceVersion1(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Service>>;\n    public getServiceVersion1(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Service>>;\n    public getServiceVersion1(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getServiceVersion1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling getServiceVersion1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling getServiceVersion1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Service>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newServiceCert(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newServiceCert(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newServiceCert(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newServiceCert(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newServiceCert.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling newServiceCert.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling newServiceCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newServiceCert1(orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newServiceCert1(orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newServiceCert1(orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newServiceCert1(orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newServiceCert1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling newServiceCert1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling newServiceCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newServiceCertFromCsr(body: string, orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newServiceCertFromCsr(body: string, orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newServiceCertFromCsr(body: string, orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newServiceCertFromCsr(body: string, orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newServiceCertFromCsr.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newServiceCertFromCsr.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling newServiceCertFromCsr.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling newServiceCertFromCsr.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newServiceCertFromCsr1(body: string, orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newServiceCertFromCsr1(body: string, orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newServiceCertFromCsr1(body: string, orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newServiceCertFromCsr1(body: string, orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newServiceCertFromCsr1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newServiceCertFromCsr1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling newServiceCertFromCsr1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling newServiceCertFromCsr1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeServiceCert(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeServiceCert(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeServiceCert(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeServiceCert(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeServiceCert.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeServiceCert.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling revokeServiceCert.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling revokeServiceCert.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeServiceCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeServiceCert1(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeServiceCert1(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeServiceCert1(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeServiceCert1(body: CertificateRevocation, orgMrn: string, serviceMrn: string, version: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeServiceCert1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeServiceCert1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling revokeServiceCert1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling revokeServiceCert1.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeServiceCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateService(body: Service, orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateService(body: Service, orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateService(body: Service, orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateService(body: Service, orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateService.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateService.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling updateService.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling updateService.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param serviceMrn \n     * @param version \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateService1(body: Service, orgMrn: string, serviceMrn: string, version: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateService1(body: Service, orgMrn: string, serviceMrn: string, version: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateService1(body: Service, orgMrn: string, serviceMrn: string, version: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateService1(body: Service, orgMrn: string, serviceMrn: string, version: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateService1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateService1.');\n        }\n\n        if (serviceMrn === null || serviceMrn === undefined) {\n            throw new Error('Required parameter serviceMrn was null or undefined when calling updateService1.');\n        }\n\n        if (version === null || version === undefined) {\n            throw new Error('Required parameter version was null or undefined when calling updateService1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/service/${encodeURIComponent(String(serviceMrn))}/${encodeURIComponent(String(version))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Certificate } from '../model/certificate';\nimport { CertificateBundle } from '../model/certificateBundle';\nimport { CertificateRevocation } from '../model/certificateRevocation';\nimport { PageUser } from '../model/pageUser';\nimport { User } from '../model/user';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\nimport { PageEntity } from '../model/pageEntity';\n\n\n@Injectable()\nexport class UserControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createUser(body: User, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<User>;\n    public createUser(body: User, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<User>>;\n    public createUser(body: User, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<User>>;\n    public createUser(body: User, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createUser.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<User>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createUser1(body: User, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<User>;\n    public createUser1(body: User, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<User>>;\n    public createUser1(body: User, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<User>>;\n    public createUser1(body: User, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createUser1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createUser1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<User>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUser(orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteUser(orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteUser(orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteUser(orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteUser.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling deleteUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteUser1(orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteUser1(orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteUser1(orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteUser1(orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteUser1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling deleteUser1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationUsers(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageUser>;\n    public getOrganizationUsers(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageUser>>;\n    public getOrganizationUsers(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageUser>>;\n    public getOrganizationUsers(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationUsers.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageUser>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/users`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationUsers1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageUser>;\n    public getOrganizationUsers1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageUser>>;\n    public getOrganizationUsers1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageUser>>;\n    public getOrganizationUsers1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationUsers1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageUser>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/users`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUser(orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<User>;\n    public getUser(orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<User>>;\n    public getUser(orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<User>>;\n    public getUser(orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getUser.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling getUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<User>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUser1(orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<User>;\n    public getUser1(orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<User>>;\n    public getUser1(orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<User>>;\n    public getUser1(orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getUser1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling getUser1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<User>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param userMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserCert(orgMrn: string, userMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getUserCert(orgMrn: string, userMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getUserCert(orgMrn: string, userMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getUserCert(orgMrn: string, userMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getUserCert.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling getUserCert.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getUserCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param userMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getUserCert1(orgMrn: string, userMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getUserCert1(orgMrn: string, userMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getUserCert1(orgMrn: string, userMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getUserCert1(orgMrn: string, userMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getUserCert1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling getUserCert1.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getUserCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newUserCert(orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newUserCert(orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newUserCert(orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newUserCert(orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newUserCert.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling newUserCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newUserCert1(orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newUserCert1(orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newUserCert1(orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newUserCert1(orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newUserCert1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling newUserCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newUserCertFromCsr(body: string, orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newUserCertFromCsr(body: string, orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newUserCertFromCsr(body: string, orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newUserCertFromCsr(body: string, orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newUserCertFromCsr.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newUserCertFromCsr.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling newUserCertFromCsr.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newUserCertFromCsr1(body: string, orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newUserCertFromCsr1(body: string, orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newUserCertFromCsr1(body: string, orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newUserCertFromCsr1(body: string, orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newUserCertFromCsr1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newUserCertFromCsr1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling newUserCertFromCsr1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param userMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeUserCert(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeUserCert(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeUserCert(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeUserCert(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeUserCert.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeUserCert.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling revokeUserCert.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeUserCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param userMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeUserCert1(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeUserCert1(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeUserCert1(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeUserCert1(body: CertificateRevocation, orgMrn: string, userMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeUserCert1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeUserCert1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling revokeUserCert1.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeUserCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUser(body: User, orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateUser(body: User, orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateUser(body: User, orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateUser(body: User, orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateUser.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateUser.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling updateUser.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param userMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateUser1(body: User, orgMrn: string, userMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateUser1(body: User, orgMrn: string, userMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateUser1(body: User, orgMrn: string, userMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateUser1(body: User, orgMrn: string, userMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateUser1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateUser1.');\n        }\n\n        if (userMrn === null || userMrn === undefined) {\n            throw new Error('Required parameter userMrn was null or undefined when calling updateUser1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/user/${encodeURIComponent(String(userMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Certificate } from '../model/certificate';\nimport { CertificateBundle } from '../model/certificateBundle';\nimport { CertificateRevocation } from '../model/certificateRevocation';\nimport { PageVessel } from '../model/pageVessel';\nimport { Service } from '../model/service';\nimport { Vessel } from '../model/vessel';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class VesselControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVessel(body: Vessel, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Vessel>;\n    public createVessel(body: Vessel, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vessel>>;\n    public createVessel(body: Vessel, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vessel>>;\n    public createVessel(body: Vessel, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createVessel.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createVessel.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Vessel>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVessel1(body: Vessel, orgMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Vessel>;\n    public createVessel1(body: Vessel, orgMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vessel>>;\n    public createVessel1(body: Vessel, orgMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vessel>>;\n    public createVessel1(body: Vessel, orgMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createVessel1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createVessel1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<Vessel>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVessel(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVessel(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVessel(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVessel(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteVessel.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling deleteVessel.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVessel1(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVessel1(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVessel1(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVessel1(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteVessel1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling deleteVessel1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationVessels(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageVessel>;\n    public getOrganizationVessels(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageVessel>>;\n    public getOrganizationVessels(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageVessel>>;\n    public getOrganizationVessels(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationVessels.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageVessel>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessels`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param page Zero-based page index (0..N)\n     * @param size The size of the page to be returned\n     * @param sort Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getOrganizationVessels1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<PageVessel>;\n    public getOrganizationVessels1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PageVessel>>;\n    public getOrganizationVessels1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PageVessel>>;\n    public getOrganizationVessels1(orgMrn: string, page?: number, size?: number, sort?: Array<string>, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getOrganizationVessels1.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (page !== undefined && page !== null) {\n            queryParameters = queryParameters.set('page', <any>page);\n        }\n        if (size !== undefined && size !== null) {\n            queryParameters = queryParameters.set('size', <any>size);\n        }\n        if (sort) {\n            sort.forEach((element) => {\n                queryParameters = queryParameters.append('sort', <any>element);\n            })\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<PageVessel>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessels`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVessel(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Vessel>;\n    public getVessel(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vessel>>;\n    public getVessel(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vessel>>;\n    public getVessel(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVessel.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVessel.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Vessel>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVessel1(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Vessel>;\n    public getVessel1(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Vessel>>;\n    public getVessel1(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Vessel>>;\n    public getVessel1(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVessel1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVessel1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Vessel>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVesselCert(orgMrn: string, vesselMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getVesselCert(orgMrn: string, vesselMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getVesselCert(orgMrn: string, vesselMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getVesselCert(orgMrn: string, vesselMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVesselCert.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVesselCert.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getVesselCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param serialNumber \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVesselCert1(orgMrn: string, vesselMrn: string, serialNumber: number, observe?: 'body', reportProgress?: boolean): Observable<Certificate>;\n    public getVesselCert1(orgMrn: string, vesselMrn: string, serialNumber: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Certificate>>;\n    public getVesselCert1(orgMrn: string, vesselMrn: string, serialNumber: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Certificate>>;\n    public getVesselCert1(orgMrn: string, vesselMrn: string, serialNumber: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVesselCert1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVesselCert1.');\n        }\n\n        if (serialNumber === null || serialNumber === undefined) {\n            throw new Error('Required parameter serialNumber was null or undefined when calling getVesselCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Certificate>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/${encodeURIComponent(String(serialNumber))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVesselServices(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Service>>;\n    public getVesselServices(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Service>>>;\n    public getVesselServices(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Service>>>;\n    public getVesselServices(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVesselServices.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVesselServices.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<Service>>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/services`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVesselServices1(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<Array<Service>>;\n    public getVesselServices1(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Service>>>;\n    public getVesselServices1(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Service>>>;\n    public getVesselServices1(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVesselServices1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVesselServices1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<Service>>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/services`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newVesselCert(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newVesselCert(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newVesselCert(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newVesselCert(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newVesselCert.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling newVesselCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * DEPRECATED: Issues a bundle containing a certificate, the key pair of the certificate and keystores in JKS and PKCS#12 formats. As server generated key pairs are not considered secure this endpoint should not be used, and anybody who does should migrate to the endpoint for issuing certificates using certificate signing requests as soon as possible. This endpoint will be removed completely in the future and providers may choose to already disable it now which will result in an error if called.\n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newVesselCert1(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<CertificateBundle>;\n    public newVesselCert1(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CertificateBundle>>;\n    public newVesselCert1(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CertificateBundle>>;\n    public newVesselCert1(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newVesselCert1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling newVesselCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<CertificateBundle>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/issue-new`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newVesselCertFromCsr(body: string, orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newVesselCertFromCsr(body: string, orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newVesselCertFromCsr(body: string, orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newVesselCertFromCsr(body: string, orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newVesselCertFromCsr.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newVesselCertFromCsr.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling newVesselCertFromCsr.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public newVesselCertFromCsr1(body: string, orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public newVesselCertFromCsr1(body: string, orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public newVesselCertFromCsr1(body: string, orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public newVesselCertFromCsr1(body: string, orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling newVesselCertFromCsr1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling newVesselCertFromCsr1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling newVesselCertFromCsr1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/pem-certificate-chain',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'text/plain'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<string>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/issue-new/csr`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeVesselCert(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeVesselCert(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeVesselCert(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeVesselCert(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeVesselCert.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeVesselCert.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling revokeVesselCert.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeVesselCert.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param certId The serial number of the certificate given in decimal\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public revokeVesselCert1(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public revokeVesselCert1(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public revokeVesselCert1(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public revokeVesselCert1(body: CertificateRevocation, orgMrn: string, vesselMrn: string, certId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling revokeVesselCert1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling revokeVesselCert1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling revokeVesselCert1.');\n        }\n\n        if (certId === null || certId === undefined) {\n            throw new Error('Required parameter certId was null or undefined when calling revokeVesselCert1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/certificate/${encodeURIComponent(String(certId))}/revoke`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateVessel(body: Vessel, orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateVessel(body: Vessel, orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateVessel(body: Vessel, orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateVessel(body: Vessel, orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateVessel.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateVessel.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling updateVessel.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateVessel1(body: Vessel, orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateVessel1(body: Vessel, orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateVessel1(body: Vessel, orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateVessel1(body: Vessel, orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateVessel1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateVessel1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling updateVessel1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { VesselMrnVesselImageBody } from '../model/vesselMrnVesselImageBody';\nimport { VesselMrnVesselImageBody1 } from '../model/vesselMrnVesselImageBody1';\nimport { VesselMrnVesselImageBody2 } from '../model/vesselMrnVesselImageBody2';\nimport { VesselMrnVesselImageBody3 } from '../model/vesselMrnVesselImageBody3';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class VesselImageControllerService {\n\n    protected basePath = AppConfig.IR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVesselImagePost(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createVesselImagePost(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createVesselImagePost(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createVesselImagePost(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createVesselImagePost.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling createVesselImagePost.');\n        }\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVesselImagePost1(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody2, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createVesselImagePost1(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody2, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createVesselImagePost1(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody2, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createVesselImagePost1(orgMrn: string, vesselMrn: string, body?: VesselMrnVesselImageBody2, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling createVesselImagePost1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling createVesselImagePost1.');\n        }\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVesselImage(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVesselImage(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVesselImage(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVesselImage(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteVesselImage.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling deleteVesselImage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVesselImage1(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVesselImage1(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVesselImage1(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVesselImage1(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling deleteVesselImage1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling deleteVesselImage1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVesselImage(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getVesselImage(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getVesselImage(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getVesselImage(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVesselImage.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVesselImage.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'image/png',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request('get',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress,\n                responseType: 'blob',\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVesselImage1(orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getVesselImage1(orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getVesselImage1(orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getVesselImage1(orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling getVesselImage1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling getVesselImage1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'image/png',\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('get',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateVesselImagePut(body: Array<string>, orgMrn: string, vesselMrn: string, mediaType: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateVesselImagePut(body: Array<string>, orgMrn: string, vesselMrn: string, mediaType: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateVesselImagePut(body: Array<string>, orgMrn: string, vesselMrn: string, mediaType: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateVesselImagePut(body: Array<string>, orgMrn: string, vesselMrn: string, mediaType: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateVesselImagePut.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateVesselImagePut.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling updateVesselImagePut.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        headers.set('Content-Type', mediaType);\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/oidc/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param orgMrn \n     * @param vesselMrn \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateVesselImagePut1(body: Array<string>, orgMrn: string, vesselMrn: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateVesselImagePut1(body: Array<string>, orgMrn: string, vesselMrn: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateVesselImagePut1(body: Array<string>, orgMrn: string, vesselMrn: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateVesselImagePut1(body: Array<string>, orgMrn: string, vesselMrn: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateVesselImagePut1.');\n        }\n\n        if (orgMrn === null || orgMrn === undefined) {\n            throw new Error('Required parameter orgMrn was null or undefined when calling updateVesselImagePut1.');\n        }\n\n        if (vesselMrn === null || vesselMrn === undefined) {\n            throw new Error('Required parameter vesselMrn was null or undefined when calling updateVesselImagePut1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            '*/*'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'image/png',\n            'image/jpeg'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('put',`${this.basePath}/x509/api/org/${encodeURIComponent(String(orgMrn))}/vessel/${encodeURIComponent(String(vesselMrn))}/vesselImage`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object for representing a role that an agent is allowed to have\n */\nexport interface AllowedAgentRole { \n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * The role that you want the agent to be allowed to have\n     */\n    roleName: AllowedAgentRole.RoleNameEnum;\n}\nexport namespace AllowedAgentRole {\n    export type RoleNameEnum = 'ROLE_ORG_ADMIN' | 'ROLE_ENTITY_ADMIN' | 'ROLE_USER_ADMIN' | 'ROLE_VESSEL_ADMIN' | 'ROLE_SERVICE_ADMIN' | 'ROLE_DEVICE_ADMIN' | 'ROLE_MMS_ADMIN' | 'ROLE_USER';\n    export const RoleNameEnum = {\n        ORGADMIN: 'ROLE_ORG_ADMIN' as RoleNameEnum,\n        ENTITYADMIN: 'ROLE_ENTITY_ADMIN' as RoleNameEnum,\n        USERADMIN: 'ROLE_USER_ADMIN' as RoleNameEnum,\n        VESSELADMIN: 'ROLE_VESSEL_ADMIN' as RoleNameEnum,\n        SERVICEADMIN: 'ROLE_SERVICE_ADMIN' as RoleNameEnum,\n        DEVICEADMIN: 'ROLE_DEVICE_ADMIN' as RoleNameEnum,\n        MMSADMIN: 'ROLE_MMS_ADMIN' as RoleNameEnum,\n        USER: 'ROLE_USER' as RoleNameEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing a certificate\n */\nexport interface Certificate { \n    /**\n     * The ID of the entity in the form of a sequential integer\n     */\n    readonly id?: number;\n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * The certificate in PEM format\n     */\n    readonly certificate?: string;\n    /**\n     * When the certificate is valid from\n     */\n    readonly start?: Date;\n    /**\n     * When the certificate is valid until\n     */\n    readonly end?: Date;\n    /**\n     * The serial number of the certificate\n     */\n    readonly serialNumber?: number;\n    /**\n     * Whether the certificate has been revoked\n     */\n    readonly revoked?: boolean;\n    /**\n     * The time of revocation of the certificate\n     */\n    readonly revokedAt?: Date;\n    /**\n     * The revocation reason\n     */\n    readonly revokeReason?: string;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing a certificate revocation\n */\nexport interface CertificateRevocation { \n    /**\n     * The date the certificate revocation should be activated.\n     */\n    revokedAt: string;\n    /**\n     * The reason the certificates has been revoked\n     */\n    revokationReason: RevokationReasonEnum;\n}\nexport type RevokationReasonEnum = 'unspecified' | 'keycompromise' | 'cacompromise' | 'affiliationchanged' | 'superseded' | 'cessationofoperation' | 'certificatehold' | 'removefromcrl' | 'privilegewithdrawn' | 'aacompromise';\nexport const RevokationReasonEnum = {\n    Unspecified: 'unspecified' as RevokationReasonEnum,\n    Keycompromise: 'keycompromise' as RevokationReasonEnum,\n    Cacompromise: 'cacompromise' as RevokationReasonEnum,\n    Affiliationchanged: 'affiliationchanged' as RevokationReasonEnum,\n    Superseded: 'superseded' as RevokationReasonEnum,\n    Cessationofoperation: 'cessationofoperation' as RevokationReasonEnum,\n    Certificatehold: 'certificatehold' as RevokationReasonEnum,\n    Removefromcrl: 'removefromcrl' as RevokationReasonEnum,\n    Privilegewithdrawn: 'privilegewithdrawn' as RevokationReasonEnum,\n    Aacompromise: 'aacompromise' as RevokationReasonEnum\n};","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing an identity provider attribute\n */\nexport interface IdentityProviderAttribute { \n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * OpenId Connect or SAML2 attribute name\n     */\n    attributeName: IdentityProviderAttribute.AttributeNameEnum;\n    /**\n     * OpenId Connect or SAML2 attribute value\n     */\n    attributeValue: string;\n}\nexport namespace IdentityProviderAttribute {\n    export type AttributeNameEnum = 'importUrl, validateSignature, signingCertificate, singleLogoutServiceUrl, postBindingResponse, postBindingAuthnRequest, singleSignOnServiceUrl, wantAuthnRequestsSigned, userInfoUrl, tokenUrl, authorizationUrl, logoutUrl, issuer, publicKeySignatureVerifier, clientId, clientSecret,providerType, firstNameAttr, lastNameAttr, emailAttr, usernameAttr, permissionsAttr';\n    export const AttributeNameEnum = {\n        ImportUrlValidateSignatureSigningCertificateSingleLogoutServiceUrlPostBindingResponsePostBindingAuthnRequestSingleSignOnServiceUrlWantAuthnRequestsSignedUserInfoUrlTokenUrlAuthorizationUrlLogoutUrlIssuerPublicKeySignatureVerifierClientIdClientSecretproviderTypeFirstNameAttrLastNameAttrEmailAttrUsernameAttrPermissionsAttr: 'importUrl, validateSignature, signingCertificate, singleLogoutServiceUrl, postBindingResponse, postBindingAuthnRequest, singleSignOnServiceUrl, wantAuthnRequestsSigned, userInfoUrl, tokenUrl, authorizationUrl, logoutUrl, issuer, publicKeySignatureVerifier, clientId, clientSecret,providerType, firstNameAttr, lastNameAttr, emailAttr, usernameAttr, permissionsAttr' as AttributeNameEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody1 { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody2 { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface OrgMrnLogoBody3 { \n    logo: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Certificate } from './certificate';\nimport { Entity } from './entity';\nimport { IdentityProviderAttribute } from './identityProviderAttribute';\n\n/**\n * Model object representing an organization\n */\nexport interface Organization extends Entity{\n    /**\n     * The name of the organization\n     */\n    name: string;\n    /**\n     * Maritime Connectivity Platform Maritime Resource Name\n     */\n    mrn: string;\n    /**\n     * Subsidiary Maritime Resource Name\n     */\n    mrnSubsidiary?: string;\n    /**\n     * URL of the MMS that the organization is registered with\n     */\n    homeMMSUrl?: string;\n    /**\n     * The email of the organization\n     */\n    email: string;\n    /**\n     * The URL of the organization's website\n     */\n    url: string;\n    /**\n     * The address of the organization\n     */\n    address: string;\n    /**\n     * The country that the organization is located in\n     */\n    country: string;\n    /**\n     * Type of identity federation used by organization\n     */\n    federationType?: Organization.FederationTypeEnum;\n    /**\n     * The identity provider attributes of the organization\n     */\n    identityProviderAttributes?: Array<IdentityProviderAttribute>;\n}\nexport namespace Organization {\n    export type FederationTypeEnum = 'test-idp' | 'own-idp' | 'external-idp';\n    export const FederationTypeEnum = {\n        TestIdp: 'test-idp' as FederationTypeEnum,\n        OwnIdp: 'own-idp' as FederationTypeEnum,\n        ExternalIdp: 'external-idp' as FederationTypeEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Pageable { \n    page?: number;\n    size?: number;\n    sort?: Array<string>;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing an PEM encoded certificate\n */\nexport interface PemCertificate { \n    /**\n     * The private key of the certificate\n     */\n    privateKey?: string;\n    /**\n     * The public key of the certificate\n     */\n    publicKey?: string;\n    /**\n     * The certificate\n     */\n    certificate?: string;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport { Resource } from \"./resource\";\n\n/**\n * Model object representing a role\n */\nexport interface Role extends Resource{\n    /**\n     * The role that should be mapped to the permission\n     */\n    roleName: Role.RoleNameEnum;\n    /**\n     * The permission that should be mapped to the role\n     */\n    permission: string;\n    idOrganization?: number;\n}\nexport namespace Role {\n    export enum RoleNameEnum{\n        SITEADMIN = 'ROLE_SITE_ADMIN',\n        ORGADMIN = 'ROLE_ORG_ADMIN',\n        USER = 'ROLE_USER',\n        ENTITYADMIN = 'ROLE_ENTITY_ADMIN',\n        USERADMIN = 'ROLE_USER_ADMIN',\n        VESSELADMIN = 'ROLE_VESSEL_ADMIN',\n        SERVICEADMIN = 'ROLE_SERVICE_ADMIN',\n        APPROVEORG = 'ROLE_APPROVE_ORG',\n        DEVICEADMIN = 'ROLE_DEVICE_ADMIN',\n        MMSADMIN = 'ROLE_MMS_ADMIN',\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Certificate } from './certificate';\nimport { Entity } from './entity';\nimport { Vessel } from './vessel';\n\n/**\n * Model object representing a service\n */\nexport interface Service extends Entity{\n    /**\n     * The ID of the organization that the entity belongs to\n     */\n    idOrganization?: number;\n    /**\n     * Maritime Connectivity Platform Maritime Resource Name\n     */\n    mrn: string;\n    /**\n     * Subsidiary Maritime Resource Name\n     */\n    mrnSubsidiary?: string;\n    /**\n     * URL of MMS that the identity is registered\n     */\n    homeMMSUrl?: string;\n    /**\n     * Permissions as assigned from the organization\n     */\n    permissions?: string;\n    /**\n     * The name of the entity\n     */\n    name: string;\n    /**\n     * Access type of the OpenId Connect client\n     */\n    oidcAccessType?: Service.OidcAccessTypeEnum;\n    /**\n     * The client id of the service in MCP. Will be generated.\n     */\n    readonly oidcClientId?: string;\n    /**\n     * The client secret of the service in MCP. Will be generated.\n     */\n    readonly oidcClientSecret?: string;\n    /**\n     * The OpenId Connect redirect uri of service.\n     */\n    oidcRedirectUri?: string;\n    /**\n     * The domain name the service will be available on. Used in the issued certificates for the service.\n     */\n    certDomainName?: string;\n    /**\n     * The version of this service instance.\n     */\n    instanceVersion: string;\n    vessel?: Vessel;\n}\nexport namespace Service {\n    export type OidcAccessTypeEnum = 'public, bearer-only, confidential';\n    export const OidcAccessTypeEnum = {\n        PublicBearerOnlyConfidential: 'public, bearer-only, confidential' as OidcAccessTypeEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Sort { \n    sorted?: boolean;\n    unsorted?: boolean;\n    empty?: boolean;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * Model object representing a vessel attribute\n */\nexport interface VesselAttribute { \n    /**\n     * The time that the entity was created\n     */\n    readonly createdAt?: Date;\n    /**\n     * The time that the entity was last updated\n     */\n    readonly updatedAt?: Date;\n    /**\n     * Vessel attribute name\n     */\n    attributeName: VesselAttribute.AttributeNameEnum;\n    /**\n     * Vessel attribute value\n     */\n    attributeValue: string;\n    /**\n     * When the attribute is valid from\n     */\n    start?: Date;\n    /**\n     * When the attribute is valid until\n     */\n    end?: Date;\n}\nexport namespace VesselAttribute {\n    export type AttributeNameEnum = 'imo-number' | 'mmsi-number' | 'callsign' | 'flagstate' | 'ais-class' | 'port-of-register';\n    export const AttributeNameEnum = {\n        ImoNumber: 'imo-number' as AttributeNameEnum,\n        MmsiNumber: 'mmsi-number' as AttributeNameEnum,\n        Callsign: 'callsign' as AttributeNameEnum,\n        Flagstate: 'flagstate' as AttributeNameEnum,\n        AisClass: 'ais-class' as AttributeNameEnum,\n        PortOfRegister: 'port-of-register' as AttributeNameEnum\n    };\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody { \n    image: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody1 { \n    image: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody2 { \n    image: Blob;\n}","/**\n * Maritime Connectivity Platform Identity Registry API\n * The MCP Identity Registry API can be used for managing entities in the Maritime Connectivity Platform.<br>Two versions of the API are available - one that requires authentication using OpenID Connect and one that requires authentication using a X.509 client certificate.<br>The OpenAPI descriptions for the two versions are available <a href=\\\"https://test-api.maritimeconnectivity.net/v3/api-docs/mcp-idreg-oidc\\\">here</a> and <a href=\\\"https://test-api-x509.maritimeconnectivity.net/v3/api-docs/mcp-idreg-x509\\\">here</a>.\n *\n * OpenAPI spec version: 1.0.0\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface VesselMrnVesselImageBody3 { \n    image: Blob;\n}","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { DocControllerService } from './api/docController.service';\nimport { InstanceControllerService } from './api/instanceController.service';\nimport { LedgerRequestControllerService } from './api/ledgerRequestController.service';\nimport { SearchControllerService } from './api/searchController.service';\nimport { XmlControllerService } from './api/xmlController.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    DocControllerService,\n    InstanceControllerService,\n    LedgerRequestControllerService,\n    SearchControllerService,\n    XmlControllerService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","export * from './docController.service';\nimport { DocControllerService } from './docController.service';\nexport * from './instanceController.service';\nimport { InstanceControllerService } from './instanceController.service';\nexport * from './ledgerRequestController.service';\nimport { LedgerRequestControllerService } from './ledgerRequestController.service';\nexport * from './searchController.service';\nimport { SearchControllerService } from './searchController.service';\nexport * from './xmlController.service';\nimport { XmlControllerService } from './xmlController.service';\nexport const APIS = [DocControllerService, InstanceControllerService, LedgerRequestControllerService, SearchControllerService, XmlControllerService];\n","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { DocDto } from '../model/docDto';\nimport { DtPageDocDtDto } from '../model/dtPageDocDtDto';\nimport { DtPagingRequest } from '../model/dtPagingRequest';\nimport { Pageable } from '../model/pageable';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class DocControllerService {\n\n    protected basePath = AppConfig.SR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createDoc(body: DocDto, observe?: 'body', reportProgress?: boolean): Observable<DocDto>;\n    public createDoc(body: DocDto, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<DocDto>>;\n    public createDoc(body: DocDto, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<DocDto>>;\n    public createDoc(body: DocDto, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createDoc.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<DocDto>('post',`${this.basePath}/api/docs`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDoc(id: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteDoc(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteDoc(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteDoc(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteDoc.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/api/docs/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDoc(id: number, observe?: 'body', reportProgress?: boolean): Observable<DocDto>;\n    public getDoc(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<DocDto>>;\n    public getDoc(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<DocDto>>;\n    public getDoc(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getDoc.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<DocDto>('get',`${this.basePath}/api/docs/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param pageable \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocs(pageable: Pageable, observe?: 'body', reportProgress?: boolean): Observable<Array<DocDto>>;\n    public getDocs(pageable: Pageable, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<DocDto>>>;\n    public getDocs(pageable: Pageable, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<DocDto>>>;\n    public getDocs(pageable: Pageable, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling getDocs.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<DocDto>>('get',`${this.basePath}/api/docs`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param instanceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocsForDatatables(body: DtPagingRequest, instanceId: number, observe?: 'body', reportProgress?: boolean): Observable<DtPageDocDtDto>;\n    public getDocsForDatatables(body: DtPagingRequest, instanceId: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<DtPageDocDtDto>>;\n    public getDocsForDatatables(body: DtPagingRequest, instanceId: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<DtPageDocDtDto>>;\n    public getDocsForDatatables(body: DtPagingRequest, instanceId: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling getDocsForDatatables.');\n        }\n\n        if (instanceId === null || instanceId === undefined) {\n            throw new Error('Required parameter instanceId was null or undefined when calling getDocsForDatatables.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (instanceId !== undefined && instanceId !== null) {\n            queryParameters = queryParameters.set('instanceId', <any>instanceId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<DtPageDocDtDto>('post',`${this.basePath}/api/docs/dt`,\n            {\n                body: body,\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDoc(body: DocDto, id: number, observe?: 'body', reportProgress?: boolean): Observable<DocDto>;\n    public updateDoc(body: DocDto, id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<DocDto>>;\n    public updateDoc(body: DocDto, id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<DocDto>>;\n    public updateDoc(body: DocDto, id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateDoc.');\n        }\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateDoc.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<DocDto>('put',`${this.basePath}/api/docs/${encodeURIComponent(String(id))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { AppConfig } from './../../../app.config';\n/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { DtPageInstanceDtDto } from '../model/dtPageInstanceDtDto';\nimport { DtPagingRequest } from '../model/dtPagingRequest';\nimport { InstanceDto } from '../model/instanceDto';\nimport { Pageable } from '../model/pageable';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class InstanceControllerService {\n\n    protected basePath = AppConfig.SR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createInstance(body: InstanceDto, observe?: 'body', reportProgress?: boolean): Observable<InstanceDto>;\n    public createInstance(body: InstanceDto, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<InstanceDto>>;\n    public createInstance(body: InstanceDto, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<InstanceDto>>;\n    public createInstance(body: InstanceDto, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createInstance.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<InstanceDto>('post',`${this.basePath}/api/instances`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteInstance(id: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteInstance(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteInstance(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteInstance(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteInstance.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/api/instances/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstance(id: number, observe?: 'body', reportProgress?: boolean): Observable<InstanceDto>;\n    public getInstance(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<InstanceDto>>;\n    public getInstance(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<InstanceDto>>;\n    public getInstance(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getInstance.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<InstanceDto>('get',`${this.basePath}/api/instances/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param pageable \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstances(pageable: Pageable, observe?: 'body', reportProgress?: boolean): Observable<Array<InstanceDto>>;\n    public getInstances(pageable: Pageable, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<InstanceDto>>>;\n    public getInstances(pageable: Pageable, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<InstanceDto>>>;\n    public getInstances(pageable: Pageable, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling getInstances.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<InstanceDto>>('get',`${this.basePath}/api/instances`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getInstancesForDatatables(body: DtPagingRequest, observe?: 'body', reportProgress?: boolean): Observable<DtPageInstanceDtDto>;\n    public getInstancesForDatatables(body: DtPagingRequest, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<DtPageInstanceDtDto>>;\n    public getInstancesForDatatables(body: DtPagingRequest, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<DtPageInstanceDtDto>>;\n    public getInstancesForDatatables(body: DtPagingRequest, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling getInstancesForDatatables.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<DtPageInstanceDtDto>('post',`${this.basePath}/api/instances/dt`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateInstance(body: InstanceDto, id: number, observe?: 'body', reportProgress?: boolean): Observable<InstanceDto>;\n    public updateInstance(body: InstanceDto, id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<InstanceDto>>;\n    public updateInstance(body: InstanceDto, id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<InstanceDto>>;\n    public updateInstance(body: InstanceDto, id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateInstance.');\n        }\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateInstance.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<InstanceDto>('put',`${this.basePath}/api/instances/${encodeURIComponent(String(id))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param ledgerStatus \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateInstanceLedgerStatus(id: number, ledgerStatus: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateInstanceLedgerStatus(id: number, ledgerStatus: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateInstanceLedgerStatus(id: number, ledgerStatus: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateInstanceLedgerStatus(id: number, ledgerStatus: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateInstanceLedgerStatus.');\n        }\n\n        if (ledgerStatus === null || ledgerStatus === undefined) {\n            throw new Error('Required parameter ledgerStatus was null or undefined when calling updateInstanceLedgerStatus.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (ledgerStatus !== undefined && ledgerStatus !== null) {\n            queryParameters = queryParameters.set('ledgerStatus', <any>ledgerStatus);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('put',`${this.basePath}/api/instances/${encodeURIComponent(String(id))}/ledger-status`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param status \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateInstanceStatus(id: number, status: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateInstanceStatus(id: number, status: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateInstanceStatus(id: number, status: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateInstanceStatus(id: number, status: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateInstanceStatus.');\n        }\n\n        if (status === null || status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling updateInstanceStatus.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (status !== undefined && status !== null) {\n            queryParameters = queryParameters.set('status', <any>status);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('put',`${this.basePath}/api/instances/${encodeURIComponent(String(id))}/status`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { LedgerRequestDto } from '../model/ledgerRequestDto';\nimport { Pageable } from '../model/pageable';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class LedgerRequestControllerService {\n\n    protected basePath = AppConfig.SR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createLedgerRequest(body: LedgerRequestDto, observe?: 'body', reportProgress?: boolean): Observable<LedgerRequestDto>;\n    public createLedgerRequest(body: LedgerRequestDto, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LedgerRequestDto>>;\n    public createLedgerRequest(body: LedgerRequestDto, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LedgerRequestDto>>;\n    public createLedgerRequest(body: LedgerRequestDto, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createLedgerRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<LedgerRequestDto>('post',`${this.basePath}/api/ledgerrequests`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteRequest(id: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteRequest(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteRequest(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteRequest(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/api/ledgerrequests/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLedgerRequest(id: number, observe?: 'body', reportProgress?: boolean): Observable<LedgerRequestDto>;\n    public getLedgerRequest(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LedgerRequestDto>>;\n    public getLedgerRequest(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LedgerRequestDto>>;\n    public getLedgerRequest(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getLedgerRequest.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<LedgerRequestDto>('get',`${this.basePath}/api/ledgerrequests/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param pageable \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLedgerRequests(pageable: Pageable, observe?: 'body', reportProgress?: boolean): Observable<Array<LedgerRequestDto>>;\n    public getLedgerRequests(pageable: Pageable, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<LedgerRequestDto>>>;\n    public getLedgerRequests(pageable: Pageable, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<LedgerRequestDto>>>;\n    public getLedgerRequests(pageable: Pageable, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling getLedgerRequests.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<LedgerRequestDto>>('get',`${this.basePath}/api/ledgerrequests`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param status \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateRequestStatus(id: number, status: string, observe?: 'body', reportProgress?: boolean): Observable<LedgerRequestDto>;\n    public updateRequestStatus(id: number, status: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LedgerRequestDto>>;\n    public updateRequestStatus(id: number, status: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LedgerRequestDto>>;\n    public updateRequestStatus(id: number, status: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateRequestStatus.');\n        }\n\n        if (status === null || status === undefined) {\n            throw new Error('Required parameter status was null or undefined when calling updateRequestStatus.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (status !== undefined && status !== null) {\n            queryParameters = queryParameters.set('status', <any>status);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<LedgerRequestDto>('put',`${this.basePath}/api/ledgerrequests/${encodeURIComponent(String(id))}/status`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Geometry } from '../model/geometry';\nimport { InstanceDto } from '../model/instanceDto';\nimport { Pageable } from '../model/pageable';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class SearchControllerService {\n\n    protected basePath = AppConfig.SR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param queryString \n     * @param pageable \n     * @param geometry \n     * @param geometryWKT \n     * @param globalSearch \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public searchInstances(queryString: string, pageable: Pageable, geometry?: Geometry, geometryWKT?: string, globalSearch?: boolean, observe?: 'body', reportProgress?: boolean): Observable<Array<InstanceDto>>;\n    public searchInstances(queryString: string, pageable: Pageable, geometry?: Geometry, geometryWKT?: string, globalSearch?: boolean, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<InstanceDto>>>;\n    public searchInstances(queryString: string, pageable: Pageable, geometry?: Geometry, geometryWKT?: string, globalSearch?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<InstanceDto>>>;\n    public searchInstances(queryString: string, pageable: Pageable, geometry?: Geometry, geometryWKT?: string, globalSearch?: boolean, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (queryString === null || queryString === undefined) {\n            throw new Error('Required parameter queryString was null or undefined when calling searchInstances.');\n        }\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling searchInstances.');\n        }\n\n\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (queryString !== undefined && queryString !== null) {\n            queryParameters = queryParameters.set('queryString', <any>queryString);\n        }\n        if (geometry !== undefined && geometry !== null) {\n            queryParameters = queryParameters.set('geometry', <any>geometry);\n        }\n        if (geometryWKT !== undefined && geometryWKT !== null) {\n            queryParameters = queryParameters.set('geometryWKT', <any>geometryWKT);\n        }\n        if (globalSearch !== undefined && globalSearch !== null) {\n            queryParameters = queryParameters.set('globalSearch', <any>globalSearch);\n        }\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<InstanceDto>>('get',`${this.basePath}/api/_search/instances`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent }                           from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable }                                        from 'rxjs';\n\nimport { Pageable } from '../model/pageable';\nimport { XmlDto } from '../model/xmlDto';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\nimport { AppConfig } from '../../../app.config';\n\n\n@Injectable()\nexport class XmlControllerService {\n\n    protected basePath = AppConfig.SR_BASE_PATH;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * \n     * \n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createXml(body: XmlDto, observe?: 'body', reportProgress?: boolean): Observable<XmlDto>;\n    public createXml(body: XmlDto, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<XmlDto>>;\n    public createXml(body: XmlDto, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<XmlDto>>;\n    public createXml(body: XmlDto, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling createXml.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<XmlDto>('post',`${this.basePath}/api/xmls`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteXml(id: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteXml(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteXml(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteXml(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteXml.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<any>('delete',`${this.basePath}/api/xmls/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param pageable \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllXmls(pageable: Pageable, observe?: 'body', reportProgress?: boolean): Observable<Array<XmlDto>>;\n    public getAllXmls(pageable: Pageable, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<XmlDto>>>;\n    public getAllXmls(pageable: Pageable, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<XmlDto>>>;\n    public getAllXmls(pageable: Pageable, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (pageable === null || pageable === undefined) {\n            throw new Error('Required parameter pageable was null or undefined when calling getAllXmls.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (pageable !== undefined && pageable !== null) {\n            queryParameters = queryParameters.set('pageable', <any>pageable);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<Array<XmlDto>>('get',`${this.basePath}/api/xmls`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param schema \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getG1128Schema(schema: string, observe?: 'body', reportProgress?: boolean): Observable<string>;\n    public getG1128Schema(schema: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<string>>;\n    public getG1128Schema(schema: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<string>>;\n    public getG1128Schema(schema: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (schema === null || schema === undefined) {\n            throw new Error('Required parameter schema was null or undefined when calling getG1128Schema.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/xml'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<string>('get',`${this.basePath}/api/xmls/schemas/${encodeURIComponent(String(schema))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getXml(id: number, observe?: 'body', reportProgress?: boolean): Observable<XmlDto>;\n    public getXml(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<XmlDto>>;\n    public getXml(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<XmlDto>>;\n    public getXml(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getXml.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.request<XmlDto>('get',`${this.basePath}/api/xmls/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateXml(body: XmlDto, id: number, observe?: 'body', reportProgress?: boolean): Observable<XmlDto>;\n    public updateXml(body: XmlDto, id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<XmlDto>>;\n    public updateXml(body: XmlDto, id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<XmlDto>>;\n    public updateXml(body: XmlDto, id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling updateXml.');\n        }\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling updateXml.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<XmlDto>('put',`${this.basePath}/api/xmls/${encodeURIComponent(String(id))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param body \n     * @param schema \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public validateXmlWithG1128Schema(body: string, schema: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public validateXmlWithG1128Schema(body: string, schema: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public validateXmlWithG1128Schema(body: string, schema: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public validateXmlWithG1128Schema(body: string, schema: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling validateXmlWithG1128Schema.');\n        }\n\n        if (schema === null || schema === undefined) {\n            throw new Error('Required parameter schema was null or undefined when calling validateXmlWithG1128Schema.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        let httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected != undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected != undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.request<any>('post',`${this.basePath}/api/xmls/validate/${encodeURIComponent(String(schema))}`,\n            {\n                body: body,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","    import { HttpUrlEncodingCodec } from '@angular/common/http';\n\n/**\n* CustomHttpUrlEncodingCodec\n* Fix plus sign (+) not encoding, so sent as blank space\n* See: https://github.com/angular/angular/issues/11058#issuecomment-247367318\n*/\nexport class CustomHttpUrlEncodingCodec extends HttpUrlEncodingCodec {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeValue(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n\n","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Coordinate { \n    x?: number;\n    y?: number;\n    z?: number;\n    m?: number;\n    coordinate?: Coordinate;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface CoordinateSequence { \n    dimension?: number;\n    measures?: number;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface CoordinateSequenceFactory { \n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface DocDtDto { \n    id?: number;\n    name: string;\n    comment?: string;\n    mimetype: string;\n    filecontentContentType?: string;\n    instanceId?: number;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface DocDto { \n    id?: number;\n    name: string;\n    comment?: string;\n    mimetype: string;\n    filecontent: Array<string>;\n    filecontentContentType?: string;\n    instanceId?: number;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface DtOrder { \n    column?: number;\n    dir?: DtOrder.DirEnum;\n}\nexport namespace DtOrder {\n    export type DirEnum = 'asc' | 'desc';\n    export const DirEnum = {\n        Asc: 'asc' as DirEnum,\n        Desc: 'desc' as DirEnum\n    };\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface DtSearch { \n    value?: string;\n    regexp?: string;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Envelope { \n    _null?: boolean;\n    area?: number;\n    minY?: number;\n    maxY?: number;\n    minX?: number;\n    maxX?: number;\n    diameter?: number;\n    width?: number;\n    height?: number;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Geometry } from './geometry';\nimport { XmlDto } from './xmlDto';\n\nexport interface InstanceDtDto { \n    id?: number;\n    name: string;\n    version: string;\n    publishedAt?: Date;\n    lastUpdatedAt?: Date;\n    comment: string;\n    geometry?: Geometry;\n    geometryContentType?: string;\n    instanceId: string;\n    keywords?: Array<string>;\n    status: InstanceDtDto.StatusEnum;\n    organizationId?: string;\n    unlocode?: Array<string>;\n    endpointUri?: string;\n    endpointType?: string;\n    mmsi?: string;\n    imo?: string;\n    serviceType?: Array<string>;\n    instanceAsXml?: XmlDto;\n    instanceAsDocId?: number;\n    instanceAsDocName?: string;\n    ledgerRequestId?: number;\n    ledgerRequestStatus?: InstanceDtDto.LedgerRequestStatusEnum;\n    docIds?: Array<number>;\n    implementsServiceDesign?: string;\n    implementsServiceDesignVersion?: string;\n}\nexport namespace InstanceDtDto {\n    export type StatusEnum = 'PROVISIONAL' | 'RELEASED' | 'DEPRECATED' | 'DELETED';\n    export const StatusEnum = {\n        PROVISIONAL: 'PROVISIONAL' as StatusEnum,\n        RELEASED: 'RELEASED' as StatusEnum,\n        DEPRECATED: 'DEPRECATED' as StatusEnum,\n        DELETED: 'DELETED' as StatusEnum\n    };\n    export type LedgerRequestStatusEnum = 'INACTIVE' | 'CREATED' | 'VETTING' | 'VETTED' | 'REQUESTING' | 'SUCCEEDED' | 'FAILED' | 'REJECTED';\n    export const LedgerRequestStatusEnum = {\n        INACTIVE: 'INACTIVE' as LedgerRequestStatusEnum,\n        CREATED: 'CREATED' as LedgerRequestStatusEnum,\n        VETTING: 'VETTING' as LedgerRequestStatusEnum,\n        VETTED: 'VETTED' as LedgerRequestStatusEnum,\n        REQUESTING: 'REQUESTING' as LedgerRequestStatusEnum,\n        SUCCEEDED: 'SUCCEEDED' as LedgerRequestStatusEnum,\n        FAILED: 'FAILED' as LedgerRequestStatusEnum,\n        REJECTED: 'REJECTED' as LedgerRequestStatusEnum\n    };\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { DocDto } from './docDto';\nimport { Geometry } from './geometry';\nimport { Xml } from './xml';\n\nexport interface InstanceDto { \n    id?: number;\n    name: string;\n    version: string;\n    publishedAt?: Date;\n    lastUpdatedAt?: Date;\n    comment: string;\n    geometry?: Geometry;\n    geometryContentType?: string;\n    instanceId: string;\n    keywords?: Array<string>;\n    status: InstanceDto.StatusEnum;\n    organizationId?: string;\n    unlocode?: Array<string>;\n    endpointUri?: string;\n    endpointType?: string;\n    mmsi?: string;\n    imo?: string;\n    serviceType?: Array<string>;\n    instanceAsXml?: Xml;\n    instanceAsDoc?: DocDto;\n    ledgerRequestId?: number;\n    ledgerRequestStatus?: InstanceDto.LedgerRequestStatusEnum;\n    docIds?: Array<number>;\n    implementsServiceDesign?: string;\n    implementsServiceDesignVersion?: string;\n}\nexport namespace InstanceDto {\n    export type StatusEnum = 'PROVISIONAL' | 'RELEASED' | 'DEPRECATED' | 'DELETED';\n    export const StatusEnum = {\n        PROVISIONAL: 'PROVISIONAL' as StatusEnum,\n        RELEASED: 'RELEASED' as StatusEnum,\n        DEPRECATED: 'DEPRECATED' as StatusEnum,\n        DELETED: 'DELETED' as StatusEnum\n    };\n    export type LedgerRequestStatusEnum = 'INACTIVE' | 'CREATED' | 'VETTING' | 'VETTED' | 'REQUESTING' | 'SUCCEEDED' | 'FAILED' | 'REJECTED';\n    export const LedgerRequestStatusEnum = {\n        INACTIVE: 'INACTIVE' as LedgerRequestStatusEnum,\n        CREATED: 'CREATED' as LedgerRequestStatusEnum,\n        VETTING: 'VETTING' as LedgerRequestStatusEnum,\n        VETTED: 'VETTED' as LedgerRequestStatusEnum,\n        REQUESTING: 'REQUESTING' as LedgerRequestStatusEnum,\n        SUCCEEDED: 'SUCCEEDED' as LedgerRequestStatusEnum,\n        FAILED: 'FAILED' as LedgerRequestStatusEnum,\n        REJECTED: 'REJECTED' as LedgerRequestStatusEnum\n    };\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface LedgerRequestDto { \n    id?: number;\n    serviceInstanceId: number;\n    status?: LedgerRequestDto.StatusEnum;\n    reason?: string;\n    createdAt?: string;\n    lastUpdatedAt?: string;\n}\nexport namespace LedgerRequestDto {\n    export type StatusEnum = 'INACTIVE' | 'CREATED' | 'VETTING' | 'VETTED' | 'REQUESTING' | 'SUCCEEDED' | 'FAILED' | 'REJECTED';\n    export const StatusEnum = {\n        INACTIVE: 'INACTIVE' as StatusEnum,\n        CREATED: 'CREATED' as StatusEnum,\n        VETTING: 'VETTING' as StatusEnum,\n        VETTED: 'VETTED' as StatusEnum,\n        REQUESTING: 'REQUESTING' as StatusEnum,\n        SUCCEEDED: 'SUCCEEDED' as StatusEnum,\n        FAILED: 'FAILED' as StatusEnum,\n        REJECTED: 'REJECTED' as StatusEnum\n    };\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Pageable { \n    page?: number;\n    size?: number;\n    sort?: Array<string>;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Sort { \n    empty?: boolean;\n    sorted?: boolean;\n    unsorted?: boolean;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Type { \n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface Xml { \n    id?: number;\n    name: string;\n    comment?: string;\n    content: string;\n    contentContentType?: string;\n}","/**\n * Maritime Connectivity Platform Service Registry API\n * Maritime Connectivity Platform Service Registry, developed by the MCC MSR WG\n *\n * OpenAPI spec version: 0.1\n * Contact: info@maritimeconnectivity.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nexport interface XmlDto { \n    id?: number;\n    name: string;\n    comment?: string;\n    content: string;\n    contentContentType?: string;\n}","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LandingComponent } from './landing.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: LandingComponent,\n  children: [\n    {\n      path: 'login',\n      component: LoginComponent,\n    },\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n  ],\n}];\n\n/**\n * a router component for landing module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LandingRoutingModule { }\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n/**\n * a component for landing module\n */\n@Component({\n  selector: 'ngx-landing',\n  template: '<router-outlet></router-outlet>',\n})\nexport class LandingComponent{\n\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SharedModule } from './../shared/shared.module';\nimport { CommonModule } from '@angular/common';\nimport { LandingComponent } from './landing.component';\nimport { LoginComponent } from './login/login.component';\nimport { LandingRoutingModule } from './landing-routing.module';\nimport { NgModule } from '@angular/core';\nimport { NbLayoutModule, NbCardModule, NbButtonModule, NbStepperModule } from '@nebular/theme';\nimport { RouterModule } from '@angular/router';\nimport { RegisterDialogComponent } from './register-dialog/register-dialog.component';\nimport { ProcessDialogComponent } from './process-dialog/process-dialog.component';\n\n/**\n * a module for landing process\n */\n@NgModule({\n  declarations: [\n    LandingComponent,\n    LoginComponent,\n    RegisterDialogComponent,\n    ProcessDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    LandingRoutingModule,\n    RouterModule,\n    NbCardModule,\n    NbButtonModule,\n    NbLayoutModule,\n    SharedModule,\n    NbStepperModule,\n  ]\n})\nexport class LandingModule { }\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProcessDialogComponent } from './../process-dialog/process-dialog.component';\nimport { RegisterDialogComponent } from './../register-dialog/register-dialog.component';\nimport { NotifierService } from 'angular-notifier';\nimport { AuthService } from './../../auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NbDialogService } from '@nebular/theme';\nimport { AppConfig } from '../../app.config';\n\n/**\n * a main landing component for login\n */\n@Component({\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * value for version of the portal\n   */\n  version = AppConfig.MP_VERSION;\n\n  /**\n   * environment name to show at front\n   */\n  environmentName = this.capitalize(AppConfig.ENVIRONMENT_NAME);\n\n  constructor(\n    private authService: AuthService,\n    private notifierService: NotifierService,\n    private route: ActivatedRoute,\n    private dialogService: NbDialogService,\n  ) {}\n\n  capitalize(s: string) {\n    return s[0].toUpperCase() + s.slice(1);\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(e => {\n      if (e['reason'] === '401') {\n        this.notifierService.notify('error', 'Your session has timed out');\n      } else if (e['reason'] === 'cache') {\n        this.notifierService.notify(\n          'error',\n          'Please try to refresh your browser with CTRL-F5'\n        );\n      }\n    });\n  }\n\n  /**\n   * the function activates login process\n   */\n  logIn() {\n    this.authService.login();\n  }\n\n  /**\n   * it triggers opening the registration dialog up\n   */\n  createRegisterDialog() {\n    this.dialogService.open(RegisterDialogComponent);\n  }\n\n  /**\n   * it triggers opening the process dialog up\n   */\n  createProcessDialog() {\n    this.dialogService.open(ProcessDialogComponent);\n  }\n}\n","<nb-layout>\n    <nb-layout-header class=\"image-container\">\n        <div class=\"d-flex\">\n            <div class=\"mr-auto p-2\">\n                <a class=\"text-white\" href=\"https://maritimeconnectivity.net/\" target=\"_blank\">Maritime Connectivity Platform</a>\n            </div>\n        </div>\n    </nb-layout-header>\n    <nb-layout-column class=\"image-container\">\n        <nb-card class=\"trans-background\">\n            <nb-card-body class=\"trans-background flex justify-content-center\">\n                <div class=\"row\">\n                    <div class=\"col text-center w-100\">\n                        <img class=\"mcp-logo p-4\" src = \"assets/images/mcp.svg\" alt=\"MCP logo\"/>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center w-100\">\n                        <p class=\"title-font text-white p-3 w-100\">MCC MCP Testbed</p>\n                        <p class=\"subtitle-font text-white w-100\">Management Portal</p>\n                        <h5 class=\"description-font p-1 text-white w-100\">{{environmentName}} environment</h5>\n                    </div>\n                </div>\n                <div class=\"row justify-content-center p-4\">\n                    <div class=\"buttons-row\">\n                        <button status=\"primary\" nbButton type=\"button\" (click)=\"logIn()\">Log in</button>\n                        <button status=\"success\" nbButton type=\"button\" (click)=\"createRegisterDialog()\">Register</button>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center p-2\">\n                        <button class=\"text-white\" nbButton type=\"button\" (click)=\"createProcessDialog()\" size=\"small\" outline>I want to know more about registration</button>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center p-2\">\n                        <p class=\"lead description-font font-weight-bold text-white\">A website for administrators who manage resources in \n                            <a class=\"text-white\" href=\"https://maritimeconnectivity.net/mcp-documents/#MIR\" target=\"_blank\">Maritime Identity Registry</a> and \n                            <a class=\"text-white\" href=\"https://maritimeconnectivity.net/mcp-documents/#MSR\" target=\"_blank\">Maritime Service Registry</a></p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center p-2\">\n                        <p class=\"lead description-font text-white\">WARNING: This version is currently under development. We recommend to use Chrome or Firefox browsers for better experience.</p>\n                    </div>\n                </div>\n            </nb-card-body>\n        </nb-card>\n    </nb-layout-column>\n</nb-layout>","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * a process component for explaining joining process\n */\n@Component({\n  selector: 'ngx-process-dialog',\n  templateUrl: './process-dialog.component.html',\n  styleUrls: ['./process-dialog.component.scss']\n})\nexport class ProcessDialogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"steppers-container row\">\n    <div class=\"col\">\n        <nb-card>\n          <nb-card-header>\n              Registration process\n          </nb-card-header>\n          <nb-card-body>\n            <nb-stepper orientation=\"vertical\">\n              <nb-step label=\"First step\">\n                <h3>Request to join</h3>\n                <p class=\"lorem\">\n                  Press <b>Register</b> button in the front page to begin with. After you agree with the terms of use, a form for information on your organization will be given and needs to be filled with. After press <b>Submit</b> button, you will be soon notified if the submission of your information is successful or not.</p>\n                <button nbButton disabled nbStepperNext>prev</button>\n                <button nbButton nbStepperNext>next</button>\n              </nb-step>\n              <nb-step label=\"Second step\">\n                <h3>Vetting of organization</h3>\n                <p class=\"lorem\">\n                  The administrator receives the information and investigate the authenticity of the information. The level of details in this investigation is up to the policy of an MCP identity service provider.\n                </p>\n                <button nbButton nbStepperPrevious>prev</button>\n                <button nbButton nbStepperNext>next</button>\n              </nb-step>\n              <nb-step label=\"Third step\">\n                <h3>Approval of request</h3>\n                <p class=\"lorem\">\n                  The administrator sends you an e-mail for approal of request if everything is okay. Remember the given credential in the e-mail is temporary and needs to be replaced by your own password.\n                </p>\n                <button nbButton nbStepperPrevious>prev</button>\n                <button nbButton nbStepperNext>next</button>\n              </nb-step>\n              <nb-step label=\"Fourth step\">\n                <h3>Ready to use MIR and MSR through Management portal!</h3>\n                <p class=\"lorem\">\n                  Now you are accessible to Management portal and able to manage your resources in MIR and also service instances in MSR.\n                </p>\n                <button nbButton nbStepperPrevious>prev</button>\n                <button nbButton disabled nbStepperNext>next</button>\n            </nb-step>\n        </nb-stepper>\n    </nb-card-body>\n</nb-card>\n</div>","<div class=\"card-container\">\n    <nb-card *ngIf=\"!agreed && !submitted\">\n        <nb-card-header>\n            Request to join {{environmentName}}\n        </nb-card-header>\n        <nb-card-body>\n            <div *ngIf=\"!agreed\">\n                <div class=\"rows\">\n                    <div class=\"col\">\n                        <strong>Terms of use</strong>\n                    </div>\n                </div>\n                <div class=\"rows\">\n                    <div class=\"col\">\n                        {{clause}}\n                    </div>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div>\n                <div class=\"buttons-row\">\n                    <button nbButton status=\"success\" (click)=\"agree()\">Agree</button>\n                    <button nbButton status=\"danger\" (click)=\"dismiss()\">Disagree</button>\n                </div>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n    \n    <div *ngIf=\"agreed && !submitted\">\n        <div class=\"rows\">\n            <div class=\"col\">\n                <ngx-editable-form #editableForm\n                [title]=\"title\" [hasHeader]=\"true\" [menuType]=\"menuType\" [isForNew]=\"isForNew\"\n                [isAdmin]=\"true\" [title]=\"title\" [iconName]=\"iconName\" [isUnapprovedorg]=\"isUnapprovedorg\"\n                [canApproveOrg]=\"canApproveOrg\" [entityMrn]=\"entityMrn\" [orgMrn]=\"orgMrn\"\n                [instanceVersion]=\"instanceVersion\" [isLoading]=\"isLoading\" [isLoaded]=\"isLoaded\"\n                [showButtons]=\"true\"\n                (onCancel)=\"dismiss()\" (onSubmit)=\"submit($event)\" (onDelete)=\"delete()\"\n                ></ngx-editable-form>\n            </div>\n        </div>\n    </div>\n    \n    <nb-card *ngIf=\"submitted\">\n        <nb-card-header>\n            Your information has been successfully submitted!\n        </nb-card-header>\n        <nb-card-body>\n            <div class=\"rows\">\n                <div class=\"col\">\n                    <h5 class=\"text-center\">MIR Administrator will process the information and be in contact with you.</h5>\n                </div>\n            </div>\n        </nb-card-body>\n        <nb-card-footer>\n            <div class=\"buttons-row\">\n                <button nbButton status=\"danger\" (click)=\"dismiss()\">Close</button>\n            </div>\n        </nb-card-footer>\n    </nb-card>\n</div>\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotifierService } from 'angular-notifier';\nimport { Organization } from './../../backend-api/identity-registry/model/organization';\nimport { OrganizationControllerService } from './../../backend-api/identity-registry/api/organizationController.service';\nimport { AppConfig } from './../../app.config';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { ColumnForMenu } from '../../shared/models/columnForMenu';\n\n/**\n * a component for registration process\n */\n@Component({\n  selector: 'ngx-register-dialog',\n  templateUrl: './register-dialog.component.html',\n  styleUrls: ['./register-dialog.component.scss']\n})\nexport class RegisterDialogComponent implements OnInit {\n  title = 'Requested information to join';\n  menuType = 'newOrganization';\n  isForNew = true;\n  environmentName: string;\n  clause: string;\n  agreed = false;\n  submitted = false;\n\n  constructor(\n    protected ref: NbDialogRef<RegisterDialogComponent>,\n    private organizationControllerService: OrganizationControllerService,\n    private notifierService: NotifierService,\n    ) {\n    this.environmentName = AppConfig.ENVIRONMENT_TITLE;\n    this.clause = AppConfig.TERMS_OF_USE;\n  }\n\n  ngOnInit(): void {\n  }\n\n  dismiss(): void {\n    this.ref.close();\n  }\n\n  agree(): void {\n    this.agreed = true;\n  }\n\n  submit(value: any): void {\n    const organization: Organization = {\n      name: value.orgName,\n      mrn: value.orgMrn,\n      email: value.orgEmail,\n      url: value.orgUrl,\n      country: value.orgCountry,\n      address: value.orgAddress,\n    };\n    this.organizationControllerService.applyOrganization(organization).subscribe(\n      res => {\n        this.submitted = true;\n      },\n      err => this.notifierService.notify('error', 'There was error in registration of information - ' + err.error.message),\n    );\n    \n    \n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const TOKEN_DELIMITER = '#¤#';\nexport const MIR_ADMIN = 'ROLE_SITE_ADMIN';\nexport const ORG_ADMIN_AT_MIR = 'MCPADMIN';\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\nimport { NbCalendarRange, NbDateService } from '@nebular/theme';\nimport { DayCellComponent } from './day-cell/day-cell.component';\n\n@Component({\n  selector: 'ngx-calendar',\n  templateUrl: 'calendar.component.html',\n  styleUrls: ['calendar.component.scss'],\n  entryComponents: [DayCellComponent],\n})\nexport class CalendarComponent {\n  date = new Date();\n  date2 = new Date();\n  range: NbCalendarRange<Date>;\n  dayCellComponent = DayCellComponent;\n  constructor(protected dateService: NbDateService<Date>) {\n    this.range = {\n      start: this.dateService.addDay(this.monthStart, 3),\n      end: this.dateService.addDay(this.monthEnd, -3),\n    };\n  }\n  get monthStart(): Date {\n    return this.dateService.getMonthStart(new Date());\n  }\n  get monthEnd(): Date {\n    return this.dateService.getMonthEnd(new Date());\n  }\n}","<div class=\"calendars\">\n    <div class=\"calendar-container\">\n      <span class=\"subtitle\">\n        Selected date: {{ date | date }}\n      </span>\n      <nb-calendar [(date)]=\"date\" [boundingMonth]=\"true\" showWeekNumber></nb-calendar>\n    </div>\n    <div class=\"calendar-container\">\n      <span class=\"subtitle\">\n        Selected range: {{ range.start | date }} - {{ range.end | date }}\n      </span>\n      <nb-calendar-range [(range)]=\"range\"></nb-calendar-range>\n    </div>\n    <div class=\"calendar-container\">\n      <span class=\"subtitle\">\n        Selected date: {{ date2 | date }}\n      </span>\n      <nb-calendar\n        [(date)]=\"date2\"\n        [dayCellComponent]=\"dayCellComponent\"\n      ></nb-calendar>\n    </div>\n  </div>\n  ","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\nimport { NbCalendarDayCellComponent } from '@nebular/theme';\n@Component({\n  selector: 'ngx-day-cell',\n  templateUrl: 'day-cell.component.html',\n  styleUrls: ['day-cell.component.scss'],\n  host: { '(click)': 'onClick()', 'class': 'day-cell' },\n})\nexport class DayCellComponent extends NbCalendarDayCellComponent<Date> {\n}","<div>{{ day }}</div>\n<span class=\"caption\">{{ (day + 100) * day }}$</span>","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MmsControllerService } from './../backend-api/identity-registry/api/mmsController.service';\nimport { VesselControllerService } from './../backend-api/identity-registry/api/vesselController.service';\nimport { UserControllerService } from './../backend-api/identity-registry/api/userController.service';\nimport { ServiceControllerService } from './../backend-api/identity-registry/api/serviceController.service';\nimport { DeviceControllerService } from './../backend-api/identity-registry/api/deviceController.service';\nimport { OrganizationControllerService } from './../backend-api/identity-registry/api/organizationController.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CertificateBundle, CertificateRevocation } from '../backend-api/identity-registry';\nimport { getReasonOptionFromRevocationReason } from '../util/certRevokeInfo';\nimport { EntityType } from './models/menuType';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CertificateService {\n  constructor(\n    private organizationsService: OrganizationControllerService,\n    private devicesService: DeviceControllerService,\n    private servicesService: ServiceControllerService,\n    private usersService: UserControllerService,\n    private vesselsService: VesselControllerService,\n    private mmsService: MmsControllerService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  public formatCerts(certificates: any[]): any[] {\n    let formatted = [];\n    for(const key_certs in certificates) {\n      const cert = certificates[key_certs];\n      for (const key in cert) {\n        certificates[key_certs][key] = cert[key];\n      }\n      if (cert['revoked']) {\n        cert[\"revokeInfo\"] = cert[\"revokedAt\"];\n        cert[\"revokeReasonText\"] = getReasonOptionFromRevocationReason(cert[\"revokeReason\"]).title;\n      }\n      formatted.push(cert);\n    }\n    return formatted;\n  }\n\n  public splitByRevokeStatus(certificates: any[]): any {\n    let activeCertificates = [];\n    let revokedCertificates = [];\n    for(const key_certs in certificates) {\n      const cert = certificates[key_certs];\n      cert['revoked'] ? revokedCertificates.push(cert) : activeCertificates.push(cert);\n    }\n    activeCertificates.sort((a,b) => a.end - b.end);\n    revokedCertificates.sort((a,b) => a.end - b.end);\n    return {\n      activeCertificates: this.formatCerts(activeCertificates),\n      revokedCertificates: this.formatCerts(revokedCertificates),\n    };\n  }\n\n  public issueNewCertificateFromMIR(entityType: EntityType, entityMrn: string, orgMrn: string, version?: string)\n            : Observable<CertificateBundle> {\n\t\tif (entityType == null || !entityMrn) { // We lost our state data somehow???\n\t\t\tthrow new Error('Internal state lost');\n\t\t}\n\t\tswitch (entityType) {\n      case EntityType.Organization: {\n        return this.organizationsService.newOrgCert(entityMrn);\n      }\n      case EntityType.Device: {\n        return this.devicesService.newDeviceCert(orgMrn, entityMrn);\n      }\n      case EntityType.Service: {\n        return this.servicesService.newServiceCert(orgMrn, entityMrn, version);\n      }\n      case EntityType.User: {\n        return this.usersService.newUserCert(orgMrn, entityMrn);\n      }\n      case EntityType.Vessel: {\n        return this.vesselsService.newVesselCert(orgMrn, entityMrn);\n      }\n      case EntityType.MMS: {\n        return this.mmsService.newMMSCert(orgMrn, entityMrn);\n      }\n    }\n\t}\n\n\tpublic issueNewCertificate(csr: string, entityType: EntityType, entityMrn: string, orgMrn: string, version?: string)\n            : Observable<string> {\n\t\tif (entityType == null || !entityMrn) { // We lost our state data somehow???\n\t\t\tthrow new Error('Internal state lost');\n\t\t}\n\t\tswitch (entityType) {\n      case EntityType.Organization: {\n        return this.organizationsService.newOrgCertFromCsr(csr, entityMrn);\n      }\n      case EntityType.Device: {\n        return this.devicesService.newDeviceCertFromCsr(csr, orgMrn, entityMrn);\n      }\n      case EntityType.Service: {\n        return this.servicesService.newServiceCertFromCsr(csr, orgMrn, entityMrn, version);\n      }\n      case EntityType.User: {\n        return this.usersService.newUserCertFromCsr(csr, orgMrn, entityMrn);\n      }\n      case EntityType.Vessel: {\n        return this.vesselsService.newVesselCertFromCsr(csr, orgMrn, entityMrn);\n      }\n      case EntityType.MMS: {\n        return this.mmsService.newMMSCertFromCsr(csr, orgMrn, entityMrn);\n      }\n    }\n\t}\n\n\tpublic revokeCertificate(entityType: EntityType, entityMrn:string, orgMrn: string,\n      certificateId:number, certificateRevocation:CertificateRevocation, version?: string) : Observable<any> {\n\t\tif (entityType == null || !entityMrn) { // We lost our state data somehow???\n\t\t\tthrow new Error('Internal state lost');\n\t\t}\n\n\t\tswitch (entityType) {\n      case EntityType.Organization: {\n        return this.organizationsService.revokeOrgCert(certificateRevocation, entityMrn, certificateId);\n      }\n      case EntityType.Device: {\n        return this.devicesService.revokeDeviceCert(certificateRevocation, orgMrn, entityMrn, certificateId);\n      }\n      case EntityType.Service: {\n        return this.servicesService.revokeServiceCert(certificateRevocation, orgMrn, entityMrn, version, certificateId);\n      }\n      case EntityType.User: {\n        return this.usersService.revokeUserCert(certificateRevocation, orgMrn, entityMrn, certificateId);\n      }\n      case EntityType.Vessel: {\n        return this.vesselsService.revokeVesselCert(certificateRevocation, orgMrn, entityMrn, certificateId);\n      }\n      case EntityType.MMS: {\n        return this.mmsService.revokeMMSCert(certificateRevocation, orgMrn, entityMrn, certificateId);\n      }\n    }\n\t}\n}\n","<nb-card>\n    <nb-card-header>\n        <div *ngIf=\"certificateBundle\">\n            Certificate issued with success\n        </div>\n        <div *ngIf=\"!certificateBundle\">\n            Select cert issue method\n        </div>\n    </nb-card-header>\n    <nb-card-body [nbSpinner]=\"isLoading\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n        <div *ngIf=\"!certificateBundle\">\n            <p>There are four ways to issue a new certificate:</p>\n            <div class=\"col-12\">\n                <nb-card size=\"small\">\n                    <nb-tabset fullWidth>\n                    <nb-tab tabTitle=\"Locally with manual keystore setup\">\n                        <p>Many operating systems and browsers require that certificates are\n                        imported as a password protected PKCS#12 keystore.\n                        If you want to manually generate the keystore, which is the recommended approach, click the corresponding button below and download the resulting zip file, unzip it and then use OpenSSL\n                        to generate the keystore using the following command:\n                        <br><br><pre>openssl pkcs12 -export -out keystore.p12 -in Certificate_{{nameNoSpaces}}.pem -inkey PrivateKey_{{nameNoSpaces}}.pem</pre>\n                        This will prompt you for a passphrase to protect the keystore. If successful the command will\n                        result in a PKCS#12 keystore file called 'keystore.p12'.\n                        <br>If you don't want to generate a keystore at all you can just skip executing the OpenSSL command.\n                        </p>\n                        <div class=\"container\">\n                            <button nbButton status=\"success\" class=\"w-100\" (click)=\"locallyWManualKeystore()\">Issue a cert locally with manual keystore setup</button>\n                        </div>\n                    </nb-tab>\n                    <nb-tab tabTitle=\"Locally from browser\">\n                        <p>\n                            Many operating systems and browsers require that certificates are\n                            imported as a password protected PKCS#12 keystore. You can let your browser generate a keystore for you. NOTE that this action will take a little while and the resulting keystore will\n                            NOT be compatible with most major operating systems and browsers.\n                        </p>\n                        <div class=\"container\">\n                            <button nbButton status=\"info\" class=\"w-100\" (click)=\"locallyFromBrowser()\">Issue a cert locally from browser</button>\n                        </div>\n                    </nb-tab>\n                    <nb-tab tabTitle=\"From server\">\n                        <p>\n                            MIR API server generate it for you? NOTE that it is strongly recommended\n                            to NOT let the server generate the key pair for you as in case of a breach of the\n                            MIR API server, a malicious third party can potentially take control over your identity\n                            by stealing your private key when it is generated. Also note that the possibility of\n                            getting server generated key pairs will be removed completely in the future, and that MCP\n                            ID service providers can already choose to disable it now.\n                        </p>\n                        <div class=\"container\">\n                            <button nbButton status=\"warning\" class=\"w-100\" (click)=\"fromServer()\">Issue a cert from server</button>\n                        </div>\n                    </nb-tab>\n                    <nb-tab tabTitle=\"Locally from scratch with OpenSSL\">\n                        <span>\n                            You can generate the key pair and a CSR from scratch by yourself - an example on how to\n                            do this can be found\n                            <a href=\"https://github.com/maritimeconnectivity/IdentityRegistry#certificate-issuing-by-certificate-signing-request\" target=\"_blank\">here</a>.\n                        <br>\n                        .. and you are free to click 'Close' button to proceed.\n                        </span>\n                    </nb-tab>\n                    </nb-tabset>\n                </nb-card>\n            </div>\n        <p>\n            We strongly recommend to read the instructions throughly as the security impact significantly differs from each other.\n        </p>\n        </div>\n        <div *ngIf=\"certificateBundle\" class=\"container\">\n            <button type=\"button\" nbButton status=\"success\" class=\"w-100\" (click)=\"zipAndDownload()\">Download certificate</button>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <div class=\"buttons-row\">\n\n            <button nbButton status=\"danger\" (click)=\"dismiss()\">Close</button>\n        </div>\n    </nb-card-footer>\n  </nb-card>\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input, OnInit} from '@angular/core';\nimport {NbDialogRef} from '@nebular/theme';\nimport {CertificateBundle} from '../../../backend-api/identity-registry';\nimport {TOKEN_DELIMITER} from '../../app.constants';\nimport {EntityType} from '../../models/menuType';\nimport {Convert} from 'pvtsutils';\n\nimport {stringToArrayBuffer} from 'pvutils';\n\nimport {BitString, BmpString, fromBER, OctetString, PrintableString} from 'asn1js';\nimport {CertificateService} from '../../certificate.service';\nimport {FileHelperService} from '../../file-helper.service';\nimport {NotifierService} from 'angular-notifier';\nimport {\n  Attribute,\n  AttributeTypeAndValue,\n  AuthenticatedSafe,\n  CertBag,\n  Certificate,\n  CertificationRequest,\n  getRandomValues,\n  PFX,\n  PKCS8ShroudedKeyBag,\n  PrivateKeyInfo,\n  SafeBag,\n  SafeContents\n} from 'pkijs';\n\nexport interface LabelValueModel {\n  label:string;\n  valueHtml:string;\n  linkFunction?:Function;\n  linkValue?:any;\n  linkClass?:string;\n}\n@Component({\n  selector: 'ngx-cert-issue-dialog',\n  templateUrl: './cert-issue-dialog.component.html',\n  styleUrls: ['./cert-issue-dialog.component.scss']\n})\nexport class CertIssueDialogComponent implements OnInit{\n\n  @Input() entityMrn: string;\n  @Input() entityTitle: string;\n  @Input() entityType: string;\n  @Input() orgMrn: string;\n  @Input() instanceVersion: string;\n  @Input() notifierService: NotifierService;\n  @Input() fileHelper: FileHelperService;\n  @Input() certificateService: CertificateService;\n  @Input() updateCertificate: () => void;\n\n  nameNoSpaces: string;\n  isLoading: boolean;\n  certificateBundle: CertificateBundle;\n  labelValues: Array<LabelValueModel>;\n  serverGeneratedKeys: boolean = false;\n\n  constructor(protected ref: NbDialogRef<CertIssueDialogComponent>) {}\n\n  ngOnInit(): void {\n    this.isLoading = false;\n    if (this.entityMrn) {\n      this.generateLabelValues();\n      this.nameNoSpaces = this.entityTitle.split(' ').join('_');\n    }\n  }\n\n  dismiss() {\n    this.ref.close();\n    this.updateCertificate();\n  }\n\n  locallyWManualKeystore(): void {\n    this.issueNewWithLocalKeys(false);\n  }\n\n  locallyFromBrowser(): void {\n    this.issueNewWithLocalKeys(true);\n  }\n\n  fromServer(): void {\n    this.issueNewWithServerKeys();\n  }\n\n  public zipAndDownload() {\n    this.fileHelper.downloadPemCertificate(this.certificateBundle, this.entityTitle, this.serverGeneratedKeys, this.notifierService);\n    this.notifierService.notify('success', 'Chosen certificate has downloaded');\n  }\n\n  public issueNewWithServerKeys() {\n    this.isLoading = true;\n    this.certificateService.issueNewCertificateFromMIR(this.entityType as EntityType, this.entityMrn, this.orgMrn, this.instanceVersion)\n        .subscribe((certificateBundle: CertificateBundle) => {\n          this.certificateBundle = certificateBundle;\n          this.serverGeneratedKeys = true;\n          this.isLoading = false;\n          this.notifierService.notify('success', 'You can now download the issued certificate');\n        }, err => {\n          this.isLoading = false;\n          if (err.status === 410) {\n            this.notifierService.notify('error',\n                'Generating certificates with server generated keys is not supported by ' +\n                'this ID provider');\n            return;\n          }\n          this.notifierService.notify('error',\n              'Error when trying to issue new certificate', err.error.message);\n        });\n  }\n\n  public issueNewWithLocalKeys(generatePkcs12: boolean) {\n    this.isLoading = true;\n    const ecKeyGenParams = {name: 'ECDSA', namedCurve: 'P-384', typedCurve: ''};\n    let keyResult = crypto.subtle.generateKey(ecKeyGenParams, true, ['sign', 'verify']);\n    keyResult.then(keyPair => {\n      let csr = new CertificationRequest();\n      csr.subject.typesAndValues.push(new AttributeTypeAndValue({\n        type: '2.5.4.3', // Common name\n        value: new PrintableString({ value: 'Test' })\n      }));\n      csr.subjectPublicKeyInfo.importKey(keyPair.publicKey).then(() => {\n        csr.sign(keyPair.privateKey, 'SHA-384').then(() => {\n          let csrBytes = csr.toSchema().toBER(false);\n          let pemCsr = this.toPem(csrBytes, 'CERTIFICATE REQUEST');\n          this.certificateService.issueNewCertificate(pemCsr, this.entityType as EntityType, this.entityMrn,\n            this.orgMrn, this.instanceVersion)\n              .subscribe((certificate) => {\n              },\n              err => {\n                // succeessful response but failed due to PEM fitting to json format\n                if(err.status === 201) {\n                  {\n                    const certificate = err.error.text;\n                    crypto.subtle.exportKey('pkcs8', keyPair.privateKey).then(rawPrivateKey => {\n                      crypto.subtle.exportKey('spki', keyPair.publicKey).then(rawPublicKey => {\n                        let privateKey = new PrivateKeyInfo({schema: fromBER(rawPrivateKey).result});\n\n                        if (generatePkcs12) {\n                          let rawCerts = this.convertCertChain(certificate);\n                          let certs = rawCerts.map(cert =>\n                              new Certificate({schema: fromBER(cert).result}));\n                          let password = this.generatePassword();\n\n                          this.generatePKCS12(privateKey, certs, password).then(result => {\n                            this.certificateBundle = {\n                              pemCertificate: {\n                                privateKey: this.toPem(rawPrivateKey, 'PRIVATE KEY'),\n                                publicKey: this.toPem(rawPublicKey, 'PUBLIC KEY'),\n                                certificate: certificate\n                              },\n                              pkcs12Keystore: result,\n                              keystorePassword: password\n                            };\n                            this.isLoading = false;\n                            this.notifierService.notify('success', 'You can now download the issued certificate');\n                          }, err => {\n                            this.isLoading = false;\n                            this.notifierService.notify('error',\n                                'PKCS#12 keystore could not be generated - ' + err.error.message);\n                          });\n                        } else {\n                          this.certificateBundle = {\n                            pemCertificate: {\n                              privateKey: this.toPem(rawPrivateKey, 'PRIVATE KEY'),\n                              publicKey: this.toPem(rawPublicKey, 'PUBLIC KEY'),\n                              certificate: certificate\n                            }\n                          };\n                          this.notifierService.notify('success', 'You can now download the issued certificate');\n                          this.isLoading = false;\n                        }\n                      }, err => {\n                        this.isLoading = false;\n                        this.notifierService.notify('error',\n                            'Public key could not be exported - ' + err.error.message);\n                      });\n                    }, err => {\n                      this.isLoading = false;\n                      this.notifierService.notify('error',\n                          'Private key could not be exported - ' + err.error.message);\n                    });\n                  }\n                } else {\n                  this.isLoading = false;\n                  this.notifierService.notify('error',\n                      'Error when trying to issue new certificate - ' + err.error.message);\n                }\n              }\n          );\n        });\n      });\n    }, err => {\n      this.isLoading = false;\n      this.notifierService.notify('error',\n          'Error when trying to issue new certificate - ' + err.error.message);\n    });\n  }\n\n  private generateLabelValues() {\n    this.labelValues = [];\n    this.labelValues.push({label: 'Name', valueHtml: this.entityTitle});\n    this.labelValues.push({label: 'MRN', valueHtml: this.entityMrn.split(TOKEN_DELIMITER)[0]});\n  }\n\n  private toPem(arrayBuffer: ArrayBuffer, type: string): string {\n    let b64 = Convert.ToBase64(arrayBuffer);\n    let finalString = '';\n    while (b64.length > 0) {\n      finalString += b64.substring(0, 64) + '\\n';\n      b64 = b64.substring(64);\n    }\n    return `-----BEGIN ${type}-----\\n${finalString}-----END ${type}-----\\n`;\n  }\n\n  private convertCertChain(pemCertChain: string): Array<ArrayBuffer> {\n    let certs = pemCertChain.split(/-----END CERTIFICATE-----/);\n    certs = certs.slice(0, certs.length - 1);\n    let tmp = certs.map(c => c.split(/-----BEGIN CERTIFICATE-----/)[1].replace(/\\n/mg, ''));\n    return tmp.map(c => Convert.FromBase64(c));\n  }\n\n  private generatePassword(): string {\n    let charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_^$#&!%';\n    let values = new Uint32Array(26);\n    crypto.getRandomValues(values);\n    let result = '';\n    for (const element of values) {\n      result += charset[element % charset.length];\n    }\n    return result;\n  }\n\n  private async generatePKCS12(privateKey: PrivateKeyInfo, certs: Array<Certificate>, password: string)\n    : Promise<ArrayBuffer> {\n    const keyLocalIDBuffer = new ArrayBuffer(4);\n    const keyLocalIDView = new Uint8Array(keyLocalIDBuffer);\n    getRandomValues(keyLocalIDView);\n\n    const certLocalIDBuffer = new ArrayBuffer(4);\n    const certLocalIDView = new Uint8Array(certLocalIDBuffer);\n    getRandomValues(certLocalIDView);\n\n    const caCertLocalIDBuffer = new ArrayBuffer(4);\n    const caCertLocalIDView = new Uint8Array(caCertLocalIDBuffer);\n    getRandomValues(caCertLocalIDView);\n\n    const bitArray = new ArrayBuffer(1);\n    const bitView = new Uint8Array(bitArray);\n\n    // tslint:disable-next-line:no-bitwise\n    bitView[0] |= 0x80;\n\n    const keyUsage = new BitString({\n      valueHex: bitArray,\n      unusedBits: 7\n    });\n\n    privateKey.attributes = [\n      new Attribute({\n        type: '2.5.29.15',\n        values: [\n          keyUsage\n        ]\n      })\n    ];\n\n    let certCn = '';\n    certs[0].subject.typesAndValues.forEach(t => {\n      if (t.type === '2.5.4.3') {\n        certCn = t.value.valueBlock.value;\n      }\n    });\n\n    let caCn = '';\n    certs[1].subject.typesAndValues.forEach(t => {\n      if (t.type === '2.5.4.3') {\n        caCn = t.value.valueBlock.value;\n      }\n    });\n\n    const pfx = new PFX({\n      parsedValue: {\n        integrityMode: 0,\n        authenticatedSafe: new AuthenticatedSafe({\n          parsedValue: {\n            safeContents: [\n              {\n                privacyMode: 0,\n                value: new SafeContents({\n                  safeBags: [\n                      new SafeBag({\n                        bagId: '1.2.840.113549.1.12.10.1.2',\n                        bagValue: new PKCS8ShroudedKeyBag({\n                          parsedValue: privateKey\n                        }),\n                        bagAttributes: [\n                            new Attribute({\n                              type: '1.2.840.113549.1.9.20', // friendlyName\n                              values: [\n                                  new BmpString({ value: 'PKCS8ShroudedKeyBag from PKIjs' })\n                              ]\n                            }),\n                            new Attribute({\n                              type: '1.2.840.113549.1.9.21', // localKeyID\n                              values: [\n                                  new OctetString({ valueHex: keyLocalIDBuffer })\n                              ]\n                            }),\n                            new Attribute({\n                              type: '1.3.6.1.4.1.311.17.1', // pkcs12KeyProviderNameAttr\n                              values: [\n                                  new BmpString({ value: 'MCP using https://pkijs.org/' })\n                              ]\n                            })\n                        ]\n                      })\n                  ]\n                })\n              },\n              {\n                privacyMode: 1,\n                value: new SafeContents({\n                  safeBags: [\n                      new SafeBag({\n                        bagId: '1.2.840.113549.1.12.10.1.3',\n                        bagValue: new CertBag({\n                          parsedValue: certs[0]\n                        }),\n                        bagAttributes: [\n                            new Attribute({\n                              type: '1.2.840.113549.1.9.20', // friendlyName\n                              values: [\n                                  new BmpString({ value: certCn })\n                              ]\n                            }),\n                            new Attribute({\n                              type: '1.2.840.113549.1.9.21', // localKeyID\n                              values: [\n                                  new OctetString({ valueHex: certLocalIDBuffer })\n                              ]\n                            }),\n                            new Attribute({\n                              type: '1.3.6.1.4.1.311.17.1', // pkcs12KeyProviderNameAttr\n                              values: [\n                                  new BmpString({ value: 'MCP using https://pkijs.org/' })\n                              ]\n                            })\n                        ]\n                      }),\n                      new SafeBag({\n                        bagId: '1.2.840.113549.1.12.10.1.3',\n                        bagValue: new CertBag({\n                          parsedValue: certs[1]\n                        }),\n                        bagAttributes: [\n                          new Attribute({\n                            type: '1.2.840.113549.1.9.20', // friendlyName\n                            values: [\n                              new BmpString({ value: caCn })\n                            ]\n                          }),\n                          new Attribute({\n                            type: '1.2.840.113549.1.9.21', // localKeyID\n                            values: [\n                              new OctetString({ valueHex: caCertLocalIDBuffer })\n                            ]\n                          }),\n                          new Attribute({\n                            type: '1.3.6.1.4.1.311.17.1', // pkcs12KeyProviderNameAttr\n                            values: [\n                              new BmpString({ value: 'MCP using https://pkijs.org/' })\n                            ]\n                          })\n                        ]\n                      })\n                  ]\n                })\n              }\n            ]\n          }\n        })\n      }\n    });\n\n    const passwordConverted = stringToArrayBuffer(password);\n\n    await pfx.parsedValue.authenticatedSafe.parsedValue.safeContents[0].value\n      .safeBags[0].bagValue.makeInternalValues({\n      password: passwordConverted,\n      contentEncryptionAlgorithm: {\n        name: 'AES-CBC', // OpenSSL can handle AES-CBC only\n        length: 128\n      },\n      hmacHashAlgorithm: 'SHA-1',\n      iterationCount: 100000\n    });\n\n    await pfx.parsedValue.authenticatedSafe.makeInternalValues({\n      safeContents: [\n        {\n          // Empty parameters for first SafeContent since \"No Privacy\" protection mode there\n        },\n        {\n          password: passwordConverted,\n          contentEncryptionAlgorithm: {\n            name: 'AES-CBC', // OpenSSL can handle AES-CBC only\n            length: 128\n          },\n          hmacHashAlgorithm: 'SHA-1',\n          iterationCount: 100000\n        }\n      ]\n    });\n\n    await pfx.makeInternalValues({\n      password: passwordConverted,\n      iterations: 100000,\n      pbkdf2HashAlgorithm: 'SHA-256',\n      hmacHashAlgorithm: 'SHA-256'\n    })\n\n    return pfx.toSchema().toBER(false);\n  }\n}\n","<nb-card class=\"modal-window\">\n    <nb-card-header>\n        Revoke certificate for {{entityTitle}} ({{entityMrn}})\n    </nb-card-header>\n    <nb-card-body [nbSpinner]=\"isLoading\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <span class=\"subtitle\">\n                        Revocation reason:\n                    </span><br>\n                    <nb-select fullWidth placeholder=\"Choose a reason\" (selectedChange)=\"onMenuItemSelected($event)\">\n                        <nb-option *ngFor=\"let reason of reasons\" [value]=\"reason.value\"> {{ reason.title }}</nb-option>\n                    </nb-select>\n                </div>\n\n                <div class=\"col\">\n                    <span class=\"subtitle\">\n                        Revocation date:\n                    </span><br>\n                    <input nbInput fullWidth\n                       placeholder=\"Choose a date\"\n                       [nbDatepicker]=\"formpicker\" >\n                    <nb-datepicker #formpicker (dateChange)=\"onDateChange($event)\"></nb-datepicker>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"headline\">\n                        {{description}} <span class=\"reference\" *ngIf=\"reference.length\"><a href=\"{{reference}}\" target=\"_blank\">(Reference)</a></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </nb-card-body>\n    <nb-card-footer>\n        <div class=\"buttons-row\">\n            <button type=\"button\" nbButton status=\"primary\" (click)=\"doRevoke()\">Revoke</button>\n            <button type=\"button\" nbButton status=\"danger\" (click)=\"dismiss()\">Cancel</button>\n        </div>\n    </nb-card-footer>\n  </nb-card>\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotifierService } from 'angular-notifier';\nimport { CertificateService } from '../../certificate.service';\nimport { RevokationReasonEnum } from '../../../backend-api/identity-registry/model/certificateRevocation';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\nimport { getReasonOptionFromRevocationReason } from '../../../util/certRevokeInfo';\nimport { EntityType } from '../../models/menuType';\nimport { DayCellComponent } from '../../calendar/day-cell/day-cell.component';\n\n@Component({\n  selector: 'ngx-cert-revoke-dialog',\n  templateUrl: './cert-revoke-dialog.component.html',\n  styleUrls: ['./cert-revoke-dialog.component.scss'],\n})\nexport class CertRevokeDialogComponent implements OnInit {\n\n  @Input() entityMrn: string;\n  @Input() entityTitle: string;\n  @Input() orgMrn: string;\n  @Input() certificateId: number;\n  @Input() instanceVersion: string;\n  @Input() entityType: string;\n  @Input() certificateService: CertificateService;\n  @Input() notifierService: NotifierService;\n  @Input() updateCertificate: () => void;\n  \n  isLoading: boolean;\n  date = new Date();\n  reasons = [];\n  description = '';\n  reference = '';\n  revokationReason: RevokationReasonEnum;\n  dayCellComponent = DayCellComponent;\n  \n  constructor(protected ref: NbDialogRef<CertRevokeDialogComponent>) {\n    this.isLoading = false;\n    for (const reason in RevokationReasonEnum) {\n      this.reasons.push(getReasonOptionFromRevocationReason(reason.toLocaleLowerCase() as RevokationReasonEnum));\n    }\n  }\n\n  doRevoke() {\n    this.isLoading = true;\n    const certificateRevocation = {\n      revokedAt: this.date.getTime().toString(),\n      revokationReason: this.revokationReason,\n    };\n\n    this.certificateService.revokeCertificate(this.entityType as EntityType, this.entityMrn, this.orgMrn, this.certificateId, certificateRevocation, this.instanceVersion)\n        .subscribe((res: any) => {\n          this.ref.close();\n          this.notifierService.notify('success',\n              'Certificate has been successfully revoked');\n          this.isLoading = false;\n          this.updateCertificate();\n        }, err => {\n          this.isLoading = false;\n          if (err.status === 410) {\n            this.notifierService.notify('error',\n                'Generating certificates with server generated keys is not supported by ' +\n                'this ID provider');\n            return;\n          }\n          this.notifierService.notify('error',\n              'Error when trying to issue new certificate', err.error.message);\n        });\n  }\n  ngOnInit(): void {\n  }\n\n  dismiss() {\n    this.ref.close();\n    this.updateCertificate();\n  }\n\n  onMenuItemSelected(event) {\n    const chosenReasonOption = getReasonOptionFromRevocationReason(event);\n    this.revokationReason = chosenReasonOption.value;\n    this.description = chosenReasonOption.description;\n    this.reference = chosenReasonOption.reference;\n  }\n\n  onDateChange(event) {\n    this.date = event;\n  }\n}\n","<ng2-smart-table [settings]=\"settings\" [source]=\"data\" (edit)=\"onEdit($event)\" (delete)=\"onDelete($event)\">\n</ng2-smart-table>\n<div *ngIf=\"!forRevoked\">\n    <div class=\"container\">\n        <button class=\"w-100\" status=\"primary\" type='button' nbButton (click)=\"openIssueDialog()\" *ngIf=\"hasPermissionInMIR\">Issue new certificate</button>    \n    </div>\n</div>","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Certificate } from '../../backend-api/identity-registry/model/certificate';\nimport { CertRevokeDialogComponent } from './cert-revoke-dialog/cert-revoke-dialog.component';\nimport { CertIssueDialogComponent } from './cert-issue-dialog/cert-issue-dialog.component';\nimport { ActiveCertificatesColumn, RevokedCertificatesColumn } from '../models/columnForCertificate';\nimport { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { LocalDataSource } from 'ng2-smart-table';\nimport { Certificate as MCPCertificate, CertificateBundle, PemCertificate } from '../../backend-api/identity-registry';\nimport { FileHelperService } from '../file-helper.service';\nimport { NotifierService } from 'angular-notifier';\nimport { NbDialogService } from '@nebular/theme';\nimport { CertificateService } from '../certificate.service';\n@Component({\n  selector: 'ngx-certificates',\n  templateUrl: './certificates.component.html',\n  styleUrls: ['./certificates.component.scss']\n})\n\nexport class CertificatesComponent implements OnInit {\n\n  settings = {\n    mode: 'external',\n    edit: {\n      editButtonContent: '<small><i class=\"fas fa-file-download fa-xs\"></i></small>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<small><i class=\"fas fa-ban fa-xs\"></i></small>',\n      confirmDelete: true,\n    },\n    hideSubHeader: true,\n    actions: {\n      position: 'right',\n    }\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  @Input() data: any[];\n  @Input() forRevoked: boolean;\n  @Input() entityMrn: string;\n  @Input() entityTitle: string;\n  @Input() entityType: string;\n  @Input() orgMrn: string;\n  @Input() instanceVersion: string;\n  @Input() hasPermissionInMIR: boolean;\n  @Output() onUpdate: EventEmitter<any> = new EventEmitter();\n\n  certificateTitle = \"Certificate for \";\n\n  constructor(\n    private notifierService: NotifierService, private fileHelper: FileHelperService,\n    private certificateService: CertificateService, private dialogService: NbDialogService) {\n  }\n\n  ngOnInit(): void {\n    if (this.forRevoked) {\n      this.settings['actions'] = undefined;\n      this.settings['columns'] = RevokedCertificatesColumn;\n    } else {\n      this.settings['columns'] = ActiveCertificatesColumn;\n    }\n  }\n\n  openIssueDialog() {\n    if (this.hasPermissionInMIR) {\n      this.dialogService.open(CertIssueDialogComponent, {\n        context: {\n          entityMrn: this.entityMrn,\n          entityTitle: this.entityTitle,\n          entityType: this.entityType,\n          orgMrn: this.orgMrn,\n          instanceVersion: this.instanceVersion,\n          notifierService: this.notifierService,\n          fileHelper: this.fileHelper,\n          certificateService: this.certificateService,\n          updateCertificate: () => this.onUpdate.emit(),\n        },\n        closeOnBackdropClick: false,\n        closeOnEsc: false,\n      });\n    } else {\n      this.notifierService.notify('error', 'You don\\'t have right permission');\n    }\n  }\n\n  openRevokeDialog(data: Certificate) {\n    if (this.hasPermissionInMIR) {\n      this.dialogService.open(CertRevokeDialogComponent, {\n        context: {\n          entityMrn: this.entityMrn,\n          entityTitle: this.entityTitle,\n          entityType: this.entityType,\n          orgMrn: this.orgMrn,\n          certificateId: data.serialNumber,\n          instanceVersion: this.instanceVersion,\n          notifierService: this.notifierService,\n          certificateService: this.certificateService,\n          updateCertificate: () => this.onUpdate.emit(),\n        },\n        closeOnBackdropClick: false,\n        closeOnEsc: false,\n      });\n    } else {\n      this.notifierService.notify('error', 'You don\\'t have right permission');\n    }\n  }\n\n  onEdit(event): void {\n    this.download(event.data);\n    this.notifierService.notify('success', 'Chosen certificate has downloaded');\n  }\n\n  onDelete(event): void {\n    this.openRevokeDialog(event.data);\n  }\n\n  download(certificate:MCPCertificate) {\n    let pemCertificate:PemCertificate = {certificate:certificate.certificate};\n    let certBundle:CertificateBundle = {pemCertificate:pemCertificate};\n    this.fileHelper.downloadPemCertificate(certBundle, \"Certificate for \" + this.entityTitle, true, this.notifierService);\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NotifierOptions } from \"angular-notifier\";\n\nexport const customNotifierOptions: NotifierOptions = {\n    position: {\n          horizontal: {\n              position: 'left',\n              distance: 12\n          },\n          vertical: {\n              position: 'bottom',\n              distance: 12,\n              gap: 10\n          }\n      },\n    theme: 'material',\n    behaviour: {\n      autoHide: 5000,\n      onClick: 'hide',\n      onMouseover: 'pauseAutoHide',\n      showDismissButton: true,\n      stacking: 4\n    },\n    animations: {\n      enabled: true,\n      show: {\n        preset: 'slide',\n        speed: 300,\n        easing: 'ease'\n      },\n      hide: {\n        preset: 'fade',\n        speed: 300,\n        easing: 'ease',\n        offset: 50\n      },\n      shift: {\n        speed: 300,\n        easing: 'ease'\n      },\n      overlap: 150\n    }\n  };","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { geojsonToWKT } from '@terraformer/wkt';\nimport { InputGeometryComponent } from './../input-geometry/input-geometry.component';\nimport { convertTime } from './../../util/timeConverter';\nimport { XmlEditDialogComponent } from './../xml-edit-dialog/xml-edit-dialog.component';\nimport { AuthService } from './../../auth/auth.service';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { formatData } from '../../util/dataFormatter';\nimport { MrnHelperService } from '../../util/mrn-helper.service';\nimport { ColumnForMenu } from '../models/columnForMenu';\nimport { EntityTypes, ResourceType, MenuTypeNames } from '../models/menuType';\nimport { NbDialogService, NbIconLibraries } from '@nebular/theme';\nimport { CertificateService } from '../certificate.service';\nimport { XmlDto } from '../../backend-api/service-registry';\nimport { hasAdminPermission } from '../../util/adminPermissionResolver';\n\n/**\n * a simple function filtering undefined\n * @param anyValue value to be validated\n * @returns boolean of whether undefined or not\n */\nconst notUndefined = (anyValue: any) => typeof anyValue !== 'undefined';\n\n/**\n * a component providing an input form according to ColumnFor*.json\n */\n@Component({\n  selector: 'ngx-editable-form',\n  templateUrl: './editable-form.component.html',\n  styleUrls: ['./editable-form.component.scss']\n})\nexport class EditableFormComponent implements OnInit {\n\n  /**\n   * menu type of an active page\n   */\n  @Input() menuType: ResourceType;\n  /**\n   * service instance version (only for service instance)\n   */\n  @Input() instanceVersion: string;\n  /**\n   * a boolean indicating the page is for creating entity\n   */\n  @Input() isForNew: boolean;\n  /**\n   * a boolean of MIR admin permission\n   */\n  @Input() canApproveOrg: boolean;\n  /**\n   * an mrn of chosen entity for this form\n   */\n  @Input() entityMrn: string;\n  /**\n   * an mrn of organization owning the chosen entity\n   */\n  @Input() orgMrn: string;\n  /**\n   * a human readable name of the chosen entity\n   */\n  @Input() title: string;\n  /**\n   * an icon name for the entity\n   */\n  @Input() iconName: string;\n  /**\n   * an indicator of API call status\n   */\n  @Input() isLoading: boolean;\n  /**\n   * an indicator of API call settlement\n   */\n  @Input() isLoaded: boolean;\n  /**\n   * an indicator of showing buttons at header\n   */\n  @Input() showButtons: boolean;\n  /**\n   * an indicator of having header\n   */\n  @Input() hasHeader: boolean;\n  /**\n   * an ID number converted from string for the cases when it is needed, like roles\n   */\n  @Input() numberId: number;\n  /**\n   * a short ID of organization for the sake of MRN\n   */\n  @Input() orgShortId: string;\n  /**\n   * a permission string for the form\n   */\n  @Input() defaultPermissions: string;\n\n  /**\n   * a cancel event callback\n   */\n  @Output() onCancel = new EventEmitter<any>();\n  /**\n   * a deletion event callback\n   */\n  @Output() onDelete = new EventEmitter<any>();\n  /**\n   * a submission event callback\n   */\n  @Output() onSubmit = new EventEmitter<any>();\n  /**\n   * an approval event callback\n   */\n  @Output() onApprove = new EventEmitter<any>();\n  /**\n   * an rejection event callback\n   */\n   @Output() onReject = new EventEmitter<any>();\n  /**\n   * a refresh event callback\n   */\n  @Output() onRefresh = new EventEmitter<any>();\n\n  /**\n   * a link to geometry map component, mainly for consistency\n   */\n  @ViewChild('map') geometryMap: InputGeometryComponent;\n  \n  isAdmin = false;\n  loadedData = {};\n  nonStringForm = {};\n  fetchList = ['mrn', 'version', 'orgMrn', 'adminMrn', 'instanceId', 'organizationId', 'implementsServiceDesign', 'email', 'orgEmail', 'adminEmail', 'instanceVersion'];\n  isEditing = false;\n  isEntity = false;\n  columnForMenu: any;\n  fieldVisibility = {};\n  formGroup: FormGroup;\n  shortId = '';\n  roleId = -1;\n  contextForAttributes = 'detail';\n  menuTypeName = '';\n  activeCertificates = [];\n  revokedCertificates = [];\n  isServiceInstance = false;\n  geometry = {};\n  \n  constructor(\n    private mrnHelperService: MrnHelperService,\n    private formBuilder: FormBuilder,\n    private iconsLibrary: NbIconLibraries,\n    private certificateService: CertificateService,\n    private dialogService: NbDialogService,\n    private authService: AuthService,\n  ) {\n    iconsLibrary.registerFontPack('fas', { packClass: 'fas', iconClassPrefix: 'fa' });\n  }\n\n  /**\n   * a function returning whether the resource type requires short ID or not\n   * @param resourceType type of resource\n   * @returns whether the resource type requires short ID or not\n   */\n  needShortId = (resourceType: string) => {\n    return this.getShortIdType(resourceType) !== undefined;\n  }\n\n  /**\n   * a function returning whether the resource type requires short ID or not\n   * @param resourceType type of resource\n   * @returns whether the resource type requires short ID or not\n   */\n  getShortIdType = (resourceType: string) => {\n    return this.columnForMenu[resourceType] ? this.columnForMenu[resourceType].shortIdType : undefined;\n  }\n\n  ngOnInit(): void {\n    this.setForm();\n\n    if (this.isForNew) {\n      this.isEditing = true;\n      this.setFormFieldVisibility();\n      Object.keys(this.formGroup.controls).forEach(field => {\n        if (this.needShortId(field)) {\n          this.formGroup.get(field).setValue(\n            this.mrnHelperService.mrnMask( this.getShortIdType(field), this.orgShortId) );\n          this.formGroup.get(field).disable();\n        }\n      });\n      if (this.defaultPermissions) {\n        this.formGroup.get('permissions').setValue(this.defaultPermissions);\n      }\n      if (this.menuType === ResourceType.Instance) {\n        this.formGroup.get('organizationId').setValue(AuthService.staticAuthInfo.orgMrn);\n        this.formGroup.get('organizationId').disable();\n        Object.entries(ColumnForMenu[this.menuType]).map(([key, value]) => \n        {\n          if ((value as any).type === 'stringArray') {\n            this.loadedData[key] = [];\n          }\n        });\n      }\n      // check admin permission\n      if (this.authService.authState.rolesLoaded) {\n        this.setIsAdmin();\n      } else {\n        this.authService.rolesLoaded.subscribe((mode)=> {\n          this.setIsAdmin();\n        });\n      }\n      this.settled(true);\n    }\n  }\n\n  setForm = () => {\n    // filtered with context\n    this.columnForMenu = {};\n    Object.entries(ColumnForMenu[this.menuType]).map(([k,v]) => \n      {if (Array.isArray(v['visibleFrom']) && // array type checking\n      v['visibleFrom'].includes(this.contextForAttributes) && // context filtering, either detail or list\n      (!this.isEditing || (this.isForNew && v['notShowOnEdit'] !== true)))\n        this.columnForMenu[k] = v;}\n      );\n\n    this.setFormWithValidators();\n  }\n\n  setFormFieldVisibility = (data?: any) => {\n    const menuWithOptions = [];\n    Object.entries(this.columnForMenu).forEach(([key, menu]) =>\n    {\n      this.fieldVisibility[key] = (menu as any).notShowOnEdit ? !(menu as any).notShowOnEdit : true;\n      if ((menu as any).options) {\n        menuWithOptions.push({key: key, value: (menu as any).options});\n      }\n    });\n    // matched data with preset activates corresponding field in menu\n    if (data) {\n      let hasChosen = false;\n      const keys = new Set();\n      menuWithOptions.forEach((e) =>\n        e.value.map(v => v.value === data[e.key] ? v.showField: undefined)\n          .filter(notUndefined).forEach(f => {\n            this.setFieldVisible(f.key, f.value);\n            keys.add(f.key);\n            hasChosen = true;\n          }));\n      // if none of options has chosen, the formGroup validation needs to be updated according to\n      if (!hasChosen) {\n        menuWithOptions.forEach((e) =>\n          e.value.forEach( k => {\n              if (k.showField && k.showField.key && !this.columnForMenu[e.key].required) {\n                this.formGroup.get(k.showField.key).disable();\n              }\n            }));\n      }\n    }\n  }\n\n  isFieldVisible(key: string) {\n    return this.fieldVisibility[key];\n  }\n\n  /**\n   * executing the onCancel callback function\n   */\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  /**\n   * executing the onDelete callback function\n   */\n  delete() {\n    this.onDelete.emit();\n  }\n\n  /**\n   * executing the onReject callback function\n   */\n  reject() {\n    this.onReject.emit();\n  }\n\n  /**\n   * executing the onApprove callback function\n   */\n  approve() {\n    this.onApprove.emit();\n  }\n\n  /**\n   * executing the onSubmit callback function\n   */\n  submit() {\n    this.onSubmit.emit(this.getFormValue());\n  }\n\n  /**\n   * executing the onCancel callback function\n   */\n  refreshData() {\n    this.onRefresh.emit();\n  }\n\n  cancelEdit() {\n    this.invertIsEditing();\n    this.refreshData();\n  }\n\n  fetchMissingValuesFromForm = () => {\n    const result = {};\n    for (const item of this.fetchList) {\n      if (this.formGroup.get(item)) {\n        result[item] = this.formGroup.get(item).value;\n      }\n    }\n    return result;\n  }\n\n  getFormValue = () => {\n    // TEMPORARY: just to make it work\n    if (this.menuType === ResourceType.Instance) {\n      if (this.loadedData['instanceAsDoc']) {\n        this.loadedData['instanceAsDocId'] = this.loadedData['instanceAsDoc']['id'];\n        this.loadedData['instanceAsDocName'] = this.loadedData['instanceAsDoc']['name'];\n      }\n\n      if (this.loadedData['instanceAsDocId']) {\n        delete this.loadedData['instanceAsDoc'];\n        Object.assign(this.loadedData, {instanceAsDoc: {id : this.loadedData['instanceAsDocId']}});\n      }\n    }\n\n    const filtered = this.filterUnselected(this.formGroup.value, Object.entries(this.columnForMenu).filter((e: any) => e[1].options));\n    return Object.assign(this.loadedData, filtered, this.fetchMissingValuesFromForm());\n  }\n\n  // filter unselected (empty) options from the form value\n  filterUnselected = (formValue: object, menuWithOptions: object[]): {} => {\n    const unfiltered = Object.assign({}, formValue);\n\n    Object.keys(unfiltered).forEach(field => {\n      if (menuWithOptions.filter(e => e[0] === field).length &&\n      (!unfiltered[field] || unfiltered[field].length === 0)) {\n        delete unfiltered[field];\n      }\n    });\n    return unfiltered;\n  }\n\n  setIsAdmin = () => {\n    if (this.menuType === ResourceType.Instance) {\n      const isOurServiceInstance =  this.isEditing ? AuthService.staticAuthInfo.orgMrn === this.formGroup.get('organizationId').value :\n      AuthService.staticAuthInfo.orgMrn === this.loadedData['organizationId'];\n      this.isAdmin = hasAdminPermission(this.menuType, this.authService, true, isOurServiceInstance);\n    } else {\n      this.isAdmin = hasAdminPermission(this.menuType, this.authService, true, false);\n    }\n  }\n\n  isForTime = (fieldName: string) => {\n    return fieldName.endsWith('At') || fieldName === 'end' || fieldName === 'start';\n  }\n\n  convertTimeString = (timeString: string) => {\n    return convertTime(timeString);\n  }\n\n  invertIsEditing = () => {\n    this.isEditing = !this.isEditing;\n    if (!this.isEditing){\n      this.formGroup.reset();\n      this.adjustData(this.loadedData);\n    }\n    if (this.geometryMap && this.geometryMap.applyEditingToMap) {\n      this.geometryMap.applyEditingToMap(this.isEditing);\n    }\n  }\n\n  settled = (value: boolean) => {\n    this.isLoaded = value;\n    this.isLoading = false;\n  }\n\n  updateForNewVer() {\n    this.formGroup.get('instanceVersion').enable();\n    this.isForNew = true;\n  }\n\n  adjustTitle = (menuType: string, title: string) => {\n    this.menuType = menuType as ResourceType;\n    this.menuTypeName = MenuTypeNames[this.menuType];\n    this.isEntity = EntityTypes.includes(this.menuType);\n    this.title = title;\n    this.isServiceInstance = this.menuType === ResourceType.Instance || this.menuType === ResourceType.InstanceOfOrg;\n  }\n\n  addShortIdToMrn = (field: string, shortId: string) => {\n    const mrn = this.mrnHelperService.mrnMask( this.getShortIdType(field), this.orgShortId) + shortId;\n    this.formGroup.get(field).setValue(mrn);\n    if (field === 'orgMrn') {\n      this.orgShortId = !this.orgShortId ? this.formGroup.get('orgMrn').value.split(\":\").pop():\n        this.orgShortId;\n      if (this.formGroup.get('adminMrn')) {\n        const adminShortId = this.formGroup.get('adminMrn').value.split(\":\").pop();\n        this.formGroup.get('adminMrn').setValue(this.mrnHelperService.mrnMaskForUserOfOrg(this.orgShortId) + adminShortId);\n      }\n    }\n  }\n\n  validateMrn = (mrn: string) => {\n    if (!mrn || mrn.includes('::') || mrn.endsWith(':')) {\n      return false;\n    }\n    else if (mrn.length === 0) {\n      return false;\n    }\n    if (mrn.includes(':org:')) {\n      return new RegExp(this.mrnHelperService.mrnMcpIdpRegexForOrg()).test(mrn);\n    } else {\n      return new RegExp(this.mrnHelperService.mrnMcpIdpRegex(\n        this.orgShortId ? this.orgShortId :\n        this.menuType === ResourceType.NewOrganization ? this.getOrgShortId() : undefined)).test(mrn);\n    }\n  }\n\n  getOrgShortId = (): string => {\n    return this.formGroup.get('orgMrn') ? this.formGroup.get('orgMrn').value.split(':').pop() :\n      this.orgMrn.split(':').pop();\n  }\n\n  getValidators = (key: string, value: any) => {\n    const validators = [];\n    if (value.required) {\n      validators.push(Validators.required);\n    }\n    if (key.includes('email') || key.includes('Email')) {\n      validators.push(Validators.email);\n    }\n    if (key !== 'mrnSubsidiary' && (key.includes('mrn') || key.includes('Mrn'))) {\n      if (this.menuType === ResourceType.Organization || this.menuType === ResourceType.OrgCandidate) {\n        validators.push(Validators.pattern(this.mrnHelperService.mrnMcpIdpRegexForOrg()));\n      } else {\n        validators.push(Validators.pattern(this.mrnHelperService.mrnMcpIdpRegex(this.orgShortId)));\n      }\n    }\n    return validators;\n  }\n\n  isThisForMCPMRN(menyType: string, fieldName: string) {\n    return menyType !== 'role' && fieldName === 'mrn';\n  }\n\n  adjustData = (rawData: object) => {\n    const data = formatData(rawData);\n    this.loadedData = data;\n    Object.entries(this.columnForMenu).forEach(([key, menu]) => {\n      if ((menu as any).immutable === true) {\n        this.formGroup.get(key).disable();\n      }\n      if (this.isThisForMCPMRN(this.menuType, key)) {\n        this.shortId = this.mrnHelperService.shortIdFromMrn(data[key]);\n        const mrn = this.mrnHelperService.mrnMask(this.menuType, this.orgShortId) + this.shortId;\n        this.formGroup.get(key).setValue(mrn);\n      } else {\n        if ((menu as any).type === 'string') {\n          this.formGroup.get(key).setValue(data[key]);\n        }\n      }\n    });\n\n    const hasCertificate = data[\"certificates\"] && data[\"certificates\"].length > 0;\n    if (hasCertificate) {\n      const splited = this.certificateService.splitByRevokeStatus(data[\"certificates\"]);\n      this.activeCertificates = splited.activeCertificates;\n      this.revokedCertificates = splited.revokedCertificates;\n    }\n\n    this.geometry = data[\"geometry\"];\n    // refresh the geometry map when the data from both sides are not coincidence\n    if (this.geometryMap && (this.geometry !== this.geometryMap.geometry)) {\n      this.geometryMap.loadGeometry(this.geometry);\n    }\n\n    this.setFormFieldVisibility(data);\n    // check admin permission\n    if (this.authService.authState.rolesLoaded) {\n      this.setIsAdmin();\n    } else {\n      this.authService.rolesLoaded.subscribe((mode)=> {\n        this.setIsAdmin();\n      });\n    }\n  }\n\n  setFormWithValidators = () => {\n    const group = {};\n    Object.entries(this.columnForMenu).forEach(([key, menu]) =>\n    {\n      if ((menu as any).type === 'string') {\n        group[key] = [null, this.getValidators(key, menu)];\n      }\n    });\n    this.formGroup = this.formBuilder.group(group);\n  }\n\n  onMenuItemSelected = (event: any) => {\n    if (event.type === 'string') {\n      this.formGroup.get(event.key).setValue(event.value);\n      this.updateFieldVisibility(event.key, event.value);\n    }\n  }\n\n  updateFieldVisibility = (key: string, value: string) => {\n    const fieldInfo = this.columnForMenu[key].options?.filter(v => v.value === value);\n    if (fieldInfo[0].showField) {\n      this.setFieldVisible(fieldInfo[0].showField.key, fieldInfo[0].showField.value);\n    }\n  }\n\n  setFieldVisible = (key: string, value: any) => {\n    if (value) {\n      this.fieldVisibility[key] = value;\n      this.formGroup.get(key).enable();\n    } else {\n      this.loadedData[key] = undefined; // delete existing value\n      this.fieldVisibility[key] = value;\n      this.formGroup.get(key).disable();\n    }\n  }\n\n  onDataChanged = (event: any) => {\n    if (event['data'] && event['fieldName']) {\n      //this.loadedData[event['fieldName']] = event['data'];\n      this.loadedData = Object.assign(this.loadedData, {[event['fieldName']]: event['data']});\n    }\n  }\n\n  onLinkChanged = (event: any) => {\n    if (event.fieldName && event.value) {\n      this.loadedData[event.fieldName] = event.value;\n    }\n  }\n\n  onUpdateGeometry = (event: any) => {\n    if (event['data'] && event['fieldName']) {\n      this.loadedData = { ...this.loadedData, ...{[event['fieldName']]: event['data']}};\n      console.log(geojsonToWKT(event['data']));\n    }\n  }\n\n  openXmlDialog = (xml: any, isEditing: boolean = false) => {\n    this.dialogService.open(XmlEditDialogComponent, {\n      context: {\n        xml: xml,\n        isEditing: isEditing,\n        onUpdate: (xml: XmlDto) => this.updateXml(xml),\n      },\n    });\n  }\n\n  updateXml = (xml: XmlDto) => {\n    this.loadedData['instanceAsXml'] = xml;\n  }\n\n  onFileDeleted = (event: any) => {\n    if (event.fieldName === 'instanceAsDoc') {\n      this.loadedData['instanceAsDoc'] = undefined;\n    }\n  }\n\n  sortColumnForMenu = (a, b) => {\n    return a.order > b.order ? -1 : 1;\n  }\n}\n","<nb-card>\n  <nb-card-header *ngIf=\"isLoaded && hasHeader\">\n    <div class=\"row\">\n      <div class=\"col my-auto\">\n        <span class=\"icon_header\"><nb-icon [icon]=\"iconName\" pack=\"fas\"></nb-icon></span>{{title}}\n      </div>\n      <div class=\"col-md-auto\" *ngIf=\"showButtons\">\n        <div *ngIf=\"isAdmin\">\n          <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"isForNew\" (click)=\"submit(formGroup)\" [disabled]=\"!formGroup.valid\">Submit</button>\n          <button type=\"button\" nbButton status=\"danger\" *ngIf=\"isForNew\" (click)=\"cancel()\">Cancel</button>\n          <button type=\"button\" nbButton status=\"primary\" *ngIf=\"!isEditing && !isForNew\" (click)=\"invertIsEditing()\" >Edit</button>\n          <button type=\"button\" nbButton status=\"danger\" *ngIf=\"!isEditing && !isForNew\" (click)=\"delete()\" >Delete</button>\n          <button type=\"button\" nbButton status=\"success\" *ngIf=\"isEditing && isServiceInstance\" (click)=\"openXmlDialog(loadedData['instanceAsXml'], true)\" >Edit By XML</button>\n          <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"isEditing && !isForNew && menuType === 'service'\" (click)=\"updateForNewVer()\" [disabled]=\"!formGroup.valid\">New version</button>\n          <button type=\"submit\" nbButton status=\"primary\" *ngIf=\"isEditing && !isForNew\" (click)=\"submit()\" [disabled]=\"!formGroup.valid\">Update</button>\n          <button type=\"button\" nbButton status=\"danger\" *ngIf=\"isEditing && !isForNew\" (click)=\"cancelEdit()\" >Cancel</button>\n        </div>\n        <div *ngIf=\"canApproveOrg\">\n          <button type=\"button\" nbButton status=\"primary\" (click)=\"approve()\">Approve</button>\n          <button type=\"button\" nbButton status=\"danger\" (click)=\"reject()\">Reject</button>\n        </div>\n      </div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body [nbSpinner]=\"isLoading\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n    <div class=\"row\" *ngIf=\"!isLoaded\">\n      <div class=\"col my-auto\">\n        <h1>Failed to load</h1>\n      </div>\n    </div>\n    <form [formGroup]=\"formGroup\" *ngIf=\"isLoaded\">\n      <div *ngFor=\"let menu of columnForMenu | keyvalue:sortColumnForMenu\">\n        <div class=\"form-group row\" *ngIf=\"isForNew && menuType !== 'role' && needShortId(menu.key)\">\n          <label class=\"label col-sm-3 col-form-label\">Short ID for {{menu.value.title}}</label>\n          <div class=\"col-sm-9 my-auto\">\n            <input type=\"text\" nbInput fullWidth id=\"input_shortId_{{menu.key}}\" class=\"form-control\" status=\"{{menu.value.required ? validateMrn(formGroup.get(menu.key).value) ? 'success' : 'danger' : ''}}\" required=\"menu.value.required === true\" (input)=\"addShortIdToMrn(menu.key, $event.target.value)\" value=\"{{shortId}}\">\n          </div>\n        </div>\n        <div class=\"form-group row\" *ngIf=\"!isEditing || (isEditing && isFieldVisible(menu.key))\">\n          <label for=\"input{{menu.key}}\" class=\"label col-sm-3 col-form-label\" nbPopover=\"{{menu.value.description}}\" nbPopoverTrigger=\"hint\" nbPopoverPlacement=\"top\">{{menu.value.title}}</label>\n          <div class=\"col-sm-9 my-auto\">\n            <ngx-input-button-list *ngIf=\"menu.value.type === 'stringArray'\" [items]=\"loadedData[menu.key]\" [isEditing]=\"isEditing\"\n              [options]=\"menu.value.options\" [fieldName]=\"menu.key\" [placeholder]=\"menu.value.placeholder\" [required]=\"menu.value.required\" (onUpdate)=\"onDataChanged($event)\"></ngx-input-button-list>\n            <ngx-input-image *ngIf=\"!isForNew && menu.value.type === 'image'\" [isEditing]=\"isEditing\" [orgMrn]=\"orgMrn\" [entityMrn]=\"entityMrn\"\n              [menuType]=\"menuType\" [allowedExtensions]=\"menu.value.allowedExtensions\"></ngx-input-image>\n            <ngx-input-mcp-entity *ngIf=\"menu.value.type === 'vessel'\" [entity]=\"loadedData[menu.key]\" [isEditing]=\"isEditing\" [orgMrn]=\"orgMrn\"\n            [menuType]=\"'vessel'\" [required]=\"menu.value.required\" (onUpdate)=\"onLinkChanged($event)\"></ngx-input-mcp-entity>\n            <ngx-input-file-list *ngIf=\"menu.value.type === 'fileArray'\" [fieldName]=\"menu.key\" [docIds]=\"loadedData[menu.key]\" [isEditing]=\"isEditing\" [instanceId]=\"numberId\"\n              [fieldName]=\"menu.key\" [placeholder]=\"menu.value.placeholder\" [required]=\"menu.value.required\" (onUpdate)=\"onDataChanged($event)\"\n              (onDelete)=\"onFileDeleted($event)\"></ngx-input-file-list>\n            <ngx-input-file-list *ngIf=\"menu.value.type === 'file'\" [fieldName]=\"menu.key\" [file]=\"loadedData[menu.key]\" [isEditing]=\"isEditing\" [instanceId]=\"numberId\"\n              [fieldName]=\"menu.key\" [placeholder]=\"menu.value.placeholder\" [required]=\"menu.value.required\" (onUpdate)=\"onDataChanged($event)\"\n              (onDelete)=\"onFileDeleted($event)\"></ngx-input-file-list>\n            <div *ngIf=\"!isEditing\">\n              <span *ngIf=\"menu.value.type === 'string'\" id=\"keyword.name\">{{ menuType !== 'instance' && isForTime(menu.key) ? convertTimeString(formGroup.get(menu.key).value) : formGroup.get(menu.key).value }}</span>\n              <button type='button' nbButton fullWidth (click)=\"openXmlDialog(loadedData[menu.key], isEditing)\" *ngIf=\"menu.value.type === 'xml'\">Read XML</button>\n            </div>\n            <div *ngIf=\"isEditing\" >\n              <input *ngIf=\"menu.value.type === 'string' && !menu.value.options\" type=\"text\" nbInput fullWidth id=\"input_{{menu.key}}\" class=\"form-control\"\n              status=\"{{formGroup.get(menu.key).value ? formGroup.get(menu.key).valid ? 'success' : 'danger' : menu.value.required? 'danger' : ''}}\"\n              formControlName=\"{{menu.key}}\"\n              placeholder=\"{{menu.value.placeholder !== undefined ? menu.value.placeholder : ''}}\"\n              required=\"{{menu.value.required === true}}\">\n              <input *ngIf=\"menu.value.type === 'string' && menu.value.options\" type=\"text\" nbInput fullWidth id=\"input_{{menu.key}}\" class=\"form-control\"\n              status=\"{{formGroup.get(menu.key).value ? formGroup.get(menu.key).valid ? 'success' : 'danger' : menu.value.required? 'danger' : ''}}\"\n              formControlName=\"{{menu.key}}\" hidden\n              required=\"{{menu.value.required === true}}\"> \n              <nb-select *ngIf=\"menu.value.type === 'string' && menu.value.options\" type=\"string\" (selectedChange)=\"onMenuItemSelected({key: menu.key, value: $event, type: menu.value.type})\"\n              [(selected)]=\"formGroup.get(menu.key).value\"\n              status=\"{{formGroup.get(menu.key).value ? formGroup.get(menu.key).valid ? 'success' : 'danger' : menu.value.required? 'danger' : ''}}\"\n              fullWidth required=\"menu.value.required === true\">\n                <nb-option *ngFor=\"let option of menu.value.options\" value=\"{{option.value}}\">{{option.title}}</nb-option>\n              </nb-select>\n              <button type='button' nbButton fullWidth (click)=\"openXmlDialog(formGroup.get(menu.key).value, isEditing)\" *ngIf=\"menu.value.type === 'xml'\">Edit XML</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\" *ngIf=\"isEntity && !isForNew && !isEditing\" >\n        <label for=\"inputActiveCert\" class=\"label col-sm-3 col-form-label\">Active certificates</label>\n        <div class=\"col\">\n          <ngx-certificates [data]=\"activeCertificates\" [forRevoked]=\"false\" [entityType]=\"menuType\" [entityTitle]=\"title\" [entityMrn]=\"entityMrn\" [orgMrn]=\"orgMrn\" [instanceVersion]=\"instanceVersion\" [hasPermissionInMIR]=\"isAdmin\" (onUpdate)=\"refreshData()\"></ngx-certificates>\n        </div>\n      </div>\n      <div class=\"form-group row\" *ngIf=\"isEntity && !isForNew && !isEditing\" >\n        <label for=\"inputRevokedCert\" class=\"label col-sm-3 col-form-label\">Revoked certificates</label>\n        <div class=\"col\">\n          <ngx-certificates [data]=\"revokedCertificates\" [forRevoked]=\"true\" (onUpdate)=\"refreshData()\"></ngx-certificates>\n        </div>\n      </div>\n      <div class=\"form-group row\" *ngIf=\"isServiceInstance\" >\n        <label for=\"inputRevokedCert\" class=\"label col-sm-3 col-form-label\">Coverage</label>\n      </div>\n      <div class=\"form-group row\" *ngIf=\"isServiceInstance\" >\n        <div class=\"col\">\n          <ngx-input-geometry #map [isEditing]=\"isEditing\" [geometry]=\"geometry\" (onUpdate)=\"onUpdateGeometry($event)\"></ngx-input-geometry>\n        </div>\n      </div>\n  </form>    \n  </nb-card-body>\n</nb-card>","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocDto } from '../backend-api/service-registry';\nimport { XmlDto } from '../backend-api/service-registry';\nimport { Injectable } from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport * as fileSaver from \"file-saver\";\nimport * as JSZip from 'jszip';\nimport { CertificateBundle } from '../backend-api/identity-registry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileHelperService {\n  constructor() {\n\n  }\n\n  public downloadPemCertificate(certificateBundle: CertificateBundle, entityName: string,\n                                serverGeneratedKeys: boolean, notifierService: NotifierService) {\n    try {\n      let nameNoSpaces = entityName.split(' ').join('_');\n      if (serverGeneratedKeys) {\n        certificateBundle.pemCertificate.certificate = this.replaceNewLines(certificateBundle.pemCertificate.certificate);\n        if (certificateBundle.pemCertificate.publicKey)\n          certificateBundle.pemCertificate.publicKey = this.replaceNewLines(certificateBundle.pemCertificate.publicKey);\n        if (certificateBundle.pemCertificate.privateKey)\n          certificateBundle.pemCertificate.privateKey = this.replaceNewLines(certificateBundle.pemCertificate.privateKey);\n        if (certificateBundle.pkcs12Keystore && typeof(certificateBundle.pkcs12Keystore) === 'string')\n          certificateBundle.pkcs12Keystore = this.convertBase64ToByteArray(certificateBundle.pkcs12Keystore) as ArrayBuffer;\n      }\n      let zip = new JSZip();\n      zip.file(\"Certificate_\" + nameNoSpaces + \".pem\", certificateBundle.pemCertificate.certificate);\n      if (certificateBundle.pemCertificate.privateKey) {\n        zip.file(\"PrivateKey_\" + nameNoSpaces + \".pem\", certificateBundle.pemCertificate.privateKey);\n      }\n      if (certificateBundle.pemCertificate.publicKey) {\n        zip.file(\"PublicKey_\" + nameNoSpaces + \".pem\", certificateBundle.pemCertificate.publicKey);\n      }\n      if (certificateBundle.keystorePassword) {\n        zip.file(\"KeystorePassword.txt\", this.replaceNewLines(certificateBundle.keystorePassword));\n      }\n      if (certificateBundle.jksKeystore) {\n        let jksByteArray = this.convertBase64ToByteArray(certificateBundle.jksKeystore);\n        let blob = new Blob([jksByteArray]);\n        zip.file(\"Keystore_\" + nameNoSpaces + \".jks\", blob);\n      }\n      if (certificateBundle.pkcs12Keystore) {\n        let p12ByteArray = certificateBundle.pkcs12Keystore;\n        let blob = new Blob([p12ByteArray]);\n        zip.file(\"Keystore_\" + nameNoSpaces + \".p12\", blob);\n      }\n      zip.generateAsync({type:\"blob\"}).then(function (content) {\n        fileSaver.saveAs(content, \"Certificate_\" + nameNoSpaces + \".zip\");\n      });\n    } catch ( error ) {\n      notifierService.notify('error', 'Error when trying to download file - ' + error);\n    }\n  }\n\n  public downloadXml(xmlFile:XmlDto, notifierService: NotifierService):void {\n    if (!xmlFile) {\n      notifierService.notify('error', 'No file to download');\n      return;\n    }\n    let fileContent = xmlFile.content;\n\n    let fileName = xmlFile.name;\n    let fileType = xmlFile.contentContentType;\n    this.downloadFile(fileContent, fileType, fileName, notifierService);\n  }\n\n  public downloadDoc(docFile:DocDto, notifierService: NotifierService):void {\n    if (!docFile) {\n      notifierService.notify('error', 'No file to download');\n      return;\n    }\n    // TODO: I belive it is wrong that \"content\" is an array of strings. Please be wary of this may change in the future\n    if (docFile.filecontent.length > 1 && docFile.filecontent.length < 10) {\n      notifierService.notify('error', 'File from Service Registry is in the wrong format. ' + docFile.name);\n      return;\n    }\n    let fileContent = docFile.filecontent.toString();\n\n    let fileName = docFile.name;\n    let fileType = docFile.filecontentContentType;\n    this.downloadBase64File(fileContent, fileType, fileName, notifierService);\n  }\n\n  public downloadBase64File(base64Content:string, fileType:string, fileName:string, notifierService: NotifierService):void {\n    try {\n      let byteArray = this.convertBase64ToByteArray(base64Content);\n\n      let blob = new Blob([byteArray], {type: fileType});\n      fileSaver.saveAs(blob, fileName);\n    } catch ( error ) {\n      notifierService.notify('error', 'Error when trying to download file - ' + error);\n    }\n  }\n\n  public downloadFile(content:string, fileType:string, fileName:string, notifierService: NotifierService):void {\n    try {\n      let blob = new Blob([content], {type: fileType});\n      fileSaver.saveAs(blob, fileName);\n    } catch ( error ) {\n      notifierService.notify('error', 'Error when trying to download file - ' + error);\n    }\n  }\n\n  private convertBase64ToByteArray(base64Content: string): Uint8Array {\n    let byteCharacters  = window.atob(base64Content);\n    let byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    return new Uint8Array(byteNumbers);\n  }\n\n  private replaceNewLines(stringToReplace: string) {\n    let replaceString = \"\\n\";\n    if (navigator.appVersion.indexOf(\"Win\")!=-1){\n      replaceString = \"\\r\\n\";\n    }\n    return (!stringToReplace) ? '' : stringToReplace.replace(/(\\\\n)/gm, replaceString);\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { NbIconLibraries } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-input-button-list',\n  templateUrl: './input-button-list.component.html',\n  styleUrls: ['./input-button-list.component.scss']\n})\nexport class InputButtonListComponent implements OnInit {\n  @Input() items: string[];\n  @Input() isEditing: boolean;\n  @Input() fieldName: string;\n  @Input() placeholder: string;\n  @Input() required: boolean;\n  @Input() options: object[];\n\n  @Output() onUpdate = new EventEmitter<any>();\n\n  @ViewChild('stringInput') stringInput;\n  @ViewChild('selectInput') selectInput;\n\n  constructor(private iconsLibrary: NbIconLibraries) { \n    iconsLibrary.registerFontPack('fa', { packClass: 'fa', iconClassPrefix: 'fa' });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onAddItem = (item: any) => {\n    if (item && item.length > 0 && this.items.indexOf(item) < 0) {\n      this.items.push(item);\n      this.cleanInput();\n    }\n    this.update();\n  }\n\n  cleanInput = () => {\n    if (this.selectInput) {\n      this.selectInput.reset();\n    }\n    if (this.stringInput) {\n      this.stringInput.nativeElement.value = '';\n    }\n  }\n\n  forceFocusIn = () => {\n    if (this.selectInput) {\n      this.selectInput.nativeElement.focus();\n    }\n    if (this.stringInput) {\n      this.stringInput.nativeElement.focus();\n    }\n  }\n\n  onRemoveItem = (event: any) => {\n    if (event.pointerType === 'mouse' && event.target.value) {\n      const index = this.items.indexOf(event.target.value, 0);\n      if (index > -1) {\n        this.items.splice(index, 1);\n      }\n      this.update();\n    }\n  }\n\n  onFocusOut = (event: any) => {\n    if (event.target.value.length > 0 && event.relatedTarget) {\n      alert('Please press Enter key to register the value or erase it');\n      this.forceFocusIn();\n    }\n  }\n\n  update = () => {\n    this.onUpdate.emit({ data: this.items, fieldName: this.fieldName });\n  }\n}\n","<div>\n    <div class=\"button_container pb-2\">\n        <div *ngFor=\"let item of items\" class=\"bg-primary align-baseline rounded p-1\">\n            <span class=\"text-white\">{{item}}</span>\n            <button *ngIf=\"isEditing\" [size]=\"tiny\" value=\"{{item}}\" class=\"rounded-circle bg-primary text-white border-0\" (click)=\"onRemoveItem($event)\" nbButton>X</button>\n        </div>\n        <div *ngIf=\"isEditing && items && items.length === 0\" class=\"bg-light align-baseline p-1 w-100 text-center\">\n            <span class=\"text-secondary font-weight-bold\">No item</span>\n        </div>\n    </div>\n    <input *ngIf=\"isEditing && !options\" type=\"text\" nbInput fullWidth id=\"input_{{fieldName}}\" class=\"form-control\"\n        placeholder=\"{{placeholder !== undefined ? placeholder : ''}}\" (keyup.enter)=\"onAddItem($event.target.value)\" (focusout)=\"onFocusOut($event)\"\n        required=\"{{required === true}}\" #stringInput>\n    <nb-select *ngIf=\"isEditing && options\" (selectedChange)=\"onAddItem($event)\"\n    fullWidth required=\"required === true\" #selectInput>\n        <nb-option *ngFor=\"let option of options\" value=\"{{option.value}}\">{{option.title}}</nb-option>\n    </nb-select>\n</div>","<div>\n    <div class=\"button_container pb-2\">\n        <div *ngFor=\"let item of docDtoList\" class=\"bg-info align-baseline rounded p-1 w-100\" value=\"{{item.id}}\" (click)=\"downloadFile($event)\">\n            <span class=\"text-white\">{{item.name}}</span>\n            <button *ngIf=\"isEditing\" [size]=\"tiny\" value=\"{{item.id}}\" class=\"rounded-circle bg-info text-white border-0\" (click)=\"deleteFile($event)\" nbButton>X</button>\n        </div>\n        <div *ngIf=\"file\" class=\"bg-info align-baseline rounded p-1 w-100\">\n            <div class=\"d-flex\">\n                <div class=\"mr-auto p-2\" value=\"{{file.id}}\" (click)=\"downloadFile($event)\"><span class=\"text-white\">{{file.name}}</span></div>\n                <div class=\"p-2\" ><button *ngIf=\"isEditing\" [size]=\"tiny\" value=\"{{file.id}}\" class=\"rounded-circle bg-info text-white border-0\" (click)=\"deleteFile($event)\" nbButton>X</button></div>\n            </div>            \n        </div>\n        <div *ngIf=\"docDtoList.length === 0 && !file\" class=\"bg-light align-baseline p-1 w-100 text-center\">\n            <span class=\"text-secondary font-weight-bold\">No file</span>\n        </div>\n    </div>\n    <input *ngIf=\"isEditing\" type=\"file\" (change)=\"changeFile($event)\"/>\n</div>","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocDto } from './../../backend-api/service-registry/model/docDto';\nimport { DocControllerService } from './../../backend-api/service-registry/api/docController.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NbIconLibraries } from '@nebular/theme';\nimport { NotifierService } from 'angular-notifier';\n\n@Component({\n  selector: 'ngx-input-file-list',\n  templateUrl: './input-file-list.component.html',\n  styleUrls: ['./input-file-list.component.scss']\n})\nexport class InputFileListComponent implements OnInit {\n  @Input() docIds: number[];\n  @Input() file: object;\n  @Input() isEditing: boolean;\n  @Input() fieldName: string;\n  @Input() placeholder: string;\n  @Input() required: boolean;\n  @Input() options: object[];\n  @Input() instanceId: number;\n\n  @Output() onUpdate = new EventEmitter<any>();\n  @Output() onDelete = new EventEmitter<any>();\n\n  isLoading = false;\n  docDtoList: DocDto[] = [];\n\n  constructor(\n    private iconsLibrary: NbIconLibraries,\n    private docControllerService: DocControllerService,\n    private notifierService: NotifierService,\n    ) {\n    iconsLibrary.registerFontPack('fa', { packClass: 'fa', iconClassPrefix: 'fa' });\n  }\n\n  ngOnInit(): void {\n    this.loadDocs();\n  }\n\n  downloadFile = (event: any) => {\n    if (this.file && this.file['filecontent']) {\n      const data = this.file['filecontent'];\n      const binary = atob(data.replace(/\\s/g, ''));\n      const len = binary.length;\n      const buffer = new ArrayBuffer(len);\n      const view = new Uint8Array(buffer);\n      for (var i = 0; i < len; i++) {\n          view[i] = binary.charCodeAt(i);\n      }\n      const blob = new Blob([view], { type: this.file['filecontentContentType'] });\n      const url = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.href = url;\n      anchor.setAttribute(\"download\", this.file['name']);\n      anchor.click();\n    }\n  }\n\n  loadDocs = () => {\n    if (this.docIds && this.docIds.length > 0) {\n      for (const docNumber of this.docIds) {\n        this.docControllerService.getDoc(docNumber).subscribe(\n          (docDto: DocDto) => {\n            this.docDtoList.push(docDto);\n          },\n          err => {\n\n          }\n        )\n      }\n    }\n  }\n\n  deleteFileFromBackend = (docId: number) => {\n    this.docControllerService.deleteDoc(docId).subscribe(\n      res => {\n        this.notifierService.notify('success', 'File has been successfully deleted');\n        this.onDelete.emit({ fieldName: this.fieldName });\n        this.isLoading = false;\n      },\n      err => {\n        this.notifierService.notify('error', 'There was error in deletion - ' + err.error.message);\n        this.isLoading = false;\n      },\n    );\n  }\n\n  deleteFile = (event: any) => {\n    this.isLoading = true;\n    if (!this.isForSingleDoc()) {\n      const message = 'Are you sure you want to delete?';\n      if (confirm(message)) {\n        this.deleteFileFromBackend(this.file['id']);\n      }\n    }\n    this.onDelete.emit({fieldName: this.fieldName});\n\n    /*\n    let message = 'Are you sure you want to delete?';\n    if (confirm(message)) {\n      this.isLoading = true;\n      this.docControllerService.deleteDoc(id).subscribe(\n        res => {\n          this.notifierService.notify('success', 'Uploaded image has been successfully deleted');\n          this.isLoading = false;\n          this.items = undefined;\n        },\n        err => {\n          this.notifierService.notify('error', 'There was error in deletion - ' + err.error.message);\n          this.isLoading = false;\n        },\n      );\n    }*/\n  }\n\n  updateFileFromBackend = (docId: number) => {\n    /* Not implemented yet */\n  }\n\n  createFileFromBackend = (docDto: DocDto) => {\n    this.docControllerService.createDoc(docDto).subscribe(\n      (docDto: DocDto) => {\n        this.isLoading = false;\n        this.notifierService.notify('success', 'File has been successfully uploaded');\n        if (docDto.id && this.docIds && this.docIds.indexOf(docDto.id) < 0) {\n          this.docIds.push(docDto.id);\n        }\n        this.onUpdate.emit({ fieldName: this.fieldName, data: this.docIds});\n        this.loadDocs();\n      },\n      err => this.notifierService.notify('error', 'There was error in updating image - ' + err.error.message),\n    );\n  }\n\n  changeFile = (event: any) => {\n    const [file] = event.target.files;\n    const reader = new FileReader();\n    this.isLoading = true;\n    reader.addEventListener('load', (event:Event) => {\n      const base64Data = (<any> event.target).result\n        .substr((<any> event.target).result.indexOf('base64,') + 'base64,'.length);\n      const loadedFile: DocDto = {\n        name: file.name,\n        comment: '',\n        mimetype: file.type,\n        filecontent: base64Data,\n        filecontentContentType: file.type,\n        instanceId: this.instanceId,\n      };\n      if (this.isForSingleDoc()) {\n        this.onUpdate.emit({ fieldName: this.fieldName, data: loadedFile});\n      }\n      else {\n        this.createFileFromBackend(loadedFile);\n      }\n      \n    }, false);\n    reader.readAsDataURL(file);\n  }\n\n  update = () => {\n    this.onUpdate.emit({ data: this.docIds, fieldName: this.fieldName });\n  }\n\n  isForSingleDoc = ():boolean => {\n    return this.fieldName === 'instanceAsDoc';\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport * as L from 'leaflet';\nimport * as geojson from 'geojson';\nimport 'leaflet-draw';\nimport { addNonGroupLayers, getGeometryCollectionFromMap, removeLayers } from '../../util/mapToGeometry';\nconst iconRetinaUrl = 'assets/leaflet/marker-icon-2x.png';\nconst iconUrl = 'assets/leaflet/marker-icon.png';\nconst shadowUrl = 'assets/leaflet/marker-shadow.png';\nconst iconDefault = L.icon({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  tooltipAnchor: [16, -28],\n  shadowSize: [41, 41]\n});\nL.Marker.prototype.options.icon = iconDefault;\n\n@Component({\n  selector: 'ngx-input-geometry',\n  templateUrl: './input-geometry.component.html',\n  styleUrls: ['./input-geometry.component.scss']\n})\nexport class InputGeometryComponent implements OnInit, OnDestroy {\n  @Input() isEditing: boolean;\n  @Input() isForSearch: boolean;\n  @Input() geometry: object;\n\n  @Output() onUpdate = new EventEmitter<any>();\n  @ViewChild('map') mapDiv: ElementRef;\n\n  drawnItems: L.FeatureGroup;\n  drawnItemsForSearch: L.FeatureGroup;\n  layersControl: any;\n  controlWithEdit: any;\n  controlWithoutEdit: any;\n  controlForSearch: any;\n  map: any;\n\n  constructor() { }\n\n  initMap = (container: any) => {\n    const map = L.map(container).setView([55.692864, 12.599246], 5);\n    L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      { maxZoom: 18, minZoom: 3, attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>' })\n      .addTo(map);\n    return map;\n  }\n\n  ngOnInit(): void {\n    // Initialise the map before we need it\n    this.map = this.initMap('map');\n\n    // FeatureGroup is to store editable layers\n    this.drawnItems = new L.FeatureGroup();\n    this.map.addLayer(this.drawnItems);\n    this.drawnItemsForSearch = new L.FeatureGroup();\n    this.map.addLayer(this.drawnItemsForSearch);\n\n    // Initialise the draw controls\n    this.controlWithEdit = this.initDrawControlWithEdit(this.drawnItems);\n    this.controlWithoutEdit = this.initDrawControlWithoutEdit(this.drawnItems);\n    this.controlForSearch = this.initDrawControlForSearch(this.drawnItemsForSearch);\n\n    // apply draw controls\n    if (this.isForSearch) {\n      this.applySearchToMap(this.map);\n    } else {\n      this.applyEditingToMap(this.isEditing, this.map);\n    }\n\n    this.map.on(L.Draw.Event.CREATED, this.handleCreation );\n    this.map.on(L.Draw.Event.DELETED, this.handleDeletion );\n\n    this.loadGeometry();\n  }\n\n  @HostListener('window:beforeunload')\n  async ngOnDestroy() {\n    // say good bye to leaflet map before leaving\n    this.destroyMap();\n  }\n\n  destroyMap = () => {\n    if (this.map) {\n      // remove leaflet element\n      this.map.off();\n      this.map = this.map.remove();\n\n      // remove leaflet element from DOM\n      const container = L.DomUtil.get('map');\n      if(container){\n        this.mapDiv.nativeElement.remove();\n      }\n    }\n  }\n\n  applyEditingToMap = (isEditing: boolean, searchMap: any = this.map) => {\n    // Initialise the draw controls\n    if (isEditing) {\n      searchMap.removeControl(this.controlWithoutEdit);\n      searchMap.addControl(this.controlWithEdit);\n    } else {\n      searchMap.removeControl(this.controlWithEdit);\n      searchMap.addControl(this.controlWithoutEdit);\n    }\n  }\n\n  applySearchToMap = (searchMap: any = this.map) => {\n    // Initialise the draw controls\n    searchMap.addControl(this.controlForSearch);\n  }\n\n  handleCreation = (e: any) => {\n    const layer = e.layer;\n    if(this.isForSearch) {\n      addNonGroupLayers(layer, this.drawnItemsForSearch);\n    this.onUpdate.emit({ fieldName: 'geometry', data: getGeometryCollectionFromMap(this.drawnItemsForSearch)});\n    } else {\n      addNonGroupLayers(layer, this.drawnItems);\n    this.onUpdate.emit({ fieldName: 'geometry', data: getGeometryCollectionFromMap(this.drawnItems)});\n    }\n  }\n\n  handleDeletion = (e: any) => {\n    const layer = e.layer;\n    removeLayers(layer, this.drawnItems);\n    this.onUpdate.emit({ fieldName: 'geometry', data: getGeometryCollectionFromMap(this.drawnItems)});\n  }\n\n  clearMap = () => {\n    this.drawnItems.clearLayers();\n    this.drawnItemsForSearch.clearLayers();\n  }\n\n  loadGeometry = (geometry: any = this.geometry, fitBounds = true, clearMapFromBeginning = true, tooltipString = '') => {\n    if (geometry) {\n      this.loadGeometryOnMap(geometry, this.map, this.drawnItems, fitBounds, clearMapFromBeginning, tooltipString);\n    }\n  }\n\n  loadGeometries = (geometries: any[], names: any[]) => {\n    this.drawnItems.clearLayers();\n    if (names) {\n      geometries?.forEach((g, i) => this.loadGeometry(g, false, false, names[i]));\n    } else {\n      geometries?.forEach((g, i) => this.loadGeometry(g, false, false));\n    }\n  }\n\n  loadGeometryOnMap = (geometry, map, drawnItems, fitBounds = true, clearMapFromBeginning = true, tooltipString = '') => {\n    // Recreate the drawn items feature group\n    if (clearMapFromBeginning) {\n      drawnItems.clearLayers();\n    }\n    if (geometry) {\n      const geomLayer = L.geoJSON(geometry as geojson.GeoJsonObject);\n      addNonGroupLayers(geomLayer, drawnItems);\n      if(fitBounds) {\n        setTimeout(() => map.fitBounds(geomLayer.getBounds()), 50);\n      }\n      if (tooltipString.length > 0) {\n        if (geometry.type === 'Point') {\n          const coordinate = geometry.coordinates;\n          this.setToolTip(tooltipString, coordinate[1], coordinate[0]);\n        } else {\n          const coordinate = geomLayer.getBounds().getCenter();\n          this.setToolTip(tooltipString, coordinate.lat, coordinate.lng);\n        }\n      }\n    }\n  }\n\n  setToolTip = (tooltipString: string, lat: number, lng: number) => {\n    const marker = L.marker([lat, lng], { opacity: 0.01 }); //opacity may be set to zero\n    marker.bindTooltip(tooltipString, {permanent: true, className: \"my-label\", offset: [0, 0] });\n    marker.addTo(this.drawnItems);\n  }\n\n  initDrawControlWithoutEdit = (drawnItems) => {\n    return new L.Control.Draw({\n        edit: {\n            featureGroup: drawnItems,\n            remove: false,\n            edit: false,\n        },\n        draw: undefined,\n    });\n  }\n\n  initDrawControlWithEdit = (drawnItems) => {\n    return new L.Control.Draw({\n        draw: {\n            marker: false,\n            polyline: {\n              shapeOptions: {\n                color: '#f35f57',\n                weight: 10,\n              },\n            },\n            polygon: {\n              shapeOptions: {\n                color: '#f35f57',\n                weight: 10,\n              },\n            },\n            rectangle: {\n              shapeOptions: {\n                color: '#f35f57',\n                weight: 10,\n              },\n            },\n            circle: false,\n            circlemarker: false,\n        },\n        edit: {\n            featureGroup: drawnItems,\n        }\n    });\n  }\n\n  initDrawControlForSearch = (drawnItems) => {\n    return new L.Control.Draw({\n      draw: {\n          marker: {\n            icon: iconDefault,\n          },\n          polyline: {\n            shapeOptions: {\n              color: '#f35f57',\n              weight: 10,\n            },\n          },\n          polygon: {\n            shapeOptions: {\n              color: '#f35f57',\n              weight: 10,\n            },\n          },\n          rectangle: {\n            shapeOptions: {\n              color: '#f35f57',\n              weight: 10,\n            },\n          },\n          circle: false,\n          circlemarker: false,\n      },\n      edit: {\n          featureGroup: drawnItems,\n      }\n  });\n  }\n}\n","<nb-card>\n    <nb-card-body>\n        <div id=\"map\" #map class=\"leaflet-container border shadow\"></div>\n        <div *ngIf=\"isEditing\">\n            <button nbButton class=\"w-100\" (click)=\"clearMap()\">Clear</button>\n        </div>\n    </nb-card-body>\n</nb-card>","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\nimport { ResourceType } from './../models/menuType';\nimport { VesselImageControllerService } from './../../backend-api/identity-registry/api/vesselImageController.service';\nimport { LogoControllerService } from './../../backend-api/identity-registry/api/logoController.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NotifierService } from 'angular-notifier';\n\ntype FileRestrictions = any;\ntype FileInfo = any;\n\n@Component({\n  selector: 'ngx-input-image',\n  templateUrl: './input-image.component.html',\n  styleUrls: ['./input-image.component.scss']\n})\nexport class InputImageComponent implements OnInit {\n\n  @Input() menuType: ResourceType;\n  @Input() isEditing: boolean;\n  @Input() orgMrn: string;\n  @Input() entityMrn: string;\n  @Input() allowedExtensions: string[];\n  accept = '';\n  image: any;\n  isLoading = false;\n\n  constructor(\n    private logoControllerService: LogoControllerService,\n    private vesselImageControllerService: VesselImageControllerService,\n    private notifierService: NotifierService,\n    private sanitizer: DomSanitizer,\n    ) { }\n\n  ngOnInit(): void {\n    this.accept = this.allowedExtensions ? this.allowedExtensions.join(',') : '';\n    if (this.entityMrn) {\n      this.getImage(this.menuType, this.entityMrn, this.orgMrn).subscribe(\n        blob => {\n          const objectURL = URL.createObjectURL(new Blob([blob]));\n          this.image = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n        },\n        err => { console.log(err); },\n      );\n    }\n  }\n\n  clickToRemoveImage = () => {\n    let message = 'Are you sure you want to delete?';\n    if (confirm(message)) {\n      this.isLoading = true;\n      this.deleteImage(this.menuType, this.entityMrn, this.orgMrn).subscribe(\n        res => {\n          this.notifierService.notify('success', 'Uploaded image has been successfully deleted');\n          this.isLoading = false;\n          this.image = undefined;\n        },\n        err => {\n          this.notifierService.notify('error', 'There was error in deletion - ' + err.error.message);\n          this.isLoading = false;\n        },\n      );\n    }\n  }\n\n  changeFile = (event: any) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    this.isLoading = true;\n    reader.addEventListener('load', (event:Event) => {\n\t    this.image = (<any> event.target).result;\n      const mediaType = file.type;\n      if ((mediaType !== \"image/png\") && (mediaType !== \"image/jpeg\")) {\n        return;\n      }\n      this.updatePut(this.menuType, file, this.entityMrn, this.orgMrn, mediaType).subscribe(\n        logo => {\n          this.isLoading = false;\n        },\n        err => this.notifierService.notify('error', 'There was error in updating image - ' + err.error.message),\n      );\n    }, false);\n    reader.readAsDataURL(file);\n  }\n\n  updatePut(menuType: ResourceType, file: any, entityMrn: string, orgMrn: string, mediaType: string): Observable<any> {\n    return menuType === ResourceType.Organization ?\n        this.logoControllerService.updateLogoPut(file, entityMrn, mediaType) :\n      menuType === ResourceType.Vessel ?\n        this.vesselImageControllerService.updateVesselImagePut(file, orgMrn, entityMrn, mediaType) :\n        new Observable<any>();\n  }\n\n  getImage(menuType: ResourceType, entityMrn: string, orgMrn: string): Observable<any> {\n    return menuType === ResourceType.Organization ?\n        this.logoControllerService.getLogo(entityMrn) :\n      menuType === ResourceType.Vessel ?\n        this.vesselImageControllerService.getVesselImage(orgMrn, entityMrn) :\n        new Observable<any>();\n  }\n\n  deleteImage(menuType: ResourceType, entityMrn: string, orgMrn: string): Observable<any> {\n    return menuType === ResourceType.Organization ?\n        this.logoControllerService.deleteLogo(entityMrn) :\n      menuType === ResourceType.Vessel ?\n        this.vesselImageControllerService.deleteVesselImage(orgMrn, entityMrn) :\n        new Observable<any>();\n  }\n}\n","<div>\n    <div class=\"image_container\" *ngIf=\"image\" [nbSpinner]=\"isLoading\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\">\n        <img *ngIf=\"!isEditing\" class=\"mh-100\" [attr.src]=\"image\">\n        <div *ngIf=\"isEditing\" class=\"h-100 image_text\" (click)=\"clickToRemoveImage()\">\n            <div class=\"container\">\n                <span class=\"text-white font-weight-bold\">click to remove</span>\n            </div>\n        </div>\n        <img *ngIf=\"isEditing\" class=\"mh-100\" [attr.src]=\"image\">\n    </div>\n    <div *ngIf=\"!image\" [nbSpinner]=\"isLoading\" nbSpinnerSize=\"large\" nbSpinnerStatus=\"primary\" class=\"row h-100 justify-content-center align-items-center bg-light\">\n        <span class=\"text-secondary font-weight-bold\">No image</span>\n    </div>\n    <input *ngIf=\"isEditing\" type=\"file\" accept=\"{{accept}}\" (change)=\"changeFile($event)\"/>\n</div>\n","<div>\n    <div class=\"container\" *ngIf=\"entity && !isEditing\" [nbSpinner]=\"isLoading\" nbSpinnerStatus=\"primary\">\n        <div class=\"row justify-content-center align-items-center bg-light\">\n            <nb-icon [icon]=\"'ship'\" pack=\"fas\"></nb-icon><span class=\"font-weight-bold p-2\">{{getTitle(entity.mrn, entity.name)}}</span>\n        </div>\n    </div>\n    <div class=\"container\" *ngIf=\"!entity && !isEditing\" [nbSpinner]=\"isLoading\" nbSpinnerStatus=\"primary\">\n        <div class=\"row justify-content-center align-items-center bg-light\">\n            <nb-icon class=\"text-secondary\" [icon]=\"'ship'\" pack=\"fas\"></nb-icon><span class=\"text-secondary font-weight-bold p-2\"> No {{menuType}} assigned</span>\n        </div>\n    </div>\n    <nb-select *ngIf=\"isEditing\" type=\"string\" (selectedChange)=\"onMenuItemSelected({value: $event})\"\n        [(selected)]=\"selectedEntityMrn\"\n        status=\"{{!entity && required? 'danger' : ''}}\"\n        fullWidth required=\"required === true\">\n        <nb-option *ngFor=\"let option of options\" value=\"{{option.value}}\">{{option.title}}</nb-option>\n    </nb-select>\n</div>\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VesselControllerService } from './../../backend-api/identity-registry/api/vesselController.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ResourceType } from '../models/menuType';\nimport { NbIconLibraries } from '@nebular/theme';\nimport { NotifierService } from 'angular-notifier';\n\n/**\n * \n * \n */\n@Component({\n  selector: 'ngx-input-mcp-entity',\n  templateUrl: './input-mcp-entity.component.html',\n  styleUrls: ['./input-mcp-entity.component.scss']\n})\nexport class InputMcpEntityComponent implements OnInit {\n\n  @Input() menuType: ResourceType;\n  @Input() isEditing: boolean;\n  @Input() orgMrn: string;\n  @Input() entity: any;\n  @Input() required: boolean;\n  @Output() onUpdate: EventEmitter<any> = new EventEmitter();\n\n  options: any[] = [];\n  isLoading: boolean = false;\n  selectedEntityMrn: string = '';\n  \n  constructor(\n    private vesselControllerService: VesselControllerService,\n    private iconsLibrary: NbIconLibraries,\n    private notifierService: NotifierService,\n    ) { \n      iconsLibrary.registerFontPack('fas', { packClass: 'fas', iconClassPrefix: 'fa' });\n    }\n\n  ngOnInit(): void {\n    if (this.menuType === ResourceType.Vessel) {\n      this.isLoading = true;\n      this.vesselControllerService.getOrganizationVessels(this.orgMrn).subscribe(\n        data => {\n          this.isLoading = false;\n          data.content.forEach(e => this.options.push(this.getOption(e.mrn, e.name)));\n          // if there is a given entity, that will become the selected option\n          if (this.entity) {\n            this.options.forEach(e => {\n              if (e.value === this.entity.mrn) {\n                this.selectedEntityMrn = this.entity.mrn;\n              }\n            });\n          }\n        },\n        err => this.notifierService.notify('error', 'There was error in fetching ' + this.menuType + ' - ' + err.error.message),\n      );\n    }\n  }\n\n  getTitle = (mrn: string, name: string) => {\n    if (name.includes(mrn)) {\n      return name;\n    } else {\n      return name + ' (' + mrn + ')';\n    }\n  }\n\n  getOption = (mrn: string, name: string) => {\n    return {title: this.getTitle(mrn, name), value: mrn};\n  }\n\n  onUpdateEntity = (mrn: string, name: string) => {\n    this.entity = { mrn: mrn, name: name };\n  }\n\n  onMenuItemSelected = (event: any) => {\n    this.onUpdateEntity(event.value, this.options.filter(e => e.value === event.value).pop().title);\n    this.onUpdate.emit({fieldName: this.menuType, value: this.entity});\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { convertTime } from \"../../util/timeConverter\";\n\n/**\n * a json format for active certificates articulating how the corresponding interface should work\n */\nexport const ActiveCertificatesColumn = {\n    start: {\n      title: 'Valid from',\n      type: 'string',\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n    },\n    end: {\n      title: 'Valid until',\n      type: 'string',\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n    },\n};\n\n/**\n * a json format for revoked certificates articulating how the corresponding interface should work\n */\nexport const RevokedCertificatesColumn = {\n  revokeInfo: {\n    title: 'Revoked from',\n    type: 'string',\n    valuePrepareFunction: (timestamp: any) => {\n      return convertTime(timestamp);\n    },\n  },\n  revokeReasonText: {\n    title: 'Reason',\n    type: 'string',\n  },\n};","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { convertTime } from '../../util/timeConverter';\nimport { countryOptions } from './countryOptions';\n\n/**\n * a json format for both ngx-smart-table and ngx-editable-form articulating how the corresponding interface should work\n */\nexport const ColumnForMenu = {\n  device: {\n    id: {\n      title: 'ID',\n      type: 'number',\n      description: 'identifier',\n    },\n    mrn: {\n      title: 'MRN',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n      shortIdType: 'device',\n    },\n    name: {\n      title: 'Name',\n      type: 'string',\n      description: 'Name of device',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    permissions: {\n      title: 'Permissions',\n      type: 'string',\n      description: 'List of permissions assigned by the organization',\n      visibleFrom: ['edit', 'detail'],\n    },\n    mrnSubsidiary: {\n      title: 'Subsidiary MRN',\n      type: 'string',\n      description: 'Additional MRN assigned to entity',\n      visibleFrom: ['detail'],\n    },\n    homeMMSUrl: {\n      title: 'Home MMS URL',\n      type: 'string',\n      description: 'URL of home MMS',\n      visibleFrom: ['detail'],\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  organization: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    logo: {\n      title: 'Logo',\n      type: 'image',\n      allowedExtensions: ['.jpg', '.png'],\n      visibleFrom: ['detail'],\n    },\n    mrn: {\n      title: 'MRN',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n      shortIdType: 'organization',\n    },\n    name: {\n      title: 'Name',\n      type: 'string',\n      description: 'Name of organization',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    mrnSubsidiary: {\n      title: 'Subsidiary MRN',\n      type: 'string',\n      description: 'Additional MRN assigned to entity',\n      visibleFrom: ['detail'],\n    },\n    homeMMSUrl: {\n      title: 'Home MMS URL',\n      type: 'string',\n      description: 'URL of home MMS',\n      visibleFrom: ['detail'],\n    },\n    email: {\n      title: 'e-mail',\n      type: 'string',\n      description: 'Contact e-mail',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    url: {\n      title: 'URL',\n      type: 'string',\n      description: 'URL of organization',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    address: {\n      title: 'Address',\n      type: 'string',\n      description: 'Address of organization',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    country: {\n      title: 'Country',\n      type: 'string',\n      description: 'Country that organization belongs to',\n      visibleFrom: ['detail', 'list'],\n      options: countryOptions,\n      required: true,\n    },\n    federationType: {\n      title: 'Federation type',\n      type: 'string',\n      description: 'OpenID Connect federation type',\n      visibleFrom: ['detail'],\n      immutable: true,\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  service: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    mrn: {\n      title: 'MRN',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n      shortIdType: 'service',\n    },\n    name: {\n      title: 'Name',\n      type: 'string',\n      description: 'Name of service',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    permissions: {\n      title: 'Permissions',\n      type: 'string',\n      description: 'List of permissions assigned by the organization',\n      visibleFrom: ['edit', 'detail'],\n    },\n    mrnSubsidiary: {\n      title: 'Subsidiary MRN',\n      type: 'string',\n      description: 'Additional MRN assigned to entity',\n      visibleFrom: ['detail'],\n    },\n    homeMMSUrl: {\n      title: 'Home MMS URL',\n      type: 'string',\n      description: 'URL of home MMS',\n      visibleFrom: ['detail'],\n    },\n    instanceVersion: {\n      title: 'Instance version',\n      type: 'string',\n      description: 'Version of service instance',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n    },\n    certDomainName: {\n      title: 'Certificate domain name',\n      type: 'string',\n      description: 'The domain name the service will be available on. Used in the issued certificates for the service.',\n      visibleFrom: ['detail'],\n    },\n    oidcClientId: {\n      title: 'OIDC client ID',\n      type: 'string',\n      description: 'OpenID Connect client ID',\n      visibleFrom: ['detail'],\n      notShowOnEdit: true,\n    },\n    oidcClientSecret: {\n      title: 'OIDC client secret',\n      type: 'string',\n      description: 'OpenID Connect client secret',\n      visibleFrom: ['detail'],\n      notShowOnEdit: true,\n    },\n    oidcAccessType: {\n      title: 'Access type',\n      type: 'string',\n      description: 'OpenID Connect access type',\n      options: [\n        {\n          title: 'public',\n          value: 'public',\n          showField: {\n            key: 'oidcRedirectUri',\n            value: true,\n          },\n        },\n        {\n          title: 'bearer-only',\n          value: 'bearer-only',\n          showField: {\n            key: 'oidcRedirectUri',\n            value: false,\n          },\n        },\n        {\n          title: 'confidential',\n          value: 'confidential',\n          showField: {\n            key: 'oidcRedirectUri',\n            value: true,\n          },\n        },\n      ],\n      visibleFrom: ['detail'],\n    },\n    oidcRedirectUri: {\n      title: 'OIDC redirect URI',\n      type: 'string',\n      description: 'OpenID Connect client redirect URI',\n      visibleFrom: ['detail'],\n      notShowOnEdit: true,\n      required: true,\n    },\n    vessel: {\n      title: 'Vessel',\n      type: 'vessel',\n      description: 'Correlated vessel',\n      visibleFrom: ['detail'],\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  user: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    mrn: {\n      title: 'MRN',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n      shortIdType: 'user',\n    },\n    firstName: {\n      title: 'First name',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    lastName: {\n      title: 'Last name',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    email: {\n      title: 'e-mail',\n      type: 'string',\n      description: 'Contact e-mail',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n    },\n    permissions: {\n      title: 'Permissions',\n      type: 'string',\n      description: 'List of permissions assigned by the organization',\n      visibleFrom: ['detail', 'list'],\n    },\n    mrnSubsidiary: {\n      title: 'Subsidiary MRN',\n      type: 'string',\n      description: 'Additional MRN assigned to entity',\n      visibleFrom: ['detail'],\n    },\n    homeMMSUrl: {\n      title: 'Home MMS URL',\n      type: 'string',\n      description: 'URL of home MMS',\n      visibleFrom: ['detail'],\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  vessel: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    logo: {\n      title: 'Logo',\n      type: 'image',\n      allowedExtensions: ['.jpg', '.png'],\n      visibleFrom: ['detail'],\n    },\n    mrn: {\n      title: 'MRN',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail', 'list'],\n      immutable: true,\n      required: true,\n      shortIdType: 'vessel',\n    },\n    name: {\n      title: 'Name',\n      type: 'string',\n      description: 'Name of device',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    permissions: {\n      title: 'Permissions',\n      type: 'string',\n      description: 'List of permissions assigned by the organization',\n      visibleFrom: ['edit', 'detail'],\n    },\n    // vessel specific\n    imoNumber: {\n      title: 'IMO number',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    mmsiNumber: {\n      title: 'MMSI number',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    callsign: {\n      title: 'Call sign',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    flagstate: {\n      title: 'Flag state',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    aisClass: {\n      title: 'AIS class',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    portOfRegister: {\n      title: 'Port of register',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    mrnSubsidiary: {\n      title: 'Subsidiary MRN',\n      type: 'string',\n      description: 'Additional MRN assigned to entity',\n      visibleFrom: ['detail'],\n    },\n    homeMMSUrl: {\n      title: 'Home MMS URL',\n      type: 'string',\n      description: 'URL of home MMS',\n      visibleFrom: ['detail'],\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  role: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    permission: {\n      title: 'Permission',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    roleName: {\n      title: 'Role name',\n      type: 'string',\n      visibleFrom: ['detail', 'list'],\n      options: [\n        {\n          title: 'ROLE_SITE_ADMIN',\n          value: 'ROLE_SITE_ADMIN',\n        },\n        {\n          title: 'ROLE_ORG_ADMIN',\n          value: 'ROLE_ORG_ADMIN',\n        },\n        {\n          title: 'ROLE_USER',\n          value: 'ROLE_USER',\n        },\n        {\n          title: 'ROLE_ENTITY_ADMIN',\n          value: 'ROLE_ENTITY_ADMIN',\n        },\n        {\n          title: 'ROLE_USER_ADMIN',\n          value: 'ROLE_USER_ADMIN',\n        },\n        {\n          title: 'ROLE_VESSEL_ADMIN',\n          value: 'ROLE_VESSEL_ADMIN',\n        },\n        {\n          title: 'ROLE_SERVICE_ADMIN',\n          value: 'ROLE_SERVICE_ADMIN',\n        },\n        {\n          title: 'ROLE_APPROVE_ORG',\n          value: 'ROLE_APPROVE_ORG',\n        },\n        {\n          title: 'ROLE_DEVICE_ADMIN',\n          value: 'ROLE_DEVICE_ADMIN',\n        },\n        {\n          title: 'ROLE_MMS_ADMIN',\n          value: 'ROLE_MMS_ADMIN',\n        },\n      ],\n      required: true,\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  orgcandidate: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    mrn: {\n      title: 'MRN',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail', 'list'],\n      shortIdType: 'organization',\n      immutable: true,\n      required: true,\n    },\n    name: {\n      title: 'Name',\n      type: 'string',\n      description: 'Name of organization',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    mrnSubsidiary: {\n      title: 'Subsidiary MRN',\n      type: 'string',\n      description: 'Additional MRN assigned to entity',\n      visibleFrom: ['detail'],\n    },\n    homeMMSUrl: {\n      title: 'Home MMS URL',\n      type: 'string',\n      description: 'URL of home MMS',\n      visibleFrom: ['detail'],\n    },\n    email: {\n      title: 'e-mail',\n      type: 'string',\n      description: 'Contact e-mail',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    url: {\n      title: 'URL',\n      type: 'string',\n      description: 'URL of organization',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    address: {\n      title: 'Address',\n      type: 'string',\n      description: 'Address of organization',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    country: {\n      title: 'Country',\n      type: 'string',\n      description: 'Country that organization belongs to',\n      visibleFrom: ['detail', 'list'],\n      options: countryOptions,\n      required: true,\n    },\n    federationType: {\n      title: 'Federation type',\n      type: 'string',\n      description: 'OpenID Connect federation type',\n      visibleFrom: ['detail'],\n      immutable: true,\n    },\n    createdAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    updatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      valuePrepareFunction: (timestamp: any) => {\n        return convertTime(timestamp);\n      },\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail', 'list'],\n    },\n  },\n  instance: {\n    id: {\n      title: 'ID',\n      type: 'number',\n    },\n    instanceId: {\n      title: 'Instance ID',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail'],\n      shortIdType: 'instance',\n      immutable: true,\n      required: true,\n    },\n    name: {\n      title: 'Name',\n      type: 'string',\n      description: 'Name of service instance',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    version: {\n      title: 'Version',\n      type: 'string',\n      description: 'Version of service instance',\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    comment: {\n      title: 'Comment',\n      type: 'string',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    serviceType: {\n      title: 'Service type',\n      type: 'stringArray',\n      options: [\n        {\n          title: 'MS 1 - VTS Information service (INS)',\n          value: 'VTSInformationService',\n        },\n        {\n          title: 'MS 2 - VTS Navigational assistance service (NAS)',\n          value: 'VTSNavigationalAssistanceService',\n        },\n        {\n          title: 'MS 3 - Traffic organization service (TOS)',\n          value: 'TrafficOrganizationService',\n        },\n        {\n          title: 'MS 4 - Port support service (PSS)',\n          value: 'PortSupportService',\n        },\n        {\n          title: 'MS 5 - Maritime safety information (MSI) service',\n          value: 'MaritimeSafetyInformationService',\n        },\n        {\n          title: 'MS 6 - Pilotage service',\n          value: 'PilotageService',\n        },\n        {\n          title: 'MS 7 - Tug service',\n          value: 'TugService',\n        },\n        {\n          title: 'MS 8 - Vessel shore reporting',\n          value: 'VesselShoreReporting',\n        },\n        {\n          title: 'MS 9 - Telemedical assistance service (TMAS)',\n          value: 'TelemedicalAssistanceService',\n        },\n        {\n          title: 'MS 10 - Maritime assistance service (MAS)',\n          value: 'MaritimeAssistanceService',\n        },\n        {\n          title: 'MS 11 - Nautical chart service',\n          value: 'NauticalChartService',\n        },\n        {\n          title: 'MS 12 - Nautical publications service',\n          value: 'NauticalPublicationsService',\n        },\n        {\n          title: 'MS 13 - Ice navigation service',\n          value: 'IceNavigationService',\n        },\n        {\n          title: 'MS 14 - Meteorological information service',\n          value: 'MeteorologicalInformationService',\n        },\n        {\n          title: 'MS 15 - Real-time hydrographic and environmental information services',\n          value: 'RealTimeHydrographicAndEnvironmentalInformationServices',\n        },\n        {\n          title: 'MS 16 - Search and rescue (SAR) service',\n          value: 'SearchAndRescueService',\n        },\n        {\n          title: 'Other',\n          value: 'other:etc',\n        },\n      ],\n      description: 'The service type shall reflect the associated operational service type provided according to defined types',\n      visibleFrom: ['detail', 'list'],\n    },\n    status: {\n      title: 'Status',\n      type: 'string',\n      options: [\n        {\n          title: 'Provisional',\n          value: 'PROVISIONAL',\n        },\n        {\n          title: 'Released',\n          value: 'RELEASED',\n        },\n        {\n          title: 'Deprecated',\n          value: 'DEPRECATED',\n        },\n        {\n          title: 'Deleted',\n          value: 'DELETED',\n        },\n      ],\n      visibleFrom: ['detail', 'list'],\n      required: true,\n    },\n    endpointUri: {\n      title: 'Endpoint URI',\n      type: 'string',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    endpointType: {\n      title: 'Endpoint type',\n      type: 'string',\n      visibleFrom: ['detail'],\n    },\n    organizationId: {\n      title: 'Organization ID',\n      type: 'string',\n      visibleFrom: ['detail'],\n      immutable: true,\n    },\n    keywords: {\n      title: 'Keywords',\n      type: 'stringArray',\n      placeholder: 'Please enter keyword',\n      visibleFrom: ['detail', 'list'],\n    },\n    implementsServiceDesign: {\n      title: 'Technical design ID',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail'],\n      shortIdType: 'design',\n      immutable: true,\n    },\n    implementsServiceDesignVersion: {\n      title: 'Technical design version',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail'],\n    },\n    geometryContentType: {\n      title: 'Geometry content type',\n      type: 'string',\n      visibleFrom: ['detail'],\n    },\n    geometry: {\n      title: 'Geometry',\n      type: 'object',\n      visibleFrom: [],\n    },\n    unlocode: {\n      title: 'Unlocode',\n      type: 'stringArray',\n      placeholder: 'Please enter UN/LOCODE',\n      visibleFrom: ['detail'],\n    },\n    mmsi: {\n      title: 'MMSI',\n      type: 'string',\n      visibleFrom: ['detail'],\n    },\n    imo: {\n      title: 'IMO number',\n      type: 'string',\n      visibleFrom: ['detail'],\n    },\n    instanceAsXml: {\n      title: 'Instance as XML',\n      type: 'xml',\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    instanceAsDocId: {\n      title: 'Instance as DocId',\n      type: 'number',\n    },\n    instanceAsDoc: {\n      title: 'Instance as document',\n      type: 'file',\n      visibleFrom: ['detail'],\n    },\n    ledgerRequestId: {\n      title: 'Ledger Request ID',\n      type: 'number',\n    },\n    ledgerRequestStatus: {\n      title: 'Ledger Request status',\n      type: 'string',\n      options: [\n        {\n          title: 'Inactive',\n          value: 'INACTIVE',\n        },\n        {\n          title: 'Created',\n          value: 'CREATED',\n        },\n        {\n          title: 'Vetting',\n          value: 'VETTING',\n        },\n        {\n          title: 'Vetted',\n          value: 'VETTED',\n        },\n        {\n          title: 'Requesting',\n          value: 'REQUESTING',\n        },\n        {\n          title: 'Succeeded',\n          value: 'SUCCEEDED',\n        },\n        {\n          title: 'Failed',\n          value: 'FAILED',\n        },\n        {\n          title: 'Rejected',\n          value: 'REJECTED',\n        },\n      ],\n      visibleFrom: ['detail'],\n    },\n    docIds: {\n      title: 'Related documents',\n      type: 'fileArray',\n      filter: false,\n      visibleFrom: ['detail'],\n    },\n    publishedAt: {\n      title: 'Created at',\n      type: 'string',\n      filter: false,\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n    lastUpdatedAt: {\n      title: 'Updated at',\n      type: 'string',\n      filter: false,\n      immutable: true,\n      notShowOnEdit: true,\n      visibleFrom: ['detail'],\n    },\n  },\n  newOrganization: {\n    orgMrn: {\n      title: 'Maritime Resource Name (MRN) for organization',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail'],\n      required: true,\n      shortIdType: 'organization',\n    },\n    orgName: {\n      title: 'Organization name',\n      type: 'string',\n      description: 'Name of organization',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    orgEmail: {\n      title: 'Organization contact e-mail',\n      type: 'string',\n      description: 'Contact e-mail',\n      placeholder: 'non-personal email, e.g., info@example.org',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    orgUrl: {\n      title: 'URL of organization',\n      type: 'string',\n      description: 'URL of organization',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    orgAddress: {\n      title: 'Address of organization',\n      type: 'string',\n      description: 'Address of organization',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    orgCountry: {\n      title: 'Country of organization',\n      type: 'string',\n      description: 'Country that organization belongs to',\n      visibleFrom: ['detail'],\n      options: countryOptions,\n      required: true,\n    },\n    /*\n    adminMrn: {\n      title: 'MRN for admin user',\n      type: 'string',\n      description: 'MCP MRN as unique identifer',\n      visibleFrom: ['detail'],\n      required: true,\n      shortIdType: 'user',\n    },\n    adminFirstName: {\n      title: 'First name of admin user',\n      type: 'string',\n      description: 'First name',\n      placeholder: 'anonymized first name',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    adminLastName: {\n      title: 'Last name of admin user',\n      type: 'string',\n      description: 'Last name',\n      placeholder: 'anonymized last name',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    adminEmail: {\n      title: 'e-mail of admin user',\n      type: 'string',\n      description: 'Contact e-mail to admin user',\n      placeholder: 'non-personal email, e.g., admin@example.org',\n      visibleFrom: ['detail'],\n      required: true,\n    },\n    */\n  },\n};\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * country information collection for the country select menu\n */\nexport const countryOptions = [\n    { code: \"AF\", code3: \"AFG\", title: \"Afghanistan\", value: \"Afghanistan\" },\n    { code: \"AL\", code3: \"ALB\", title: \"Albania\", value: \"Albania\" },\n    { code: \"DZ\", code3: \"DZA\", title: \"Algeria\", value: \"Algeria\" },\n    { code: \"AS\", code3: \"ASM\", title: \"American Samoa\", value: \"American Samoa\" },\n    { code: \"AD\", code3: \"AND\", title: \"Andorra\", value: \"Andorra\" },\n    { code: \"AO\", code3: \"AGO\", title: \"Angola\", value: \"Angola\" },\n    { code: \"AI\", code3: \"AIA\", title: \"Anguilla\", value: \"Anguilla\" },\n    { code: \"AQ\", code3: \"ATA\", title: \"Antarctica\", value: \"Antarctica\" },\n    { code: \"AG\", code3: \"ATG\", title: \"Antigua and Barbuda\", value: \"Antigua and Barbuda\" },\n    { code: \"AR\", code3: \"ARG\", title: \"Argentina\", value: \"Argentina\" },\n    { code: \"AM\", code3: \"ARM\", title: \"Armenia\", value: \"Armenia\" },\n    { code: \"AW\", code3: \"ABW\", title: \"Aruba\", value: \"Aruba\" },\n    { code: \"AU\", code3: \"AUS\", title: \"Australia\", value: \"Australia\" },\n    { code: \"AT\", code3: \"AUT\", title: \"Austria\", value: \"Austria\" },\n    { code: \"AZ\", code3: \"AZE\", title: \"Azerbaijan\", value: \"Azerbaijan\" },\n    { code: \"BS\", code3: \"BHS\", title: \"Bahamas (the)\", value: \"Bahamas (the)\" },\n    { code: \"BH\", code3: \"BHR\", title: \"Bahrain\", value: \"Bahrain\" },\n    { code: \"BD\", code3: \"BGD\", title: \"Bangladesh\", value: \"Bangladesh\" },\n    { code: \"BB\", code3: \"BRB\", title: \"Barbados\", value: \"Barbados\" },\n    { code: \"BY\", code3: \"BLR\", title: \"Belarus\", value: \"Belarus\" },\n    { code: \"BE\", code3: \"BEL\", title: \"Belgium\", value: \"Belgium\" },\n    { code: \"BZ\", code3: \"BLZ\", title: \"Belize\", value: \"Belize\" },\n    { code: \"BJ\", code3: \"BEN\", title: \"Benin\", value: \"Benin\" },\n    { code: \"BM\", code3: \"BMU\", title: \"Bermuda\", value: \"Bermuda\" },\n    { code: \"BT\", code3: \"BTN\", title: \"Bhutan\", value: \"Bhutan\" },\n    { code: \"BO\", code3: \"BOL\", title: \"Bolivia (Plurinational State of)\", value: \"Bolivia (Plurinational State of)\" },\n    { code: \"BQ\", code3: \"BES\", title: \"Bonaire, Sint Eustatius and Saba\", value: \"Bonaire, Sint Eustatius and Saba\" },\n    { code: \"BA\", code3: \"BIH\", title: \"Bosnia and Herzegovina\", value: \"Bosnia and Herzegovina\" },\n    { code: \"BW\", code3: \"BWA\", title: \"Botswana\", value: \"Botswana\" },\n    { code: \"BV\", code3: \"BVT\", title: \"Bouvet Island\", value: \"Bouvet Island\" },\n    { code: \"BR\", code3: \"BRA\", title: \"Brazil\", value: \"Brazil\" },\n    { code: \"IO\", code3: \"IOT\", title: \"British Indian Ocean Territory (the)\", value: \"British Indian Ocean Territory (the)\" },\n    { code: \"BN\", code3: \"BRN\", title: \"Brunei Darussalam\", value: \"Brunei Darussalam\" },\n    { code: \"BG\", code3: \"BGR\", title: \"Bulgaria\", value: \"Bulgaria\" },\n    { code: \"BF\", code3: \"BFA\", title: \"Burkina Faso\", value: \"Burkina Faso\" },\n    { code: \"BI\", code3: \"BDI\", title: \"Burundi\", value: \"Burundi\" },\n    { code: \"CV\", code3: \"CPV\", title: \"Cabo Verde\", value: \"Cabo Verde\" },\n    { code: \"KH\", code3: \"KHM\", title: \"Cambodia\", value: \"Cambodia\" },\n    { code: \"CM\", code3: \"CMR\", title: \"Cameroon\", value: \"Cameroon\" },\n    { code: \"CA\", code3: \"CAN\", title: \"Canada\", value: \"Canada\" },\n    { code: \"KY\", code3: \"CYM\", title: \"Cayman Islands (the)\", value: \"Cayman Islands (the)\" },\n    { code: \"CF\", code3: \"CAF\", title: \"Central African Republic (the)\", value: \"Central African Republic (the)\" },\n    { code: \"TD\", code3: \"TCD\", title: \"Chad\", value: \"Chad\" },\n    { code: \"CL\", code3: \"CHL\", title: \"Chile\", value: \"Chile\" },\n    { code: \"CN\", code3: \"CHN\", title: \"China\", value: \"China\" },\n    { code: \"CX\", code3: \"CXR\", title: \"Christmas Island\", value: \"Christmas Island\" },\n    { code: \"CC\", code3: \"CCK\", title: \"Cocos (Keeling) Islands (the)\", value: \"Cocos (Keeling) Islands (the)\" },\n    { code: \"CO\", code3: \"COL\", title: \"Colombia\", value: \"Colombia\" },\n    { code: \"KM\", code3: \"COM\", title: \"Comoros (the)\", value: \"Comoros (the)\" },\n    { code: \"CD\", code3: \"COD\", title: \"Congo (the Democratic Republic of the)\", value: \"Congo (the Democratic Republic of the)\" },\n    { code: \"CG\", code3: \"COG\", title: \"Congo (the)\", value: \"Congo (the)\" },\n    { code: \"CK\", code3: \"COK\", title: \"Cook Islands (the)\", value: \"Cook Islands (the)\" },\n    { code: \"CR\", code3: \"CRI\", title: \"Costa Rica\", value: \"Costa Rica\" },\n    { code: \"HR\", code3: \"HRV\", title: \"Croatia\", value: \"Croatia\" },\n    { code: \"CU\", code3: \"CUB\", title: \"Cuba\", value: \"Cuba\" },\n    { code: \"CW\", code3: \"CUW\", title: \"Curaçao\", value: \"Curaçao\" },\n    { code: \"CY\", code3: \"CYP\", title: \"Cyprus\", value: \"Cyprus\" },\n    { code: \"CZ\", code3: \"CZE\", title: \"Czechia\", value: \"Czechia\" },\n    { code: \"CI\", code3: \"CIV\", title: \"Côte d'Ivoire\", value: \"Côte d'Ivoire\" },\n    { code: \"DK\", code3: \"DNK\", title: \"Denmark\", value: \"Denmark\" },\n    { code: \"DJ\", code3: \"DJI\", title: \"Djibouti\", value: \"Djibouti\" },\n    { code: \"DM\", code3: \"DMA\", title: \"Dominica\", value: \"Dominica\" },\n    { code: \"DO\", code3: \"DOM\", title: \"Dominican Republic (the)\", value: \"Dominican Republic (the)\" },\n    { code: \"EC\", code3: \"ECU\", title: \"Ecuador\", value: \"Ecuador\" },\n    { code: \"EG\", code3: \"EGY\", title: \"Egypt\", value: \"Egypt\" },\n    { code: \"SV\", code3: \"SLV\", title: \"El Salvador\", value: \"El Salvador\" },\n    { code: \"GQ\", code3: \"GNQ\", title: \"Equatorial Guinea\", value: \"Equatorial Guinea\" },\n    { code: \"ER\", code3: \"ERI\", title: \"Eritrea\", value: \"Eritrea\" },\n    { code: \"EE\", code3: \"EST\", title: \"Estonia\", value: \"Estonia\" },\n    { code: \"SZ\", code3: \"SWZ\", title: \"Eswatini\", value: \"Eswatini\" },\n    { code: \"ET\", code3: \"ETH\", title: \"Ethiopia\", value: \"Ethiopia\" },\n    { code: \"FK\", code3: \"FLK\", title: \"Falkland Islands (the) [Malvinas]\", value: \"Falkland Islands (the) [Malvinas]\" },\n    { code: \"FO\", code3: \"FRO\", title: \"Faroe Islands (the)\", value: \"Faroe Islands (the)\" },\n    { code: \"FJ\", code3: \"FJI\", title: \"Fiji\", value: \"Fiji\" },\n    { code: \"FI\", code3: \"FIN\", title: \"Finland\", value: \"Finland\" },\n    { code: \"FR\", code3: \"FRA\", title: \"France\", value: \"France\" },\n    { code: \"GF\", code3: \"GUF\", title: \"French Guiana\", value: \"French Guiana\" },\n    { code: \"PF\", code3: \"PYF\", title: \"French Polynesia\", value: \"French Polynesia\" },\n    { code: \"TF\", code3: \"ATF\", title: \"French Southern Territories (the)\", value: \"French Southern Territories (the)\" },\n    { code: \"GA\", code3: \"GAB\", title: \"Gabon\", value: \"Gabon\" },\n    { code: \"GM\", code3: \"GMB\", title: \"Gambia (the)\", value: \"Gambia (the)\" },\n    { code: \"GE\", code3: \"GEO\", title: \"Georgia\", value: \"Georgia\" },\n    { code: \"DE\", code3: \"DEU\", title: \"Germany\", value: \"Germany\" },\n    { code: \"GH\", code3: \"GHA\", title: \"Ghana\", value: \"Ghana\" },\n    { code: \"GI\", code3: \"GIB\", title: \"Gibraltar\", value: \"Gibraltar\" },\n    { code: \"GR\", code3: \"GRC\", title: \"Greece\", value: \"Greece\" },\n    { code: \"GL\", code3: \"GRL\", title: \"Greenland\", value: \"Greenland\" },\n    { code: \"GD\", code3: \"GRD\", title: \"Grenada\", value: \"Grenada\" },\n    { code: \"GP\", code3: \"GLP\", title: \"Guadeloupe\", value: \"Guadeloupe\" },\n    { code: \"GU\", code3: \"GUM\", title: \"Guam\", value: \"Guam\" },\n    { code: \"GT\", code3: \"GTM\", title: \"Guatemala\", value: \"Guatemala\" },\n    { code: \"GG\", code3: \"GGY\", title: \"Guernsey\", value: \"Guernsey\" },\n    { code: \"GN\", code3: \"GIN\", title: \"Guinea\", value: \"Guinea\" },\n    { code: \"GW\", code3: \"GNB\", title: \"Guinea-Bissau\", value: \"Guinea-Bissau\" },\n    { code: \"GY\", code3: \"GUY\", title: \"Guyana\", value: \"Guyana\" },\n    { code: \"HT\", code3: \"HTI\", title: \"Haiti\", value: \"Haiti\" },\n    { code: \"HM\", code3: \"HMD\", title: \"Heard Island and McDonald Islands\", value: \"Heard Island and McDonald Islands\" },\n    { code: \"VA\", code3: \"VAT\", title: \"Holy See (the)\", value: \"Holy See (the)\" },\n    { code: \"HN\", code3: \"HND\", title: \"Honduras\", value: \"Honduras\" },\n    { code: \"HK\", code3: \"HKG\", title: \"Hong Kong\", value: \"Hong Kong\" },\n    { code: \"HU\", code3: \"HUN\", title: \"Hungary\", value: \"Hungary\" },\n    { code: \"IS\", code3: \"ISL\", title: \"Iceland\", value: \"Iceland\" },\n    { code: \"IN\", code3: \"IND\", title: \"India\", value: \"India\" },\n    { code: \"ID\", code3: \"IDN\", title: \"Indonesia\", value: \"Indonesia\" },\n    { code: \"IR\", code3: \"IRN\", title: \"Iran (Islamic Republic of)\", value: \"Iran (Islamic Republic of)\" },\n    { code: \"IQ\", code3: \"IRQ\", title: \"Iraq\", value: \"Iraq\" },\n    { code: \"IE\", code3: \"IRL\", title: \"Ireland\", value: \"Ireland\" },\n    { code: \"IM\", code3: \"IMN\", title: \"Isle of Man\", value: \"Isle of Man\" },\n    { code: \"IL\", code3: \"ISR\", title: \"Israel\", value: \"Israel\" },\n    { code: \"IT\", code3: \"ITA\", title: \"Italy\", value: \"Italy\" },\n    { code: \"JM\", code3: \"JAM\", title: \"Jamaica\", value: \"Jamaica\" },\n    { code: \"JP\", code3: \"JPN\", title: \"Japan\", value: \"Japan\" },\n    { code: \"JE\", code3: \"JEY\", title: \"Jersey\", value: \"Jersey\" },\n    { code: \"JO\", code3: \"JOR\", title: \"Jordan\", value: \"Jordan\" },\n    { code: \"KZ\", code3: \"KAZ\", title: \"Kazakhstan\", value: \"Kazakhstan\" },\n    { code: \"KE\", code3: \"KEN\", title: \"Kenya\", value: \"Kenya\" },\n    { code: \"KI\", code3: \"KIR\", title: \"Kiribati\", value: \"Kiribati\" },\n    { code: \"KP\", code3: \"PRK\", title: \"Korea (the Democratic People's Republic of)\", value: \"Korea (the Democratic People's Republic of)\" },\n    { code: \"KR\", code3: \"KOR\", title: \"Korea (the Republic of)\", value: \"Korea (the Republic of)\" },\n    { code: \"KW\", code3: \"KWT\", title: \"Kuwait\", value: \"Kuwait\" },\n    { code: \"KG\", code3: \"KGZ\", title: \"Kyrgyzstan\", value: \"Kyrgyzstan\" },\n    { code: \"LA\", code3: \"LAO\", title: \"Lao People's Democratic Republic (the)\", value: \"Lao People's Democratic Republic (the)\" },\n    { code: \"LV\", code3: \"LVA\", title: \"Latvia\", value: \"Latvia\" },\n    { code: \"LB\", code3: \"LBN\", title: \"Lebanon\", value: \"Lebanon\" },\n    { code: \"LS\", code3: \"LSO\", title: \"Lesotho\", value: \"Lesotho\" },\n    { code: \"LR\", code3: \"LBR\", title: \"Liberia\", value: \"Liberia\" },\n    { code: \"LY\", code3: \"LBY\", title: \"Libya\", value: \"Libya\" },\n    { code: \"LI\", code3: \"LIE\", title: \"Liechtenstein\", value: \"Liechtenstein\" },\n    { code: \"LT\", code3: \"LTU\", title: \"Lithuania\", value: \"Lithuania\" },\n    { code: \"LU\", code3: \"LUX\", title: \"Luxembourg\", value: \"Luxembourg\" },\n    { code: \"MO\", code3: \"MAC\", title: \"Macao\", value: \"Macao\" },\n    { code: \"MG\", code3: \"MDG\", title: \"Madagascar\", value: \"Madagascar\" },\n    { code: \"MW\", code3: \"MWI\", title: \"Malawi\", value: \"Malawi\" },\n    { code: \"MY\", code3: \"MYS\", title: \"Malaysia\", value: \"Malaysia\" },\n    { code: \"MV\", code3: \"MDV\", title: \"Maldives\", value: \"Maldives\" },\n    { code: \"ML\", code3: \"MLI\", title: \"Mali\", value: \"Mali\" },\n    { code: \"MT\", code3: \"MLT\", title: \"Malta\", value: \"Malta\" },\n    { code: \"MH\", code3: \"MHL\", title: \"Marshall Islands (the)\", value: \"Marshall Islands (the)\" },\n    { code: \"MQ\", code3: \"MTQ\", title: \"Martinique\", value: \"Martinique\" },\n    { code: \"MR\", code3: \"MRT\", title: \"Mauritania\", value: \"Mauritania\" },\n    { code: \"MU\", code3: \"MUS\", title: \"Mauritius\", value: \"Mauritius\" },\n    { code: \"YT\", code3: \"MYT\", title: \"Mayotte\", value: \"Mayotte\" },\n    { code: \"MX\", code3: \"MEX\", title: \"Mexico\", value: \"Mexico\" },\n    { code: \"FM\", code3: \"FSM\", title: \"Micronesia (Federated States of)\", value: \"Micronesia (Federated States of)\" },\n    { code: \"MD\", code3: \"MDA\", title: \"Moldova (the Republic of)\", value: \"Moldova (the Republic of)\" },\n    { code: \"MC\", code3: \"MCO\", title: \"Monaco\", value: \"Monaco\" },\n    { code: \"MN\", code3: \"MNG\", title: \"Mongolia\", value: \"Mongolia\" },\n    { code: \"ME\", code3: \"MNE\", title: \"Montenegro\", value: \"Montenegro\" },\n    { code: \"MS\", code3: \"MSR\", title: \"Montserrat\", value: \"Montserrat\" },\n    { code: \"MA\", code3: \"MAR\", title: \"Morocco\", value: \"Morocco\" },\n    { code: \"MZ\", code3: \"MOZ\", title: \"Mozambique\", value: \"Mozambique\" },\n    { code: \"MM\", code3: \"MMR\", title: \"Myanmar\", value: \"Myanmar\" },\n    { code: \"NA\", code3: \"NAM\", title: \"Namibia\", value: \"Namibia\" },\n    { code: \"NR\", code3: \"NRU\", title: \"Nauru\", value: \"Nauru\" },\n    { code: \"NP\", code3: \"NPL\", title: \"Nepal\", value: \"Nepal\" },\n    { code: \"NL\", code3: \"NLD\", title: \"Netherlands (the)\", value: \"Netherlands (the)\" },\n    { code: \"NC\", code3: \"NCL\", title: \"New Caledonia\", value: \"New Caledonia\" },\n    { code: \"NZ\", code3: \"NZL\", title: \"New Zealand\", value: \"New Zealand\" },\n    { code: \"NI\", code3: \"NIC\", title: \"Nicaragua\", value: \"Nicaragua\" },\n    { code: \"NE\", code3: \"NER\", title: \"Niger (the)\", value: \"Niger (the)\" },\n    { code: \"NG\", code3: \"NGA\", title: \"Nigeria\", value: \"Nigeria\" },\n    { code: \"NU\", code3: \"NIU\", title: \"Niue\", value: \"Niue\" },\n    { code: \"NF\", code3: \"NFK\", title: \"Norfolk Island\", value: \"Norfolk Island\" },\n    { code: \"MP\", code3: \"MNP\", title: \"Northern Mariana Islands (the)\", value: \"Northern Mariana Islands (the)\" },\n    { code: \"NO\", code3: \"NOR\", title: \"Norway\", value: \"Norway\" },\n    { code: \"OM\", code3: \"OMN\", title: \"Oman\", value: \"Oman\" },\n    { code: \"PK\", code3: \"PAK\", title: \"Pakistan\", value: \"Pakistan\" },\n    { code: \"PW\", code3: \"PLW\", title: \"Palau\", value: \"Palau\" },\n    { code: \"PS\", code3: \"PSE\", title: \"Palestine, State of\", value: \"Palestine, State of\" },\n    { code: \"PA\", code3: \"PAN\", title: \"Panama\", value: \"Panama\" },\n    { code: \"PG\", code3: \"PNG\", title: \"Papua New Guinea\", value: \"Papua New Guinea\" },\n    { code: \"PY\", code3: \"PRY\", title: \"Paraguay\", value: \"Paraguay\" },\n    { code: \"PE\", code3: \"PER\", title: \"Peru\", value: \"Peru\" },\n    { code: \"PH\", code3: \"PHL\", title: \"Philippines (the)\", value: \"Philippines (the)\" },\n    { code: \"PN\", code3: \"PCN\", title: \"Pitcairn\", value: \"Pitcairn\" },\n    { code: \"PL\", code3: \"POL\", title: \"Poland\", value: \"Poland\" },\n    { code: \"PT\", code3: \"PRT\", title: \"Portugal\", value: \"Portugal\" },\n    { code: \"PR\", code3: \"PRI\", title: \"Puerto Rico\", value: \"Puerto Rico\" },\n    { code: \"QA\", code3: \"QAT\", title: \"Qatar\", value: \"Qatar\" },\n    { code: \"MK\", code3: \"MKD\", title: \"Republic of North Macedonia\", value: \"Republic of North Macedonia\" },\n    { code: \"RO\", code3: \"ROU\", title: \"Romania\", value: \"Romania\" },\n    { code: \"RU\", code3: \"RUS\", title: \"Russian Federation (the)\", value: \"Russian Federation (the)\" },\n    { code: \"RW\", code3: \"RWA\", title: \"Rwanda\", value: \"Rwanda\" },\n    { code: \"RE\", code3: \"REU\", title: \"Réunion\", value: \"Réunion\" },\n    { code: \"BL\", code3: \"BLM\", title: \"Saint Barthélemy\", value: \"Saint Barthélemy\" },\n    { code: \"SH\", code3: \"SHN\", title: \"Saint Helena, Ascension and Tristan da Cunha\", value: \"Saint Helena, Ascension and Tristan da Cunha\" },\n    { code: \"KN\", code3: \"KNA\", title: \"Saint Kitts and Nevis\", value: \"Saint Kitts and Nevis\" },\n    { code: \"LC\", code3: \"LCA\", title: \"Saint Lucia\", value: \"Saint Lucia\" },\n    { code: \"MF\", code3: \"MAF\", title: \"Saint Martin (French part)\", value: \"Saint Martin (French part)\" },\n    { code: \"PM\", code3: \"SPM\", title: \"Saint Pierre and Miquelon\", value: \"Saint Pierre and Miquelon\" },\n    { code: \"VC\", code3: \"VCT\", title: \"Saint Vincent and the Grenadines\", value: \"Saint Vincent and the Grenadines\" },\n    { code: \"WS\", code3: \"WSM\", title: \"Samoa\", value: \"Samoa\" },\n    { code: \"SM\", code3: \"SMR\", title: \"San Marino\", value: \"San Marino\" },\n    { code: \"ST\", code3: \"STP\", title: \"Sao Tome and Principe\", value: \"Sao Tome and Principe\" },\n    { code: \"SA\", code3: \"SAU\", title: \"Saudi Arabia\", value: \"Saudi Arabia\" },\n    { code: \"SN\", code3: \"SEN\", title: \"Senegal\", value: \"Senegal\" },\n    { code: \"RS\", code3: \"SRB\", title: \"Serbia\", value: \"Serbia\" },\n    { code: \"SC\", code3: \"SYC\", title: \"Seychelles\", value: \"Seychelles\" },\n    { code: \"SL\", code3: \"SLE\", title: \"Sierra Leone\", value: \"Sierra Leone\" },\n    { code: \"SG\", code3: \"SGP\", title: \"Singapore\", value: \"Singapore\" },\n    { code: \"SX\", code3: \"SXM\", title: \"Sint Maarten (Dutch part)\", value: \"Sint Maarten (Dutch part)\" },\n    { code: \"SK\", code3: \"SVK\", title: \"Slovakia\", value: \"Slovakia\" },\n    { code: \"SI\", code3: \"SVN\", title: \"Slovenia\", value: \"Slovenia\" },\n    { code: \"SB\", code3: \"SLB\", title: \"Solomon Islands\", value: \"Solomon Islands\" },\n    { code: \"SO\", code3: \"SOM\", title: \"Somalia\", value: \"Somalia\" },\n    { code: \"ZA\", code3: \"ZAF\", title: \"South Africa\", value: \"South Africa\" },\n    { code: \"GS\", code3: \"SGS\", title: \"South Georgia and the South Sandwich Islands\", value: \"South Georgia and the South Sandwich Islands\" },\n    { code: \"SS\", code3: \"SSD\", title: \"South Sudan\", value: \"South Sudan\" },\n    { code: \"ES\", code3: \"ESP\", title: \"Spain\", value: \"Spain\" },\n    { code: \"LK\", code3: \"LKA\", title: \"Sri Lanka\", value: \"Sri Lanka\" },\n    { code: \"SD\", code3: \"SDN\", title: \"Sudan (the)\", value: \"Sudan (the)\" },\n    { code: \"SR\", code3: \"SUR\", title: \"Surititle\", value: \"Surititle\" },\n    { code: \"SJ\", code3: \"SJM\", title: \"Svalbard and Jan Mayen\", value: \"Svalbard and Jan Mayen\" },\n    { code: \"SE\", code3: \"SWE\", title: \"Sweden\", value: \"Sweden\" },\n    { code: \"CH\", code3: \"CHE\", title: \"Switzerland\", value: \"Switzerland\" },\n    { code: \"SY\", code3: \"SYR\", title: \"Syrian Arab Republic\", value: \"Syrian Arab Republic\" },\n    { code: \"TW\", code3: \"TWN\", title: \"Taiwan\", value: \"Taiwan\" },\n    { code: \"TJ\", code3: \"TJK\", title: \"Tajikistan\", value: \"Tajikistan\" },\n    { code: \"TZ\", code3: \"TZA\", title: \"Tanzania, United Republic of\", value: \"Tanzania, United Republic of\" },\n    { code: \"TH\", code3: \"THA\", title: \"Thailand\", value: \"Thailand\" },\n    { code: \"TL\", code3: \"TLS\", title: \"Timor-Leste\", value: \"Timor-Leste\" },\n    { code: \"TG\", code3: \"TGO\", title: \"Togo\", value: \"Togo\" },\n    { code: \"TK\", code3: \"TKL\", title: \"Tokelau\", value: \"Tokelau\" },\n    { code: \"TO\", code3: \"TON\", title: \"Tonga\", value: \"Tonga\" },\n    { code: \"TT\", code3: \"TTO\", title: \"Trinidad and Tobago\", value: \"Trinidad and Tobago\" },\n    { code: \"TN\", code3: \"TUN\", title: \"Tunisia\", value: \"Tunisia\" },\n    { code: \"TR\", code3: \"TUR\", title: \"Turkey\", value: \"Turkey\" },\n    { code: \"TM\", code3: \"TKM\", title: \"Turkmenistan\", value: \"Turkmenistan\" },\n    { code: \"TC\", code3: \"TCA\", title: \"Turks and Caicos Islands (the)\", value: \"Turks and Caicos Islands (the)\" },\n    { code: \"TV\", code3: \"TUV\", title: \"Tuvalu\", value: \"Tuvalu\" },\n    { code: \"UG\", code3: \"UGA\", title: \"Uganda\", value: \"Uganda\" },\n    { code: \"UA\", code3: \"UKR\", title: \"Ukraine\", value: \"Ukraine\" },\n    { code: \"AE\", code3: \"ARE\", title: \"United Arab Emirates (the)\", value: \"United Arab Emirates (the)\" },\n    { code: \"GB\", code3: \"GBR\", title: \"United Kingdom of Great Britain and Northern Ireland (the)\", value: \"United Kingdom of Great Britain and Northern Ireland (the)\" },\n    { code: \"UM\", code3: \"UMI\", title: \"United States Minor Outlying Islands (the)\", value: \"United States Minor Outlying Islands (the)\" },\n    { code: \"US\", code3: \"USA\", title: \"United States of America (the)\", value: \"United States of America (the)\" },\n    { code: \"UY\", code3: \"URY\", title: \"Uruguay\", value: \"Uruguay\" },\n    { code: \"UZ\", code3: \"UZB\", title: \"Uzbekistan\", value: \"Uzbekistan\" },\n    { code: \"VU\", code3: \"VUT\", title: \"Vanuatu\", value: \"Vanuatu\" },\n    { code: \"VE\", code3: \"VEN\", title: \"Venezuela (Bolivarian Republic of)\", value: \"Venezuela (Bolivarian Republic of)\" },\n    { code: \"VN\", code3: \"VNM\", title: \"Viet Nam\", value: \"Viet Nam\" },\n    { code: \"VG\", code3: \"VGB\", title: \"Virgin Islands (British)\", value: \"Virgin Islands (British)\" },\n    { code: \"VI\", code3: \"VIR\", title: \"Virgin Islands (U.S.)\", value: \"Virgin Islands (U.S.)\" },\n    { code: \"WF\", code3: \"WLF\", title: \"Wallis and Futuna\", value: \"Wallis and Futuna\" },\n    { code: \"EH\", code3: \"ESH\", title: \"Western Sahara\", value: \"Western Sahara\" },\n    { code: \"YE\", code3: \"YEM\", title: \"Yemen\", value: \"Yemen\" },\n    { code: \"ZM\", code3: \"ZMB\", title: \"Zambia\", value: \"Zambia\" },\n    { code: \"ZW\", code3: \"ZWE\", title: \"Zimbabwe\", value: \"Zimbabwe\" },\n    { code: \"AX\", code3: \"ALA\", title: \"Åland Islands\", value: \"Åland Islands\" },\n];","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * enum for menu types being used for routing\n */\nexport enum ResourceType {\n  Device = 'device',\n  Organization = 'organization',\n  Service = 'service',\n  User = 'user',\n  Vessel = 'vessel',\n  MMS = 'mms',\n  Role = 'role',\n  Agent = 'agent',\n  Instance = 'instance',\n  Design = 'design',\n  InstanceOfOrg = 'instanceorg',\n  OrgCandidate = 'orgcandidate',\n  NewOrganization = 'newOrganization',\n}\n\n/**\n * scope of resource type in MIR\n */\nexport const MIRResourceType: string[] = [ ResourceType.Device, ResourceType.Vessel, ResourceType.User,\n  ResourceType.Service, ResourceType.Role, ResourceType.Agent ];\n\n/**\n * enum of MCP entity types. Entity is a subset of resource.\n */\n export enum EntityType {\n  Device = 'device',\n  Organization = 'organization',\n  Service = 'service',\n  User = 'user',\n  Vessel = 'vessel',\n  MMS = 'mms',\n}\n\n/**\n * scope of MCP entity types\n */\n export const EntityTypes: string[] = [ EntityType.Device, EntityType.Organization,\n  EntityType.Service, EntityType.User, EntityType.Vessel, EntityType.MMS ];\n\n/**\n * readable names for MenuTypes\n */\nexport const MenuTypeNames = {\n  vessel: 'vessel',\n  device: 'device',\n  user: 'user',\n  organization: 'organization',\n  service: 'service',\n  role: 'role',\n  agent: 'agent',\n  mms: 'mms',\n  instance: 'service instance',\n  instanceorg: 'service instance',\n  orgcandidate: 'unapproved organization',\n  orgsvc: 'owned service',\n};\n\n/**\n * icon names for each MenuType\n */\nexport const MenuTypeIconNames = {\n  vessel: 'ship',\n  device: 'hdd',\n  user: 'user',\n  organization: 'flag',\n  service: 'cog',\n  role: 'id-badge',\n  agent: 'user',\n  mms: 'forward',\n  instance: 'compass',\n  instanceorg: 'compass',\n  orgcandidate: 'clipboard',\n};\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NbCardModule, NbSpinnerModule, NbButtonModule, NbIconModule, NbDatepickerModule, NbSelectModule, NbInputModule, NbTabsetModule, NbCalendarModule, NbCalendarRangeModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditableFormComponent } from './editable-form/editable-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\nimport { CertificatesComponent } from './certificates/certificates.component';\nimport { CertIssueDialogComponent } from './certificates/cert-issue-dialog/cert-issue-dialog.component';\nimport { CertRevokeDialogComponent } from './certificates/cert-revoke-dialog/cert-revoke-dialog.component';\nimport { ThemeModule } from '../@theme/theme.module';\nimport { XmlEditDialogComponent } from './xml-edit-dialog/xml-edit-dialog.component';\nimport { InputButtonListComponent } from './input-button-list/input-button-list.component';\nimport { InputImageComponent } from './input-image/input-image.component';\nimport { InputMcpEntityComponent } from './input-mcp-entity/input-mcp-entity.component';\nimport { InputFileListComponent } from './input-file-list/input-file-list.component';\nimport { InputGeometryComponent } from './input-geometry/input-geometry.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { DayCellComponent } from './calendar/day-cell/day-cell.component';\n\n@NgModule({\n  declarations: [\n    EditableFormComponent,\n    CertificatesComponent,\n    CertIssueDialogComponent,\n    CertRevokeDialogComponent,\n    XmlEditDialogComponent,\n    InputButtonListComponent,\n    InputImageComponent,\n    InputMcpEntityComponent,\n    InputFileListComponent,\n    InputGeometryComponent,\n    CalendarComponent,\n    DayCellComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbSpinnerModule,\n    NbButtonModule,\n    NbIconModule,\n    NbCalendarModule,\n    NbCalendarRangeModule,\n    NbDatepickerModule,\n    NbSelectModule,\n    NbInputModule,\n    NbTabsetModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n    NbSelectModule,\n  ],\n  exports: [\n    EditableFormComponent,\n    InputGeometryComponent,\n  ],\n})\nexport class SharedModule { }\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NotifierService } from 'angular-notifier';\nimport { XmlControllerService } from './../../backend-api/service-registry/api/xmlController.service';\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { NbDialogRef, NbDialogService } from '@nebular/theme';\nimport { XmlDto } from '../../backend-api/service-registry';\n\n@Component({\n  selector: 'ngx-xml-edit-dialog',\n  templateUrl: './xml-edit-dialog.component.html',\n  styleUrls: ['./xml-edit-dialog.component.scss']\n})\nexport class XmlEditDialogComponent implements OnInit {\n\n  @Input() xml: XmlDto;\n  @Input() isEditing: boolean;\n  @Input() onUpdate: (xml: XmlDto) => void;\n  //@Output() onUpdate = new EventEmitter<FormGroup>();\n  \n  isValidated = false;\n  formGroup: FormGroup;\n  initialXml: XmlDto = {\n    id: 0,\n    name: '',\n    content: '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n<serviceInstance xmlns=\"http://iala-aism.org/g1128/v1.3/ServiceInstanceSchema.xsd\" xmlns:ns2=\"http://iala-aism.org/g1128/v1.3/ServiceSpecificationSchema.xsd\">\\n</serviceInstance>',\n    comment: '',\n    contentContentType: 'G1128 Instance Specification XML',\n  };\n  \n  constructor(protected ref: NbDialogRef<XmlEditDialogComponent>,\n    private xmlControllerService: XmlControllerService,\n    private notifierService: NotifierService,\n    private dialogService: NbDialogService) { }\n\n  ngOnInit(): void {\n    if (this.xml) {\n      this.initialXml = this.xml;\n    }\n\n    this.formGroup = new FormGroup({\n      name: new FormControl(),\n      content: new FormControl(),\n      comment: new FormControl(),\n      contentContentType: new FormControl(),\n    });\n\n    if (this.xml) {\n      this.formGroup.get('name').setValue(this.xml.name);\n      this.formGroup.get('content').setValue(this.xml.content);\n      this.formGroup.get('comment').setValue(this.xml.comment);\n      this.formGroup.get('contentContentType').setValue(this.xml.contentContentType);\n    }\n  }\n\n  isThereAnyDifference(initial: XmlDto, current: XmlDto) {\n    return Object.entries(current).filter(e => current[e[0]] !== e[1]).length > 0;\n  }\n\n  dismiss() {\n    if (this.isEditing && this.isThereAnyDifference(this.initialXml, this.formGroup.value)) {\n      this.ref.close();\n    } else {\n      this.ref.close();\n    }\n  }\n\n  validate() {\n    const xmlContent = this.formGroup.value.content;\n    this.xmlControllerService.validateXmlWithG1128Schema(xmlContent, 'INSTANCE').subscribe(\n      data => {\n        this.isValidated = true;\n        this.notifierService.notify('success', 'XML is valid according to G1128 instance schema');\n      },\n      error => {\n        this.isValidated = false;\n        this.notifierService.notify('error', error.message);\n      },\n    );\n  }\n\n  getFormValue() {\n    const data = {id: this.initialXml.id};\n    return Object.assign({}, data, this.formGroup.value);\n  }\n\n  save() {\n    this.onUpdate(this.getFormValue());\n  }\n\n  open2(dialog: TemplateRef<any>) {\n    this.dialogService.open(\n      dialog,\n      { context: 'this is some additional data passed to dialog' });\n  }\n}\n","<nb-card class=\"modal-window\">\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col\">\n                G1128 XML editor\n            </div>\n            <div class=\"col-md-auto\">\n                <a href=\"https://www.iala-aism.org/product/g1128-specification-of-e-nav-technical-service-fillable-annex-f-service-instance-description/\" target=\"_blank\">What is G1128?</a>\n            </div>\n        </div>\n    </nb-card-header>\n    <nb-card-body>\n        <form [formGroup]=\"formGroup\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <span class=\"label\">Name</span>\n                </div>\n                <div class=\"col-sm-10\">\n                    <div *ngIf=\"isEditing\">\n                        <input nbInput fullWidth formControlName=\"name\" placeholder='Enter name' value=\"{{ this.xml ? this.xml['name'] : '' }}\">\n                    </div>\n                    <div *ngIf=\"!isEditing\">\n                        <span>{{ this.xml ? this.xml['name'] : 'No name' }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <span class=\"label\">Content</span>\n                    <textarea rows=\"20\" nbInput formControlName=\"content\" fullWidth placeholder=\"G1128 Service Instance XML\">{{ this.xml ? this.xml[\"content\"] : '' }}</textarea>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <span class=\"label\">Comment</span>\n                </div>\n                <div class=\"col-sm-10\">\n                    <div *ngIf=\"isEditing\">\n                        <input nbInput fullWidth formControlName=\"comment\" value=\"{{ this.xml ? this.xml['comment'] : '' }}\" placeholder=\"Enter comment\">\n                    </div>\n                    <div *ngIf=\"!isEditing\">\n                        <span >{{ this.xml ? this.xml[\"comment\"] : '' }}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col\">\n                    <span class=\"label\">ContentType</span>\n                </div>\n                <div class=\"col-sm-10\">\n                    <div *ngIf=\"isEditing\">\n                        <input nbInput formControlName=\"contentContentType\" fullWidth value=\"{{ this.xml ? this.xml['contentContentType'] : '' }}\">\n                    </div>\n                    <div *ngIf=\"!isEditing\">\n                        <span>{{ this.xml ? this.xml[\"contentContentType\"] : '' }}</span>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </nb-card-body>\n    <nb-card-footer>\n        <div class=\"buttons-row\">\n            <button nbButton *ngIf=\"isEditing\" status=\"success\" (click)=\"dismiss()\">Create from Instance</button>\n            <button nbButton *ngIf=\"isEditing\" status=\"primary\" (click)=\"validate()\">Validate</button>\n            <button nbButton *ngIf=\"isEditing\" status=\"success\" [disabled]=\"!isValidated\" (click)=\"save()\">Save and apply</button>\n            <button nbButton status=\"danger\" (click)=\"dismiss()\">Cancel</button>\n        </div>\n    </nb-card-footer>\n</nb-card>\n  ","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthService } from '../auth/auth.service';\nimport { ResourceType } from '../shared/models/menuType';\nimport { AuthPermission, AuthPermissionForMSR, PermissionResolver } from '../auth/auth.permission';\n\nexport const hasAdminPermission = (context: ResourceType, authService: AuthService,\n      isEditing: boolean, isOurServiceInstance?: boolean): boolean => {\n  if (!authService.authState.rolesLoaded) {\n    console.log('Role hasn\\'t been loaded!');\n    return false;\n  }\n  // MIR\n  if (context !== ResourceType.Instance) {\n    if (hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.SiteAdmin)) { // super admin\n      return true;\n    } else if (context === ResourceType.User) {\n      return hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.UserAdmin);\n    } else if (context === ResourceType.Device) {\n      return hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.DeviceAdmin);\n    } else if (context === ResourceType.Vessel) {\n      return hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.VesselAdmin);\n    } else if (context === ResourceType.MMS) {\n      return hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.MMSAdmin);\n    } else if (context === ResourceType.Service) {\n      return hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.ServiceAdmin);\n    } else if (context === ResourceType.Organization || context === ResourceType.Role) {\n      return hasAdminPermissionInMIR(authService.authState.permission, AuthPermission.OrgAdmin);\n    } else {\n      return false;\n    }\n  } else {\n  // MSR\n    return isEditing ? // for editing\n      // when it is for editing\n      hasAdminPermissionInMSR(authService.authState.user.keycloakMSRPermissions, AuthPermissionForMSR.MSRAdmin) ||\n        (isOurServiceInstance &&\n        hasAdminPermissionInMSR(authService.authState.user.keycloakMSRPermissions, AuthPermissionForMSR.OrgServiceAdmin)) :\n      // for creating\n      hasAdminPermissionInMSR(authService.authState.user.keycloakMSRPermissions, AuthPermissionForMSR.OrgServiceAdmin) ||\n      hasAdminPermissionInMSR(authService.authState.user.keycloakMSRPermissions, AuthPermissionForMSR.MSRAdmin);\n  }\n};\n\nexport const hasAdminPermissionInMIR = (myPermission: AuthPermission, permissionRole: AuthPermission): boolean => {\n  switch (permissionRole) {\n    case AuthPermission.User:\n      return true;\n    case AuthPermission.SiteAdmin:\n      return PermissionResolver.isSiteAdmin(myPermission);\n    case AuthPermission.OrgAdmin:\n      return PermissionResolver.isOrgAdmin(myPermission);\n    case AuthPermission.ApproveOrg:\n      return PermissionResolver.canApproveOrg(myPermission);\n    case AuthPermission.EntityAdmin:\n      return PermissionResolver.isEntityAdmin(myPermission);\n    case AuthPermission.ServiceAdmin:\n      return PermissionResolver.isServiceAdmin(myPermission);\n    case AuthPermission.DeviceAdmin:\n      return PermissionResolver.isDeviceAdmin(myPermission);\n    case AuthPermission.VesselAdmin:\n      return PermissionResolver.isVesselAdmin(myPermission);\n    case AuthPermission.UserAdmin:\n      return PermissionResolver.isUserAdmin(myPermission);\n    default:\n      return false;\n        }\n};\n\nexport const hasAdminPermissionInMSR = (myPermissions: string[], permissionRole: AuthPermissionForMSR): boolean => {\n  switch (permissionRole) {\n    case AuthPermissionForMSR.User:\n      return true;\n    case AuthPermissionForMSR.OrgServiceAdmin:\n      return PermissionResolver.isOrgServiceAdmin(myPermissions);\n    case AuthPermissionForMSR.LedgerAdmin:\n      return PermissionResolver.isLedgerAdmin(myPermissions);\n    case AuthPermissionForMSR.MSRAdmin:\n      return PermissionResolver.isMSRAdmin(myPermissions);\n    default:\n      return false;\n }\n};","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RevokationReasonEnum } from './../backend-api/identity-registry/model/certificateRevocation';\nexport interface ReasonOption {\n  value: RevokationReasonEnum;\n  title: string;\n  description: string;\n  reference: string;\n}\n\n// reference: https://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.509-201210-S!!PDF-E&type=items\nexport const getReasonOptionFromRevocationReason = (revocationReason:RevokationReasonEnum): ReasonOption => {\n    switch (revocationReason) {\n      case RevokationReasonEnum.Aacompromise: {\n        return { value: revocationReason,\n          title: 'AA compromised',\n          description: 'This reason indicates that it is known or suspected that the certificate subject\\'s private key has been compromised. It applies to authority attribute (AA) certificates only.',\n          reference: 'https://docs.oracle.com/javase/8/docs/api/java/security/cert/CRLReason.html'};\n      }\n      case RevokationReasonEnum.Affiliationchanged: {\n        return { value: revocationReason,\n          title: 'Affiliation changed',\n          description: 'The user has terminated his or her relationship with the organization indicated in the Distinguished Name attribute of the certificate. This revocation code is typically used when an individual is terminated or has resigned from an organization. You do not have to revoke a certificate when a user changes departments, unless your security policy requires different certificate be issued by a departmental CA.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Cacompromise: {\n        return { value: revocationReason,\n          title: 'CA compromised',\n          description: 'The token or disk location where the CA\\'s private key is stored has been compromised and is in the possession of an unauthorized individual. When a CA\\'s private key is revoked, this results in all certificates issued by the CA that are signed using the private key associated with the revoked certificate being considered revoked.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Certificatehold: {\n        return { value: revocationReason,\n          title: 'Certificate Hold',\n          description: 'A temporary revocation that indicates that a CA will not vouch for a certificate at a specific point in time. Once a certificate is revoked with a CertificateHold reason code, the certificate can then be revoked with another Reason Code, or unrevoked and returned to use.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Cessationofoperation: {\n        return { value: revocationReason,\n          title: 'Cessation of Operation',\n          description: 'If a CA is decommissioned, no longer to be used, the CA\\'s certificate should be revoked with this reason code. Do not revoke the CA\\'s certificate if the CA no longer issues new certificates, yet still publishes CRLs for the currently issued certificates.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Keycompromise: {\n        return { value: revocationReason,\n          title: 'Key compromised',\n          description: 'The token or disk location where the private key associated with the certificate has been compromised and is in the possession of an unauthorized individual. This can include the case where a laptop is stolen, or a smart card is lost.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Privilegewithdrawn: {\n        return { value: revocationReason,\n          title: 'Privilege withdrawn',\n          description: 'A certificate (public-key or attribute certificate) was revoked because a privilege contained within that certificate has been withdrawn',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Removefromcrl: {\n        return { value: revocationReason,\n          title: 'Remove from CRL',\n          description: 'If a certificate is revoked with the CertificateHold reason code, it is possible to \"unrevoke\" a certificate. The unrevoking process still lists the certificate in the CRL, but with the reason code set to RemoveFromCRL.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Superseded: {\n        return { value: revocationReason,\n          title: 'Superseded',\n          description: 'A replacement certificate has been issued to a user, and the reason does not fall under the previous reasons. This revocation reason is typically used when a smart card fails, the password for a token is forgotten by a user, or the user has changed their legal name.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      case RevokationReasonEnum.Unspecified: {\n        return { value: revocationReason,\n          title: 'Unspecified',\n          description: 'It is possible to revoke a certificate without providing a specific reason code. While it is possible to revoke a certificate with the Unspecified reason code, this is not recommended, as it does not provide an audit trail as to why a certificate is revoked.',\n          reference: 'https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc700843(v=technet.10)?redirectedfrom=MSDN#revocation-reasons'};\n      }\n      default : {\n        return { value: revocationReason,\n          title: RevokationReasonEnum[revocationReason],\n          description: 'No description',\n          reference: ''};\n      }\n    }\n  }","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VesselAttribute } from \"../backend-api/identity-registry/model/vesselAttribute\";\n\nexport const formatData = (data: object): object => {\n  const menuData = {};\n  for (const key in data) {\n    if (key === \"attributes\") {\n      // for vessel\n      for (const attr_key in data[key]) {\n        const attributeName = camel2snake(data[key][attr_key].attributeName);\n        if (\n          Object.values(VesselAttribute.AttributeNameEnum).find(\n            (e) => e === attributeName\n          )\n        ) {\n          menuData[snake2camel(attributeName)] =\n            data[key][attr_key].attributeValue;\n        }\n      }\n    } else {\n      menuData[key] = data[key];\n    }\n  }\n  return menuData;\n};\n\nexport const formatServiceData = (data: object): object => {\n  const menuData = {};\n  for (const key in data) {\n    menuData[key] = data[key];\n  }\n  return menuData;\n};\n\nexport const formatVesselToUpload = (vesselData: object): object => {\n  const attributes = [];\n  for (const key in vesselData) {\n    const attributeName = camel2snake(key);\n    if (\n      Object.values(VesselAttribute.AttributeNameEnum).find(\n        (e) => e === attributeName\n      )\n    ) {\n      attributes.push({\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        attributeName: attributeName,\n        attributeValue: vesselData[key],\n      });\n      delete vesselData[key];\n    }\n  }\n  vesselData[\"attributes\"] = attributes;\n  return vesselData;\n};\n\nconst snake2camel = (input) =>\n  input\n    .split(\"-\")\n    .reduce(\n      (res, word, i) =>\n        i === 0\n          ? word.toLowerCase()\n          : `${res}${word.charAt(0).toUpperCase()}${word\n              .substr(1)\n              .toLowerCase()}`,\n      \"\"\n    );\n\nconst camel2snake = (str: string): string =>\n  str.replace(/[A-Z]/g, (constter) => `-${constter.toLowerCase()}`);\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as L from 'leaflet';\nimport { geojsonToWKT } from '@terraformer/wkt';\n\nexport const getGeometryCollectionFromMap = (drawnItems: any) => {\n    // Initialise a geometry collection\n    const geometry = {\n        type: 'GeometryCollection',\n        geometries: [],\n        crs: {\n            type: 'name',\n            properties: {\n                name: 'EPSG:4326',\n            },\n        },\n    };\n    drawnItems.toGeoJSON().features.forEach(feature => {\n        geometry.geometries.push(feature.geometry);\n    });\n\n    // And return\n    return geometry;\n}\n\nexport const getSingleGeometryFromMap = (drawnItems: any) => {\n    // Initialise a single geometry object\n    var geometry = undefined;\n    console.log(drawnItems.toGeoJSON());\n    drawnItems.toGeoJSON().features.forEach(feature => {\n        geometry = feature.geometry;\n    });\n    // And return\n    return geometry;\n}\n\nexport const populateWKTTextArea = (drawnItems: any): string => {\n    const geometry = getSingleGeometryFromMap(drawnItems);\n    if(geometry) {\n        return geojsonToWKT(geometry);\n    } else {\n        return '';\n    }\n}\n\nexport const addNonGroupLayers = (sourceLayer: any, targetGroup: any) => {\n    if (sourceLayer instanceof L.LayerGroup) {\n      sourceLayer.eachLayer(function(layer) {\n        addNonGroupLayers(layer, targetGroup);\n      });\n    } else {\n      targetGroup.addLayer(sourceLayer);\n    }\n}\n\nexport const removeLayers = (sourceLayer: any, targetGroup: any) => {\n    if (sourceLayer instanceof L.LayerGroup) {\n        sourceLayer.eachLayer(function(layer) {\n            removeLayers(layer, targetGroup);\n        });\n    } else {\n        targetGroup.removeLayer(sourceLayer);\n    }\n}","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthService } from './../auth/auth.service';\nimport { ResourceType } from \"../shared/models/menuType\";\nimport { Injectable } from \"@angular/core\";\nimport { AppConfig } from \"../app.config\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MrnHelperService {\n  private idpNamespace = AppConfig.IDP_NAMESPACE;\n  public mrnMCP: string = \"urn:mrn:mcp:\";\n\n  constructor(private authService: AuthService) {\n  }\n\n  public shortIdFromMrn(mrn: string) {\n    const split = mrn.split(\":\");\n    return split[split.length - 1];\n  }\n\n  private mrnPreFix(): string {\n    return this.mrnPreFixForOrg(this.authService.authState.orgMrn);\n  }\n\n  private mrnPreFixForOrg(orgMrn: string): string {\n    const orgSplit = orgMrn.split(\":org:\");\n    return orgSplit[0] + \":\";\n  }\n\n  public orgShortId(): string {\n    return this.authService.authState.orgMrn ?\n    this.shortIdFromMrn(this.authService.authState.orgMrn) :\n    undefined;\n  }\n\n  public mrnMcpIdpRegexForOrg(): string {\n    return (\n      \"urn:mrn:mcp:(device|org|user|vessel|service|mms):\" +\n      this.idpNamespace +\n      \":((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|)*)$\"\n    );\n  }\n\n  public mrnRegex(): string {\n    return \"urn:mrn:([a-z0-9]([a-z0-9]|-){0,20}[a-z0-9]):([a-z0-9][-a-z0-9]{0,20}[a-z0-9]):((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|)*)((?+((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)||?)*))?(?=((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)||?)*))?)?(#(((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)||?)*))?$\";\n  }\n\n  public mrnMcpIdpRegex(orgShortId?: string): string {\n    return (\n      \"urn:mrn:mcp:(device|org|user|vessel|service|mms):\" +\n      this.idpNamespace +\n      \":\" +\n      (orgShortId ? orgShortId : this.orgShortId()) +\n      \"((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|)*)$\"\n    );\n  }\n\n  public mrnMask(menuType: string, orgShortId? : string) {\n    switch (menuType) {\n      case ResourceType.Device:\n        return this.mrnMaskForDevice(orgShortId);\n      case ResourceType.User:\n        return this.mrnMaskForUser(orgShortId);\n      case ResourceType.Organization:\n        return this.mrnMaskForOrganization();\n      case ResourceType.Vessel:\n        return this.mrnMaskForVessel(orgShortId);\n      case ResourceType.Instance:\n        return this.mrnMaskForInstance(orgShortId);\n      case ResourceType.Design:\n        return this.mrnMaskForDesign(orgShortId);\n      case ResourceType.Service:\n        return this.mrnMaskForInstance(orgShortId);\n      case ResourceType.MMS:\n        return this.mrnMaskForMms(orgShortId);\n      default:\n        return this.mrnMaskForOrganization();\n    }\n  }\n\n  public mrnPattern(): string {\n    return \"^((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|/)*)$\";\n  }\n  public mrnPatternError(): string {\n    return \"It should contain at least 3 characters and only a-z 0-9 + , / ~ - . : = @ ; $ _ ! * '\";\n  }\n\n  public mrnMaskForVessel(orgShortId?: string): string {\n    return (\n      this.mrnMCP +\n      \"vessel:\" +\n      this.idpNamespace +\n      \":\" +\n      (orgShortId ? orgShortId : this.orgShortId()) +\n      \":\"\n    );\n  }\n\n  public mrnMaskForMms(orgShortId?: string): string {\n    return (\n      this.mrnMCP + \"mms:\" + this.idpNamespace + \":\" + (orgShortId ? orgShortId : this.orgShortId()) + \":\"\n    );\n  }\n\n  public mrnMaskForDevice(orgShortId?: string): string {\n    return (\n      this.mrnMCP +\n      \"device:\" +\n      this.idpNamespace +\n      \":\" +\n      (orgShortId ? orgShortId : this.orgShortId()) +\n      \":\"\n    );\n  }\n\n  public mrnMaskForOrganization(): string {\n    return this.mrnMCP + \"org:\" + this.idpNamespace + \":\";\n  }\n\n  public mrnMaskForUserOfOrg(orgMrn: string): string {\n    return (\n      this.mrnMCP +\n      \"user:\" +\n      this.idpNamespace +\n      \":\" +\n      this.shortIdFromMrn(orgMrn) +\n      \":\"\n    );\n  }\n\n  public mrnMaskForUser(orgShortId?: string): string {\n    return (\n      this.mrnMCP + \"user:\" + this.idpNamespace + \":\" + (orgShortId ? orgShortId : this.orgShortId()) + \":\"\n    );\n  }\n\n  public mrnMaskForSpecification(): string {\n    // TODO Temp check until mrn-service is ready\n    return (\n      this.mrnMCP +\n      \"service:\" +\n      this.idpNamespace +\n      \":\" +\n      this.orgShortId() +\n      \":specification:\"\n    );\n    //return \"urn:mrn:[mcp|stm]:service:specification:\" + this.orgShortId() + ':';\n  }\n\n  public mrnMaskForInstance(orgShortId?: string): string {\n    return (\n      this.mrnMCP +\n      \"service:\" +\n      this.idpNamespace +\n      \":\" +\n      (orgShortId ? orgShortId : this.orgShortId()) +\n      \":instance:\"\n    );\n  }\n\n  public mrnMaskForDesign(orgShortId?: string): string {\n    return (\n      this.mrnMCP +\n      \"service:\" +\n      this.idpNamespace +\n      \":\" +\n      (orgShortId ? orgShortId : this.orgShortId()) +\n      \":design:\"\n    );\n  }\n\n  public mrnMaskTextForInstance(): string {\n    // TODO Temp check until mrn-service is ready\n    return (\n      this.mrnMCP +\n      \"service:\" +\n      this.idpNamespace +\n      \":\" +\n      this.orgShortId() +\n      \":instance:\"\n    );\n    //return \"urn:mrn:[mcp|stm]:service:instance:\" + this.orgShortId() + ':';\n  }\n\n  public checkMrnForSpecification(specificationMrn: string): boolean {\n    // TODO Temp check until mrn-service is ready\n    const rawRegex = `^${this.mrnMaskForSpecification()}((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|\\/)*)$`;\n    console.log(rawRegex);\n    const regex = new RegExp(rawRegex);\n    return regex.test(specificationMrn);\n    //return specificationMrn.indexOf(':service:specification:' + this.orgShortId() + ':') >= 0 && specificationMrn.startsWith('urn:mrn:');\n    //return this.checkMrn(specificationMrn, this.mrnMaskForSpecification());\n  }\n\n  public checkMrnForDesign(designMrn: string): boolean {\n    // TODO Temp check until mrn-service is ready\n    const rawRegex = `^${this.mrnMaskForDesign()}((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|\\/)*)$`;\n    const regex = new RegExp(rawRegex);\n    return regex.test(designMrn);\n    //return designMrn.indexOf(':service:design:' + this.orgShortId() + ':') >= 0 && designMrn.startsWith('urn:mrn:');\n    //\treturn this.checkMrn(designMrn, this.mrnMaskForDesign());\n  }\n\n  public checkMrnForInstance(instanceMrn: string): boolean {\n    // TODO Temp check until mrn-service is ready\n    const rawRegex = `^${this.mrnMaskForInstance()}((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)((([-._a-z0-9]|~)|%[0-9a-f][0-9a-f]|([!$&'()*+,;=])|:|@)|\\/)*)$`;\n    const regex = new RegExp(rawRegex, \"g\");\n    return regex.test(instanceMrn);\n    //return instanceMrn.indexOf(':service:instance:' + this.orgShortId() + ':') >= 0 && instanceMrn.startsWith('urn:mrn:');\n    //return this.checkMrn(instanceMrn, this.mrnMaskForInstance());\n  }\n\n  public checkMrn(mrn: string, validMrnMask: string): boolean {\n    try {\n      const elementIdIndex = mrn.indexOf(validMrnMask);\n      if (elementIdIndex < 0) {\n        return false;\n      }\n      var valid = true;\n      const idSplit = mrn.substring(elementIdIndex).split(\":\");\n      idSplit.forEach((idElement) => {\n        if (!idElement.toLowerCase().match(this.mrnPattern())) {\n          valid = false;\n        }\n      });\n\n      return valid;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const convertTime = (s, timeZone = 'UTC'): string => {\n  if (s) {\n    const dtFormat = new Intl.DateTimeFormat('en-GB', {\n      timeZone: timeZone,\n    });\n    return new Date(s).toISOString().slice(0, 19).replace('T', ' ');\n  }\n}","/*\n * Copyright (c) 2022 Maritime Connectivity Platform Consortium\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  staging: false,\n  irBasePath: 'https://test-api.maritimeconnectivity.net',\n  irProvider: 'MCP Consortium',\n  irContact: 'info@maritimeconnectivity.net',\n  oidcBasePath: 'https://test-maritimeid.maritimeconnectivity.net',\n  hasServiceRegistry: true,\n  srBasePath: 'https://msr-test.maritimeconnectivity.net',\n  srProvider: 'MCP Consortium',\n  srContact: 'info@maritimeconnectivity.net',\n  mpProvider: 'MCP Consortium',\n  mpContact: 'info@maritimeconnectivity.net',\n  environmentTitle: 'MCC Testbed TEST',\n  termsOfUse: 'By applying for access to the MCP testbed, you agree not to store any personal information on the platform such as names and email addresses. Please use generic names, such as \\'John Doe\\' and generic email addresses such as \\'info@company.com\\'. It does need to be a working email address though, since access will be granted through this email address. Furthermore, if anyone chooses to federate an identity registry into the MCP testbed, this should only contain test data - not actual personal information. This is due to the European Union General Data Protection Regulation (GDPR). For more information, contact the MCC secretariat.',\n  idpNamespace: 'mcc-test',\n  environmentName: 'test',\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}